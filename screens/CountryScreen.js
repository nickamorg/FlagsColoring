import React from 'react';
import { View, ImageBackground } from 'react-native';
import Svg, {G, Path, Rect, Circle, Image, Use} from 'react-native-svg';

class CountryScreen extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            colors: ['#000000', '#3C3B6E', '#FF0000', '#2200FF', '#B22234', '#46FF00', '#FFA800', '#00FFFF', '#949494', '#FFFFFF'],
            currColor: '#000000',
            appliedColors: ['#3B3B3B', '#646464', '#A2A2A2', '#847A7A', '#1F1A1A', '#81878F'],
            countryID: props.route.params.countryID
        };
      }

    changeColor(index) {
        this.state.currColor = this.state.colors[index];
        
        this.setState(this.state.appliedColors);
    }

    applySelectedColor(index) {
        this.state.appliedColors[index] = this.state.currColor;

        this.setState(this.state.appliedColors);
    }

    RenderFlagSvg(countryID) {
        switch(countryID) {
            // EU
            case 'ad':
                return  <Svg width='100%' height='100%' viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0 0h500v300H0z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0 0h340v300H0z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0 0h160v300H0z"/>
                            <Image width="130" height="140" transform="translate(185 80)" href={require('../assets/flag_badges/eu/ad.png')}/>
                        </Svg>
            case 'al':
                return <Svg width='100%' height='100%' viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M262.881,97.2c-2.917-.049-7.758.93-7.65,3.169-8.125-1.393-8.971,1.964-8.494,4.95a4.1,4.1,0,0,1,2.438-1.95,4.949,4.949,0,0,1,3.375.881,13.531,13.531,0,0,1,3,2.569,16.571,16.571,0,0,1-7.331-.15,10.308,10.308,0,0,1-3.581-1.462,22.693,22.693,0,0,1-2.663-2.737c-1.71-1.751-3.53-1.258-2.963,1.462,1.311,2.527,3.5,3.653,6.262,4.106a31.435,31.435,0,0,0,5.55.694c2.243,0,4.761-.324,6.131-.037a8.892,8.892,0,0,1-3.6,1.763c-1.877.361-4.73-1.116-6.469-1.519.221,1.463,2.066,2.831,5.7,3.544,5.971,1.3,10.932,2.288,14.212,4.069a23.274,23.274,0,0,1,6.825,5.756,13.535,13.535,0,0,1,3.281,6.731c.6,5.553-1.332,8.677-4.931,9.638a7.4,7.4,0,0,1-6.169-1.8,9.758,9.758,0,0,1-1.988-7.444c.316-1.453,1.977-5.237.563-6.019A170.839,170.839,0,0,0,244.225,114c-1.565-.592-2.854,1.534-3.356,2.363a31.379,31.379,0,0,1-22.444-14.775c-2.689-4.773-7.12.01-6.375,4.519,1.2,5.033,5.037,8.671,9.638,11.25,4.722,2.6,10.624,5.158,16.594,5.025,3.216.608,3.185,4.77-.675,5.55-7.549.048-13.57-.14-19.256-5.625-4.313-3.938-6.741.754-5.494,3.412,2.113,8.195,13.8,10.49,25.631,7.838,4.58-.758,1.838,4.149.544,4.2-4.942,3.543-13.79,7.01-21.581-.037-3.565-2.73-5.976-.435-4.65,3.506,3.457,10.276,16.682,8.118,25.762,3.056,2.337-1.3,4.458,1.728,1.613,4.031-11.292,7.89-16.938,7.98-22.031,4.95-6.376-2.515-6.937,4.558-3.15,6.881,4.21,2.582,14.922.646,22.781-4.294,3.369-2.5,3.522,1.412,1.387,2.962-9.327,8.06-13,10.183-22.725,8.869-4.821-.376-4.749,5.568-.956,7.894,5.178,3.175,15.29-2.1,23.137-8.606,3.3-1.765,3.846,1.13,2.212,4.556-4.8,6.05-9.3,9.617-13.631,11.269a17.066,17.066,0,0,1-11.456.375c-3.6-1.237-4.052,2.5-2.062,5.906,1.2,2.05,6.168,2.708,11.531.806s11.121-6.362,15.075-11.587c3.44-3.011,3.012,1.034,1.444,3.881-7.917,12.515-15.157,17.158-24.694,16.369-4.229-.718-5.189,2.57-2.494,5.606,4.732,3.925,10.65,3.8,15.825-.075,4.6-4.436,13.4-13.988,18.019-19.106,3.253-2.593,4.292-.037,3.338,5.231-.868,3.017-3.041,6.194-8.962,8.512-4.045,2.309-1.007,5.491,2.025,5.55,1.669.033,5.058-1.918,7.65-4.837,3.411-3.84,3.613-6.419,5.494-12.394,1.777-2.913,4.95-1.553,4.95,1.5-1.522,5.985-2.829,7.058-5.906,9.506-2.943,2.763,2.049,3.684,3.731,2.55,4.866-3.28,6.643-7.523,8.269-11.381,1.174-2.785,4.578-1.435,3,3.113-3.772,10.868-9.969,15.147-20.812,17.344-1.1.2-1.769.844-1.387,2.119,1.455,1.511,2.913,2.882,4.369,4.387-6.705,1.952-12.152,3.049-18.863,5.007-3.292-2.158-5.952-3.989-9.244-6.15-.868-2.029-1.273-5.127-6.131-2.944-3.292-1.52-4.811-.963-6.637.563,2.637.1,3.785.8,4.819,2.006,1.35,3.556,4.463,3.9,7.65,2.887,2.073,1.746,3.177,3.086,5.25,4.837-3.87-.132-6.565-.2-10.425-.319-3.684-3.956-6.625-3.739-9.262-.637-2.01.309-2.862.352-4.238,2.794,2.163-.888,3.524-1.154,4.463-.187,3.917,2.271,6.476,1.764,8.419,0,3.779.231,7.185.427,10.969.675-1.39,1.181-3.3,1.808-4.688,3-5.676-1.624-8.639.562-9.637,5.194a10.587,10.587,0,0,0-.787,5.794,7.246,7.246,0,0,1,3.056-4.388c5.059,1.285,6.962-.78,7.238-3.806,2.439-1.99,6.116-2.429,8.55-4.444,2.846.911,4.221,1.475,7.088,2.381,1.019,3.1,3.325,4.323,7.069,3.525,4.457.14,3.67,1.969,4.031,3.431,1.184-2.1,1.151-4.144-1.594-6-1-2.713-3.212-3.948-6.113-2.381-2.731-.775-3.448-1.889-6.169-2.663,6.881-2.193,11.762-2.687,18.638-4.875,1.721,1.624,3.085,2.789,4.819,4.237.914.545,1.788.683,2.325,0,4.308-6.236,6.233-11.732,10.237-15.844,1.53-1.7,3.463-4,5.606-4.556a3.257,3.257,0,0,1,3.225.806c.839.915,1.5,2.6,1.219,5.119-.4,3.612-1.274,4.753-2.288,6.919a26.044,26.044,0,0,1-3.525,5.156c-2.546,3.317-5.905,5.247-7.894,6.544-3.977,2.593-5.658,1.458-8.738,1.294-3.98.447-5.039,2.385-1.781,5.063a12.242,12.242,0,0,0,8.006,1.369c1.91-.353,4.145-2.818,5.738-4.144,1.793-2.071,4.765.385,2.737,2.794-3.684,4.377-7.364,7.263-11.906,7.2-4.773.642-3.88,3.324-.712,4.631,5.7,2.353,10.848-2.054,13.462-4.95,2.017-2.207,3.45-2.293,3.094,1.125-2,6.188-4.74,8.579-9.206,8.888-3.623-.336-3.662,2.46-1.013,4.35,6.036,4.178,10.408-2.937,12.45-7.237,1.455-3.879,3.688-2.035,3.919,1.163.03,4.272-1.9,7.759-7.069,12.131,3.955,6.3,8.565,12.71,12.525,19.031l12-133.684-12-21.121c-1.25-1.154-5.477-6.134-6.581-6.825-.4-.43-.648-.734-.056-.956a22.947,22.947,0,0,1,2.812-.619c-2.545-2.549-4.726-3.367-9.544-4.762,1.174-.5,2.316-.209,5.775-.375a18.913,18.913,0,0,0-8.4-6.375,61.6,61.6,0,0,0,5.719-4.162,53.9,53.9,0,0,1-12.187-2.344,23.55,23.55,0,0,0-7.481-2.137Zm.431,5.231c2.374,0,3.844.814,3.844,1.8,0,1-1.47,1.819-3.844,1.819s-3.863-.89-3.863-1.894c0-.986,1.5-1.725,3.863-1.725Z" transform="translate(-42.825 -38.879)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M55.819,183.356c-2.917.049-7.758-.93-7.65-3.169-8.125,1.393-8.971-1.964-8.494-4.95a4.1,4.1,0,0,0,2.438,1.95,4.949,4.949,0,0,0,3.375-.881,13.531,13.531,0,0,0,3-2.569,16.571,16.571,0,0,0-7.331.15,10.309,10.309,0,0,0-3.581,1.462,22.694,22.694,0,0,0-2.663,2.737c-1.71,1.751-3.53,1.258-2.963-1.462,1.311-2.527,3.5-3.653,6.262-4.106a31.435,31.435,0,0,1,5.55-.694c2.243,0,4.761.324,6.131.037a8.892,8.892,0,0,0-3.6-1.762c-1.877-.361-4.73,1.116-6.469,1.519.221-1.463,2.066-2.831,5.7-3.544,5.971-1.3,10.932-2.288,14.212-4.069a23.274,23.274,0,0,0,6.825-5.756,13.535,13.535,0,0,0,3.281-6.731c.6-5.553-1.332-8.677-4.931-9.637a7.4,7.4,0,0,0-6.169,1.8,9.758,9.758,0,0,0-1.988,7.444c.316,1.453,1.977,5.237.563,6.019a170.839,170.839,0,0,1-20.156,9.412c-1.565.592-2.854-1.534-3.356-2.363a31.379,31.379,0,0,0-22.444,14.775c-2.689,4.773-7.12-.01-6.375-4.519,1.2-5.033,5.037-8.671,9.638-11.25,4.722-2.6,10.624-5.158,16.594-5.025,3.216-.608,3.185-4.77-.675-5.55-7.549-.048-13.57.14-19.256,5.625-4.313,3.938-6.741-.754-5.494-3.412,2.113-8.195,13.8-10.49,25.631-7.838,4.58.758,1.838-4.149.544-4.2-4.942-3.543-13.79-7.01-21.581.038-3.565,2.73-5.976.435-4.65-3.506,3.457-10.276,16.682-8.118,25.762-3.056,2.337,1.3,4.458-1.728,1.613-4.031-11.292-7.89-16.938-7.98-22.031-4.95-6.376,2.515-6.937-4.558-3.15-6.881,4.21-2.582,14.922-.646,22.781,4.294,3.369,2.5,3.522-1.412,1.387-2.962-9.327-8.06-13-10.183-22.725-8.869-4.821.376-4.749-5.568-.956-7.894,5.178-3.175,15.29,2.1,23.137,8.606,3.3,1.765,3.846-1.13,2.212-4.556-4.8-6.05-9.3-9.617-13.631-11.269a17.066,17.066,0,0,0-11.456-.375c-3.6,1.237-4.052-2.5-2.062-5.906,1.2-2.05,6.168-2.708,11.531-.806s11.121,6.362,15.075,11.587c3.44,3.011,3.012-1.034,1.444-3.881C26.752,85.866,19.512,81.224,9.975,82.013c-4.229.718-5.189-2.57-2.494-5.606,4.732-3.925,10.65-3.8,15.825.075,4.6,4.436,13.4,13.988,18.019,19.106,3.253,2.593,4.292.037,3.338-5.231-.868-3.017-3.041-6.194-8.962-8.512-4.045-2.309-1.007-5.491,2.025-5.55,1.669-.033,5.058,1.918,7.65,4.837,3.411,3.84,3.613,6.419,5.494,12.394,1.777,2.913,4.95,1.553,4.95-1.5-1.522-5.985-2.829-7.058-5.906-9.506-2.943-2.763,2.049-3.684,3.731-2.55,4.866,3.28,6.643,7.523,8.269,11.381,1.174,2.785,4.578,1.435,3-3.113C61.141,77.37,54.943,73.091,44.1,70.894c-1.1-.2-1.769-.844-1.387-2.119,1.455-1.511,2.913-2.882,4.369-4.387-6.705-1.952-12.152-3.049-18.863-5.007-3.292,2.158-5.952,3.989-9.244,6.15-.868,2.029-1.273,5.127-6.131,2.944-3.292,1.52-4.811.963-6.637-.563,2.637-.1,3.785-.8,4.819-2.006,1.35-3.556,4.463-3.9,7.65-2.887,2.073-1.746,3.177-3.086,5.25-4.837-3.87.132-6.565.2-10.425.319-3.684,3.956-6.625,3.739-9.262.637-2.01-.309-2.862-.352-4.237-2.794,2.163.888,3.524,1.154,4.463.187,3.917-2.271,6.476-1.764,8.419,0,3.779-.231,7.185-.427,10.969-.675-1.39-1.181-3.3-1.808-4.688-3-5.676,1.624-8.639-.562-9.637-5.194a10.587,10.587,0,0,1-.787-5.794,7.246,7.246,0,0,0,3.056,4.388c5.059-1.285,6.962.78,7.238,3.806,2.439,1.99,6.116,2.429,8.55,4.444,2.846-.911,4.221-1.475,7.088-2.381,1.019-3.1,3.325-4.323,7.069-3.525,4.457-.14,3.67-1.969,4.031-3.431,1.184,2.1,1.151,4.144-1.594,6-1,2.713-3.212,3.948-6.113,2.381-2.731.775-3.448,1.889-6.169,2.663,6.881,2.193,11.762,2.687,18.638,4.875,1.721-1.624,3.085-2.789,4.819-4.237.914-.545,1.788-.683,2.325,0,4.308,6.236,6.233,11.732,10.238,15.844,1.53,1.7,3.463,4,5.606,4.556a3.257,3.257,0,0,0,3.225-.806c.839-.915,1.5-2.6,1.219-5.119-.4-3.612-1.274-4.753-2.288-6.919A26.046,26.046,0,0,0,72.15,59.25C69.6,55.933,66.245,54,64.256,52.706c-3.977-2.593-5.658-1.458-8.738-1.294-3.98-.447-5.039-2.385-1.781-5.062a12.242,12.242,0,0,1,8.006-1.369c1.91.353,4.145,2.818,5.738,4.144,1.793,2.071,4.765-.385,2.737-2.794-3.684-4.377-7.364-7.263-11.906-7.2-4.773-.642-3.88-3.324-.712-4.631,5.7-2.353,10.848,2.054,13.462,4.95,2.017,2.207,3.45,2.293,3.094-1.125-2-6.188-4.739-8.579-9.206-8.887-3.623.336-3.662-2.46-1.012-4.35,6.036-4.178,10.408,2.937,12.45,7.238,1.455,3.879,3.688,2.035,3.919-1.163.03-4.272-1.9-7.759-7.069-12.131C77.192,12.73,81.8,6.322,85.763,0l12,133.684-12,21.121c-1.25,1.154-5.477,6.134-6.581,6.825-.4.43-.648.734-.056.956a22.95,22.95,0,0,0,2.812.619c-2.545,2.549-4.726,3.367-9.544,4.762,1.174.5,2.316.209,5.775.375a18.913,18.913,0,0,1-8.4,6.375,61.6,61.6,0,0,1,5.719,4.162A53.9,53.9,0,0,0,63.3,181.223a23.55,23.55,0,0,1-7.481,2.138Zm.431-5.231c2.374,0,3.844-.814,3.844-1.8,0-1-1.47-1.819-3.844-1.819s-3.863.89-3.863,1.894C52.388,177.386,53.886,178.125,56.25,178.125Z" transform="translate(335.762 241.679) rotate(180)"/>
                        </Svg>
            case 'at':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="100" transform="translate(0 100)"/>
                        </Svg>
            case 'be':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'bg':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'by':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="600" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="600" height="100" transform="translate(0 200)"/>
                            <Image width="67" height="300" href={require('../assets/flag_badges/eu/by.png')}/>
                        </Svg>
            case 'ch':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                                <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                                <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="187.5" height="56.25" transform="translate(156.25 121.875)"/>
                                <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="56.25" height="187.5" transform="translate(221.875 56.25)"/>
                        </Svg>
            case 'cy':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M337.036,431.969a.509.509,0,0,1-.173-.122l-.062-.059a10.676,10.676,0,0,1-.791-.822c-.666-.757-1.559-1.864-2.345-2.842-1.557-1.941-2.844-3.614-3.087-3.929l-.4-.516-3.884-1.2-2.835-1.322,1.515-1.7,5.2,2.228,3.883.8,7.182,5.282-.005,0c-.014.012-1.044.869-2.068,1.8-.457.415-1.032.948-1.439,1.392a5.513,5.513,0,0,0-.465.57,1.276,1.276,0,0,0-.126.235l.446-.277.484.376-.984.092-.045.01Zm-26.67-8.01a19.817,19.817,0,0,1-9.947-2.783l0,0v0a5.121,5.121,0,0,1,1.439-1.548,9.221,9.221,0,0,1,5.55-1.575h.059c3.35,0,7.451,1.139,12.186,3.385a18.015,18.015,0,0,1-9.283,2.527l.005.005ZM295.681,420.7a2.12,2.12,0,0,1-1.585-.667,3.221,3.221,0,0,1-.711-1.439,7.333,7.333,0,0,1-.176-2.109,2.174,2.174,0,0,1,.781-.177h.056a3.149,3.149,0,0,1,2.669,2.168,2.175,2.175,0,0,1,.137,1.534,1.209,1.209,0,0,1-1.17.685Zm25.84-2.995c-8.68-1.24-12.358-4.378-13.917-6.792a7.854,7.854,0,0,1-1.317-4.98v-.007l.007,0a5.771,5.771,0,0,1,1.329-.147c2.309,0,8.215,1.161,13.9,11.921l0,.007-.01-.005Zm-17.79-1.72c-3.708,0-6.531-.64-8.391-1.9a5.151,5.151,0,0,1-1.843-2.062,3.379,3.379,0,0,1-.3-1.012,11.348,11.348,0,0,1,3.883-.825c.191-.009.384-.014.587-.015,2.866,0,7.224.935,11.823,5.39l0,0h-.005a45.01,45.01,0,0,1-5.765.42Zm-17.955-.69c-3.91,0-9.281-1.194-12.632-4.544l0,0,.01,0a39.245,39.245,0,0,1,7.762-1.031q.366-.009.738-.009c3.666,0,6.472.711,8.341,2.112a2.47,2.47,0,0,1,1.089,1.391,1.141,1.141,0,0,1-.528,1.075c-.842.635-2.346.974-4.473,1.008l-.3.01Zm-12.67-6.5a1.6,1.6,0,0,1-1.24-.583,2.941,2.941,0,0,1-.554-1.261,7.136,7.136,0,0,1-.145-1.837v-.009a1.5,1.5,0,0,1,.609-.137h0a1.892,1.892,0,0,1,1.294.579,3.482,3.482,0,0,1,.844,1.323,2.016,2.016,0,0,1,.09,1.318.957.957,0,0,1-.9.6Zm29.265-.66a2.12,2.12,0,0,1-1.585-.667,3.221,3.221,0,0,1-.711-1.439,7.333,7.333,0,0,1-.176-2.109,2.174,2.174,0,0,1,.781-.177h.056a3.149,3.149,0,0,1,2.669,2.168,2.175,2.175,0,0,1,.137,1.534,1.206,1.206,0,0,1-1.17.685Zm-14.255-.59c-7.868-.277-11.952-2.514-13.992-4.342a9.142,9.142,0,0,1-2.12-2.723,5.818,5.818,0,0,1-.454-1.219l.01,0a6.715,6.715,0,0,1,1.943-.289l.184,0c2.654,0,8.056,1.115,14.426,8.577v.005Zm8.545-.8c-6.331-.964-9.917-3.681-11.811-5.793a12.089,12.089,0,0,1-2.607-4.369,9.312,9.312,0,0,1,1.95-.234c.085,0,.173,0,.262,0s.182,0,.277,0c3.184.069,8.967,1.512,11.927,10.392h.005Zm-32.5-3.04A24.69,24.69,0,0,1,258.18,403c-3.314-.829-4.736-2.094-5.345-3.01a3.16,3.16,0,0,1-.516-1.267,2.132,2.132,0,0,1-.016-.536l.016-.005a22.61,22.61,0,0,1,5.232-.664c.12,0,.24,0,.362,0a21.891,21.891,0,0,1,4.282.415,13.573,13.573,0,0,1,8.026,5.07l0,0h-.007a24.818,24.818,0,0,1-6.06.71Zm14.7-5.34a2.12,2.12,0,0,1-1.586-.652,3.247,3.247,0,0,1-.71-1.454,7.2,7.2,0,0,1-.176-2.092,2.173,2.173,0,0,1,.781-.177h.056a3.155,3.155,0,0,1,2.669,2.169,2.125,2.125,0,0,1,.122,1.517,1.178,1.178,0,0,1-1.155.69Zm-11.05-1.515a24.1,24.1,0,0,1-5.983-2.612c-2.772-1.707-6.163-4.725-6.577-9.415v0l.007,0a3.579,3.579,0,0,1,.639-.077c.053,0,.109,0,.167,0a7.67,7.67,0,0,1,4.573,1.792c2.61,1.99,5.02,5.46,7.175,10.325Zm7.215-.265a19.512,19.512,0,0,1-4.734-3.042,30.379,30.379,0,0,1-8.358-11.665,3.851,3.851,0,0,1,1.443-.359c.051,0,.1,0,.153,0,.075,0,.152,0,.232,0,1.206.034,3.042.535,5.077,2.732,2.338,2.523,4.425,6.67,6.2,12.326l.005.016-.015-.005Zm-18.695-.545c-2.411,0-3.236-1.307-3.479-1.87a3.893,3.893,0,0,1-.277-1.854v-.01a5.311,5.311,0,0,1,1.2-.157h.082a4.959,4.959,0,0,1,4.042,1.921c.128.189.518.847.2,1.361-.26.4-.85.61-1.765.61Zm-5.34-6.735a31.966,31.966,0,0,1-5.571-.476,5.783,5.783,0,0,1-4.007-3.678,12.768,12.768,0,0,1-.9-3.127h.006c6.641.2,9.778,2.135,11.239,3.729a5.856,5.856,0,0,1,1.6,3.461h0c-.01,0-.945.09-2.37.09Zm6.915-6.91c-.009-.011-.767-.949-1.516-2.114a7.634,7.634,0,0,1-1.514-3.542c0-1.008-.237-3.133-.379-4.309-.179-1.492-.36-2.77-.375-2.879l.007,0c.169.061,4.154,1.557,4.154,5.3s-.369,7.507-.372,7.544v.005H257.9Zm-5.165-.355a.806.806,0,0,1-.125-.01,20.382,20.382,0,0,1-5.536-2.409,23.662,23.662,0,0,1-5.81-4.4c-1.1-1.256-1.752-3.229-1.94-5.863a21.791,21.791,0,0,1,.043-3.582,2.07,2.07,0,0,1,.658-.1,5.788,5.788,0,0,1,3.095,1.287,24.853,24.853,0,0,1,3.245,2.757,49.711,49.711,0,0,1,3.6,3.986l.016.02c.133.238,1.268,2.286,2.154,4.279a13.768,13.768,0,0,1,1.012,2.873,1.552,1.552,0,0,1,0,.891.45.45,0,0,1-.193.224.542.542,0,0,1-.22.045Z" transform="translate(-96.636 -180.844)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M97.764,0a.509.509,0,0,0-.173.122l-.062.059A10.683,10.683,0,0,0,96.737,1c-.666.757-1.559,1.864-2.345,2.842-1.557,1.941-2.844,3.614-3.087,3.929l-.4.516-3.883,1.2L84.19,10.81l1.515,1.7,5.2-2.228,3.883-.8,7.182-5.282-.005,0c-.014-.012-1.044-.869-2.068-1.8-.456-.415-1.032-.948-1.439-1.391A5.516,5.516,0,0,1,98,.44,1.277,1.277,0,0,1,97.871.2l.446.277L98.8.106,97.816.014,97.771,0ZM71.094,8.01a19.817,19.817,0,0,0-9.947,2.783l0,0v0a5.121,5.121,0,0,0,1.439,1.548,9.221,9.221,0,0,0,5.55,1.575h.059c3.35,0,7.451-1.139,12.186-3.385A18.015,18.015,0,0,0,71.1,8.01L71.1,8ZM56.409,11.265a2.12,2.12,0,0,0-1.585.667,3.221,3.221,0,0,0-.711,1.439,7.333,7.333,0,0,0-.176,2.109,2.174,2.174,0,0,0,.781.177h.056a3.149,3.149,0,0,0,2.669-2.169,2.175,2.175,0,0,0,.137-1.533,1.209,1.209,0,0,0-1.17-.685Zm25.84,2.995c-8.68,1.24-12.359,4.378-13.917,6.792a7.855,7.855,0,0,0-1.317,4.98v.007l.007,0a5.77,5.77,0,0,0,1.329.146c2.309,0,8.215-1.161,13.9-11.921l0-.007-.01.005Zm-17.79,1.72c-3.708,0-6.531.64-8.391,1.9a5.151,5.151,0,0,0-1.843,2.063,3.38,3.38,0,0,0-.3,1.012,11.348,11.348,0,0,0,3.883.825c.191.009.385.014.587.015,2.866,0,7.224-.935,11.823-5.39l0,0H70.22a45.015,45.015,0,0,0-5.765-.42ZM46.5,16.67c-3.91,0-9.281,1.194-12.632,4.544l0,0,.01,0a39.243,39.243,0,0,0,7.762,1.031q.366.009.738.01c3.666,0,6.472-.711,8.341-2.113a2.47,2.47,0,0,0,1.089-1.391,1.141,1.141,0,0,0-.528-1.075c-.842-.635-2.346-.975-4.473-1.008l-.3-.01Zm-12.67,6.5a1.6,1.6,0,0,0-1.24.583,2.941,2.941,0,0,0-.554,1.261,7.136,7.136,0,0,0-.145,1.837v.009A1.5,1.5,0,0,0,32.5,27h0a1.892,1.892,0,0,0,1.294-.579,3.482,3.482,0,0,0,.844-1.322,2.016,2.016,0,0,0,.09-1.318.957.957,0,0,0-.9-.6Zm29.265.66a2.12,2.12,0,0,0-1.585.667,3.221,3.221,0,0,0-.711,1.439,7.333,7.333,0,0,0-.176,2.109,2.174,2.174,0,0,0,.781.177h.056a3.149,3.149,0,0,0,2.669-2.169,2.175,2.175,0,0,0,.137-1.533,1.206,1.206,0,0,0-1.17-.685Zm-14.255.59c-7.868.277-11.952,2.514-13.992,4.342a9.142,9.142,0,0,0-2.12,2.723,5.817,5.817,0,0,0-.454,1.219l.01,0a6.715,6.715,0,0,0,1.943.29l.184,0c2.654,0,8.055-1.115,14.426-8.577v-.005Zm8.545.795c-6.331.964-9.917,3.682-11.811,5.792a12.09,12.09,0,0,0-2.607,4.369,9.312,9.312,0,0,0,1.95.234c.085,0,.173,0,.262,0s.182,0,.277,0c3.184-.07,8.967-1.512,11.928-10.393h.005Zm-32.5,3.04a24.69,24.69,0,0,0-5.981.714c-3.314.829-4.736,2.094-5.346,3.01a3.16,3.16,0,0,0-.516,1.267,2.134,2.134,0,0,0-.016.536l.016.005a22.612,22.612,0,0,0,5.232.664c.12,0,.24,0,.363,0a21.892,21.892,0,0,0,4.282-.415,13.574,13.574,0,0,0,8.027-5.07l0,0h-.007a24.819,24.819,0,0,0-6.06-.71Zm14.7,5.34A2.121,2.121,0,0,0,38,34.247a3.247,3.247,0,0,0-.71,1.454,7.2,7.2,0,0,0-.176,2.092,2.174,2.174,0,0,0,.781.177h.056A3.155,3.155,0,0,0,40.619,35.8a2.125,2.125,0,0,0,.122-1.517,1.178,1.178,0,0,0-1.155-.69ZM28.534,35.11a24.1,24.1,0,0,0-5.984,2.613c-2.772,1.706-6.163,4.725-6.577,9.415v0l.007,0a3.577,3.577,0,0,0,.639.077c.053,0,.109,0,.167,0a7.67,7.67,0,0,0,4.574-1.792c2.61-1.99,5.02-5.46,7.175-10.325Zm7.215.265a19.512,19.512,0,0,0-4.734,3.042,30.378,30.378,0,0,0-8.358,11.665,3.852,3.852,0,0,0,1.443.359c.051,0,.1,0,.153,0,.075,0,.152,0,.232,0,1.206-.034,3.042-.535,5.077-2.732,2.338-2.523,4.425-6.67,6.2-12.326l.005-.016-.015.005Zm-18.695.545c-2.411,0-3.236,1.307-3.479,1.87a3.893,3.893,0,0,0-.277,1.854v.01a5.311,5.311,0,0,0,1.2.157h.083a4.959,4.959,0,0,0,4.042-1.921c.128-.189.518-.847.2-1.361-.26-.4-.85-.61-1.765-.61Zm-5.34,6.735a31.966,31.966,0,0,0-5.571.476,5.783,5.783,0,0,0-4.007,3.678,12.768,12.768,0,0,0-.9,3.127h.006c6.641-.2,9.778-2.135,11.239-3.729a5.856,5.856,0,0,0,1.6-3.461h0c-.01,0-.945-.09-2.37-.09Zm6.915,6.91c-.009.011-.768.949-1.516,2.114A7.634,7.634,0,0,0,15.6,55.221c0,1.008-.237,3.133-.378,4.309-.179,1.492-.36,2.77-.375,2.878l.007,0c.169-.061,4.154-1.557,4.154-5.3s-.369-7.507-.372-7.544v-.005h-.005Zm-5.165.355a.806.806,0,0,0-.125.01A20.383,20.383,0,0,0,7.8,52.339a23.663,23.663,0,0,0-5.81,4.4C.894,57.991.241,59.963.053,62.6A21.791,21.791,0,0,0,.1,66.179a2.07,2.07,0,0,0,.658.1,5.788,5.788,0,0,0,3.094-1.287,24.851,24.851,0,0,0,3.245-2.757,49.714,49.714,0,0,0,3.6-3.986l.016-.02c.133-.238,1.268-2.286,2.154-4.279a13.766,13.766,0,0,0,1.012-2.873,1.552,1.552,0,0,0,0-.891.45.45,0,0,0-.193-.224.541.541,0,0,0-.22-.045Z" transform="translate(324.453 251.125) rotate(180)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M453.043,95.458l-1.177.469-.461.184-1.427-.079-1.336.642-2.37,1.619-.1.075-.884.23-.82-.354-.466.212-.16.96-.444.689-.546.383-1.892.193-1.6.822-2.075-.555-.964.378-2.049,1.846-1.047.5-.366-.021-1.389-.072-.586.192-.876.846-1.658.129-.517.357-.809,1.63-.876.9-.5.106-.543-.2-.409.072-.185,1.043-.4.437-1.109.382-.887.739-.778.4-1.042-.026h-.24l-1.038.573-1.953.171-.812.775-.179.165-.379.229-.62.37-.152.092-.747-.133-.875.346-.354-.544-.605.363-.8.035-1-.445-.761-.339-.556.08-.194.97-.02.1-.585.779-1.092.661-.148.193-1.242,1.6-2.361,2.483-2,1.014-2.069.63-1.448,1.19-3.8,1.883-6,2.984-1.227.393-1.76.281-3.139,1.156-2.77.836-.154.047-.548.166-3.9,1.182-1.818-.192-1.077.391-2.8-.311-1.948.038-1.233.257-2.319,1.112-3.914,1.881-1.293,1.183-2.013,1.05-2.358.747.005-.991-.014-.042-.818.258-.59.186-1.913.295H349.6l-.661-.192-.1.035-3.909,1.288-4.359.421-2.182.7-1.63-.026-1.019.3-2,.244-.714-.191-.161-.044-5.875.255-2.686-.3-1.282.292-2.148-.723-3.135-.364-.732-.219-1.648-.489-.745.43-.558.059-1.333-.483-.48-.012-1.1.4-.633-.162-.589-.469-1.38-.205-.841-.707-4.7.623-1.275-.375-4.277-1.246-.68.035-.848.635-1.274.464-1.106.288-1.506.052-1.749-.459-1.8-.874-.667-.159-1.487.15-.455.041-2.733-1.466-3.521-2.2-2.389-1.148-.9-.145-.12.426.445,1.4.151,1.387-.046,1.282-.025.794.223.712.862.956.359.96.263,2.642,0,2.681-.419,4.275-.142.651-.5,2.215-.457,2.035-1.773,5.417-.487.672-1.2.815-2.71,1.844-1.995,1.15-.632.261-1.62.122-1.009-.052-1.257-.68-1.233-.318-1.616-1.162-1.8-.372-1.97-1.139-.513-.617-1.073-.1-1.488-.447v0l-.547-.163-.378-.11h0l-1.9-.052-1.77-.817-.932-.225-1.273-.064-1.333.619v0l-.676.314-.853-.339-.617.038-.7,1.057-.1.164-.482.255-.6-.008-.469-.012-.508.222-.684.3v0l-.6.263-.295.128-.005,0-.182.036-.322.056-.4.076-.705-.412-.375-.221-.628-.128-.339.245-.066,1.15-.309.689-.98.867-1,.878-.695,1.023-1.838,4.195-1.152,1.693-.357.395-1.2,1.328-1.068.828-2.461,1.908-2.329.87-2.007.41-.975,0-1.848-.246-1.661-.51-1.825-1.141-2-1.608-2.9-2.862-.41-.247-.086-.057-.913-.584-.677.018-.265.437-.145.632-.122.56-.332,3.184.024.185.174,1.311,2.2,3.075.679,1.633.111.186.454.762.346.581.035.059.752,2.244-.529,1.267.267.848-.668.518-.122.732,1.976,2.477.431,1.092-.482,1.514-.768.835-.214.229.108.64.909.818,1.545,1.375.823,2.043.627.548.728-.155.4.309.614-.01.6.6.391.189.618.308.489.636.108,1.956.911,2.43.014,1.318.005.187.567.974.178.769-.3,2.035.723.653.784-.16.506.08.813.677.984,1.5.963-.141.611.294,2.951,2.667.669.338.037.021.481.242.6.6.928-.616.1-.01,1.009-.089.443.3.852.574,1.117-.014,2.422.742,1.06.271,2.13,1.324.905.56.536.436.712.581,1.422.612,1.22.292.661.157.5.192.012-.031.007,0-.012.031,2.642,1.012,1.431.334,1.324.488.964.352.707.012,1-.841.969-.056.8.2.785-.132,1.242-.766.242-.359.881-.419,2.972-.369.868.282,2.23-.97,1.494.415,1.322-.469,2.889.642.768.54.859.982.1,0,.956.018-.4.665,1.262,1.324,1.139,1.723.077.227.829,2.432.616.861.431,1.2.021.784-.67.511-.11.292-.038.108.136.327.253-.138.482-.266.583-.09,1.033.11.682.072,1.077-.535.714-.355,1.146.493,1.26-.014.529.236,1.5.679.764.072.283-.186.18-.428-.092-.5-.572-.661-1.266-1.469-.518-.755-.395-1.093-.122-1.4-.087-.943.157-1.238.34-.442.25-.984h0l.064-.258.7-.933,1.862-1.2,2-1.791,1.581-1.042,1.63-.706.044-.2.181.073,4.146-1.41.069-.008,1.846-.322,12.46.878.462-.139,0,0,.415-1.165.223-.216.148-.141,1.37-.6.641-.092,1.778.439.728.18,1.166-.654.827.014,1.708-.933,1.056.027.4-.161,2.056-1.477,1.98-.568.515-.274.181-.1,2.03-1.072,1.29-.99,1.113-.592,1.219-.314,3.19-.225.641-1.069,1.372-.183.828-.935.948-.385.68-.979.57-.82.8-.46,2.55-.16,3.023.374.4-.242.683-2.437.715-.458,1.926-2.806.007-1.023,0-.854.316-1.216-.215-2.2.255-2.223,1.2-2.825,1.055-1.139,1.7-1.15.865-.376,1.225-.206v0l.18-.031.312-.053,4.216-.058c.059-.044,1.534-.021,1.534-.021l1.406-.019,3.557.633.253.044,1.2.389,1.387,1.079,1.468,1.434.276.268.951.4.288.126.785-.126,1.118-.583.844-.714,1.151-.628.028-.04.647-.974.02-.02.014,0v-.005l-.011,0,.255-.387,2.224-.867,2.615-.152.294-.159.164-.087.691-.811.647-.005,1.568.567,1.1-.219.875.35.68-.081,1.283-.152,1.377.969.8.1L398,185.849l.147.024.076.014.162.027.336-.1.5-.145.066-.02.063.087.322.454.441.063.522-.7-.207-.316-.078-.115-1.01-.206-.908-1.551.864-.93-1.355-1.663-.225-.275-.077-.117-.469-.712-2.373-3.617-3.091-2.467v0l-1.082-.866-.007,0-.379-.3-1.651-1.679-1.179-1.565-.155-.337-.243-.531-.707-1.539-1.231-.948-1-1.1-.049-.064-2.07-2.813-.34-.471-.489-.283-1.033-.007-.1-.1-.058-.061.035-.037.5-.492.552-.139.238-.544-1.054-3.052-.007-.107-.078-.975.859-4.428.11-.539,1.464-2.979.907-.743.99-1.946.848-1.244.813-.791.142-.084,1.467-.888,1.233-.173,1.174-.165,2.049.632,1.951-.038.38-.04.885-.1,1.456-.458.687-.424.357-.546.743-2.493.239-.794.458-.862,2.653-3.054,2.005-1.855,4.509-3.307,2.207-1.32,1.127-.673,10.063-4.473,2.615-2.651,1.362-1.378,2.41-1.618,2.82-1.156,2.427-1.921.53-.667.668-2.151.556-.134.5-1.087.143-.309,1.98-1.4.224-.112,7.694-3.855,1.118.154.6-.9,2.238-.376.412-.07.552-.276.47-.8v-.158l.065-2.136.478-.577.26-1.408.246-.325.257-.338.634-.446-.11-.265Z" transform="translate(-80.628 -45.72)"/>
                        </Svg>              
            case 'cz':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M250,150,0,0V300Z"/>
                        </Svg>
              

            case 'dk':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="54.054" height="300" transform="translate(162.162)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="42.857" transform="translate(0 128.571)"/>
                        </Svg>
            case 'ee':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'es':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,125H500V275H0Z" transform="translate(0 -50)"/>
                            <Image width="114" height="114" transform="translate(103 93)" href={require('../assets/flag_badges/eu/es.png')}/>
                        </Svg>
            case 'fi':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="81.818" transform="translate(0 109.091)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="83.333" height="300" transform="translate(138.889)"/>
                        </Svg>
            case 'fr':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.2" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.6" height="300"/>
                        </Svg>
            case 'gb':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} id="Path_9105" data-name="Path 9105" d="M0,0,499.523,300m0-300L0,300" stroke="#fff" stroke-width="50.896"/>
                            <Path id="Path_9106" data-name="Path 9106" d="M0,0,499.523,300m0-300L0,300" stroke="#c8102e" stroke-width="33.93"/>
                            <Path id="Path_9108" data-name="Path 9108" d="M249.762,0V300M0,150H499.523" stroke="#fff" stroke-width="84.826"/>
                            <Path id="Path_9109" data-name="Path 9109" d="M249.762,0V300M0,150H499.523" stroke="#c8102e" stroke-width="50.896"/>
                        </Svg>
            case 'gr':
                return <Svg d="surface1" width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="Rectangle_261" data-name="Rectangle 261" width="500" height="300" fill="#0d5eaf"/>
                            <Path id="Path_9110" data-name="Path 9110" d="M92.591,0V183.332M0,83.332H185.187m0-33.332H500M185.187,116.668H500M0,183.332H500M0,250H500" fill="none" stroke="#fff" stroke-width="33.333"/>
                        </Svg>
            case 'hr':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <Image width="140" height="186" transform="translate(180 57)" href={require('../assets/flag_badges/eu/hr.png')}/> 
                        </Svg>
            case 'hu':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'ie':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'is':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M140,0h80V300H140M0,116.667H500v66.667H0"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M160,0h40V300H160M0,133.333H500v33.333H0"/>
                        </Svg>
            case 'it':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'li':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150" transform="translate(0 150)"/>
                            <Image width="105" height="91" transform="translate(59 26)" href={require('../assets/flag_badges/eu/li.png')}/>
                        </Svg>              
            case 'lt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'lu':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'lv':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,240H500v60H0" transform="translate(0 -120)"/>
                        </Svg>
            case 'me':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M16,16H486V286H16Z" transform="translate(-1 -1)"/>
                            <Image width="168" height="194" transform="translate(165 54)" href={require('../assets/flag_badges/eu/me.png')}/>
                        </Svg>
            case 'mk':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H75L250,144.643,425,0h75L0,300H75L250,155.357,425,300h75ZM500,120v60L0,120H0v60ZM225,0l25,128.571L275,0Zm0,300,25-128.571L275,300Z"/>
                            <Circle onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} cx="48.214" cy="48.214" r="48.214" transform="translate(201.786 101.786)" stroke={this.state.appliedColors[0]} strokeWidth="10"/>
                        </Svg>
            case 'mt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="250" height="300"/>
                            <Image width="84" height="84" transform="translate(11 11)" href={require('../assets/flag_badges/eu/mt.png')}/>
                        </Svg>
            case 'nl':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'no':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                    <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                    <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="90.909" height="300" transform="translate(136.364)"/>
                    <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="75" transform="translate(0 112.5)"/>
                    <Rect onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} width="45.455" height="300" transform="translate(159.091)"/>
                    <Rect onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} width="500" height="37.5" transform="translate(0 131.25)"/>
                </Svg>
            case 'pl':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                        </Svg>
            case 'pt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="180" height="300"/>
                            <Image height="152" transform="translate(122 74)" href={require('../assets/flag_badges/eu/pt.png')}/>
                        </Svg>
            case 'ro':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'rs':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H500V200H0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H500V100H0Z"/>
                            <Image width="115" height="226" transform="translate(120 25)" href={require('../assets/flag_badges/eu/rs.png')}/>
                        </Svg>
            case 'se':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="63.553" height="300" transform="translate(155.054)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="59.927" transform="translate(0 119.855)"/>
                        </Svg>
            case 'si':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect width="500" height="300" fill="#ec2227"/>
                            <Rect width="500" height="200" fill="#035ea5"/>
                            <Rect width="500" height="100" fill="#fff"/>
                            <Image width="78" height="100" transform="translate(111 50)" href={require('../assets/flag_badges/eu/si.png')}/>
                        </Svg>
            case 'sk':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <G id="Group_409" data-name="Group 409" transform="translate(107.301 68.25)">
                                <Path d="M67.21,164.865C40.32,151.913,1.855,126.2,1.855,75.349S4.287,1.365,4.287,1.365H130.135s2.432,23.128,2.432,73.984S94.1,151.913,67.21,164.865Z" transform="translate(-1.855 -1.365)" fill="#fff"/>
                                <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M61.922,151.5C37.252,139.617,1.963,116.031,1.963,69.374S4.194,1.5,4.194,1.5H119.651s2.231,21.218,2.231,67.874S86.594,139.617,61.922,151.5Z" transform="translate(3.433 5.25)"/>
                                <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M44.3,51.827c6.68.108,19.713.37,31.318-3.514,0,0-.307,4.153-.307,8.99s.307,8.991.307,8.991c-10.645-3.562-23.79-3.636-31.317-3.541v25.77H33.748V62.754c-7.527-.1-20.673-.021-31.318,3.541,0,0,.306-4.152.306-8.991s-.306-8.99-.306-8.99c11.6,3.883,24.638,3.622,31.318,3.514V35.643A74.058,74.058,0,0,0,8.967,39.2s.307-4.153.307-8.991-.307-8.991-.307-8.991a74.056,74.056,0,0,0,24.754,3.557c-.313-10.249-3.3-23.166-3.3-23.166s6.145.479,8.6.479,8.6-.479,8.6-.479-2.985,12.917-3.3,23.165a74.041,74.041,0,0,0,24.754-3.557s-.307,4.153-.307,8.991.307,8.991.307,8.991A74.06,74.06,0,0,0,44.3,35.642V51.826Z" transform="translate(26.332 10.565)"/>
                                <Path onPress={() => this.applySelectedColor(5)} fill={this.state.appliedColors[5]} d="M50.233,3.291c-12.424,0-19.078,17.234-19.078,17.234a15.23,15.23,0,0,0-13.828-8.172c-6.858,0-11.912,6.1-15.125,11.75,12.477,19.852,32.384,32.1,48.031,39.641C65.882,56.206,85.8,43.958,98.28,24.1c-3.213-5.649-8.267-11.75-15.125-11.75a15.266,15.266,0,0,0-13.844,8.172S62.657,3.291,50.233,3.291Z" transform="translate(15.119 93.006)"/>
                            </G>
                        </Svg>
            case 'va':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="250" height="300"/>
                            <Image width="102" height="161" transform="translate(324 70)" href={require('../assets/flag_badges/eu/va.png')}/>
                        </Svg>
            // NA
            case 'ca':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="250" height="300" transform="translate(125)" />
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M402.339,46.875,385.283,85.05c-1.935,4.149-5.4,3.764-8.871,1.447l-12.348-7.673,9.2,58.636c1.935,10.713-4.274,10.713-7.339,6.081L344.378,114.59l-3.5,14.7a4.217,4.217,0,0,1-4.839,3.476l-27.251-6.875,7.158,31.227c1.532,6.948,2.727,9.825-1.547,11.658l-9.713,5.478L351.6,219.98a8.252,8.252,0,0,1,2.134,7.657l-4.106,16.168c16.152-2.234,30.624-5.6,46.785-7.666,1.427-.183,3.815,2.642,3.805,4.626L398.076,300h7.853l-1.236-59.107c-.01-1.984,2.157-4.936,3.584-4.753,16.16,2.07,30.633,5.431,46.785,7.666l-4.106-16.168a8.252,8.252,0,0,1,2.134-7.657L500,174.255l-9.713-5.478c-4.274-1.833-3.079-4.709-1.547-11.658l7.158-31.227-27.251,6.875a4.217,4.217,0,0,1-4.839-3.476l-3.5-14.7-21.551,28.951c-3.065,4.632-9.274,4.632-7.339-6.081l9.2-58.636L428.275,86.5c-3.468,2.317-6.935,2.7-8.871-1.447" transform="translate(-152.343 -18.75)"/>
                        </Svg>
            case 'mx':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="100.002" transform="translate(0 100.002)"/>
                            <Image width="93" height="90" transform="translate(204 105)" href={require('../assets/flag_badges/na/mx.png')}/>
                        </Svg>

            // SA
            case 'ar':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} y="100" width="500" height="100"/>
                            <G transform="translate(15 0) scale(0.6)">
                                <G id="rays">
                                    <Path id="ray1" stroke-width="1.1116" stroke="#85340a" fill="#f6b40e" d="m396.84 251.31l28.454 61.992s0.4896 1.185 1.28 0.8586c0.7902-0.3267 0.2988-1.5116 0.2988-1.5116l-23.715-63.956m-0.68 24.12c-0.3465 9.4278 5.4526 14.613 4.6943 23.032-0.7569 8.42 3.8673 13.18 4.9396 16.454 1.0733 3.2744-1.16 5.2323-0.198 5.6982 0.96336 0.4662 3.07-2.1207 2.3833-6.7756-0.68675-4.6549-4.2204-6.0368-3.3898-16.32 0.83-10.283-4.206-12.678-2.98-22.058"/>
                                    <Use href="#ray1" transform="rotate(22.5 400,250)"/>
                                    <Use href="#ray1" transform="rotate(45 400,250)"/>
                                    <Use href="#ray1" transform="rotate(67.5 400,250)"/>
                                    <Path id="ray2" fill="#85340a" d="m404.31 274.41c0.45334 9.0538 5.5867 13.063 4.5787 21.314 2.2133-6.5249-3.1233-11.583-2.82-21.22m-7.6487-23.757l19.487 42.577-16.329-43.887"/>
                                    <Use href="#ray2" transform="rotate(22.5 400,250)"/>
                                    <Use href="#ray2" transform="rotate(45 400,250)"/>
                                    <Use href="#ray2" transform="rotate(67.5 400,250)"/>
                                </G>
                                <Use href="#rays" transform="rotate(90 400,250)"/>
                                <Use href="#rays" transform="rotate(180 400,250)"/>
                                <Use href="#rays" transform="rotate(270 400,250)"/>
                                <Circle r="27.778" stroke="#85340a" cy="250" cx="400" stroke-width="1.5" fill="#f6b40e"/>
                                <Path id="loweyecontour" fill="#843511" d="m409.47 244.06c-1.8967 0.00003-3.7131 0.82183-4.7812 2.5312 2.1367 1.9227 6.8565 2.1318 10.062-0.21875-1.3883-1.4954-3.3845-2.3125-5.2812-2.3125zm-0.0312 0.4375c1.8462-0.0335 3.5717 0.81446 3.8125 1.6562-2.1367 2.3504-5.5508 2.1463-7.6875 0.4375 0.9348-1.4957 2.4391-2.0677 3.875-2.0938z"/>
                                <Use href="#uppalpebra" transform="matrix(-1 0 0 1 800.25 0)"/>
                                <Use href="#eyebrow_nose" transform="matrix(-1 0 0 1 800.25 0)"/>
                                <Use href="#pupil" transform="translate(18.862)"/>
                                <Use href="#lowpalpebra" transform="matrix(-1 0 0 1 800.25 0)"/>
                                <Path d="m395.75 253.84c-0.91341 0.16668-1.5625 0.97727-1.5625 1.9062 0 1.0614 0.87748 1.9062 1.9375 1.9062 0.62667 0 1.2025-0.2968 1.5625-0.8125 0.73952 0.55614 1.7646 0.61511 2.3125 0.625 0.0843 0.002 0.19312 0 0.25 0 0.54791-0.01 1.573-0.0689 2.3125-0.625 0.36 0.5157 0.93583 0.8125 1.5625 0.8125 1.06 0 1.9375-0.84488 1.9375-1.9062 0-0.92898-0.64918-1.7396-1.5625-1.9062 0.513 0.1809 0.84375 0.6765 0.84375 1.2188 0 0.7074-0.57124 1.2812-1.2812 1.2812-0.6804 0-1.2413-0.54015-1.2812-1.2188-0.20862 0.41637-1.0341 1.6551-2.6562 1.7188-1.6222-0.0636-2.4476-1.3024-2.6562-1.7188-0.04 0.6786-0.60085 1.2188-1.2812 1.2188-0.71001 0-1.2812-0.57385-1.2812-1.2812 0-0.54225 0.33075-1.0378 0.84375-1.2188z" fill="#85340a"/>
                                <Path d="m397.84 259.53c-2.138 0-2.9829 1.9368-4.9062 3.2188 1.0687-0.42633 1.9096-1.2693 3.4062-2.125 1.496-0.85442 2.7717 0.1875 3.625 0.1875h0.0312c0.8532 0 2.129-1.0416 3.625-0.1875 1.4967 0.8559 2.3688 1.6987 3.4375 2.125-1.9233-1.282-2.7996-3.2188-4.9375-3.2188-0.4266 0-1.2716 0.23055-2.125 0.65625h-0.0312c-0.85334-0.42642-1.6983-0.65625-2.125-0.65625z" fill="#85340a"/>
                                <Path d="m397.12 262.06c-0.8439 0.0374-1.9596 0.20675-3.5625 0.6875 3.8473-0.85434 4.6962 0.4375 6.4062 0.4375h0.0312c1.71 0 2.5588-1.292 6.4062-0.4375-4.2744-1.282-5.1242-0.4375-6.4062-0.4375h-0.0312c-0.80125 0-1.4372-0.3124-2.8438-0.25z" fill="#85340a"/>
                                <Path d="m393.75 262.72c-0.24819 0.003-0.51871 0.005-0.8125 0.0312 4.488 0.42766 2.3306 3 7.0312 3h0.0312c4.7007 0 2.5745-2.5724 7.0625-3-4.7007-0.4266-3.2146 2.3438-7.0625 2.3438h-0.0312c-3.6075 0-2.4959-2.4215-6.2188-2.375z" fill="#85340a"/>
                                <Path d="m403.85 269.66c0-2.1234-1.7233-3.8465-3.8463-3.8465-2.1233 0-3.8463 1.723-3.8463 3.8465 0.423-1.781 2.0166-3.0393 3.8463-3.0393 1.8333 0 3.424 1.2586 3.8463 3.0393v0 0z" fill="#85340a"/>
                                <Path id="eyebrow_nose" fill="#85340a" d="m382.73 244.02c4.9146-4.2729 11.11-4.9147 14.53-1.7086 0.837 1.1207 1.3733 2.319 1.5934 3.5696 0.4302 2.433-0.3303 5.0617-2.2367 7.7559 0.2151-0.001 0.6435 0.2124 0.8568 0.4266 1.6967-3.244 2.2967-6.5761 1.74-9.7454-0.1458-0.828-0.3735-1.643-0.6696-2.4357-4.7007-3.8452-11.11-4.2729-15.811 2.1377z"/>
                                <Path id="uppalpebra" fill="#85340a" d="m390.42 242.74c2.7767 0 3.4186 0.6417 4.7007 1.71 1.2833 1.0683 1.9233 0.8541 2.1367 1.0683 0.2124 0.2142 0 0.8541-0.4266 0.6399s-1.2833-0.6399-2.5633-1.7086c-1.2833-1.0696-2.5633-1.0683-3.8463-1.0683-3.8463 0-5.983 3.2046-6.4094 2.9907-0.4266-0.2142 2.1367-3.6325 6.4094-3.6325z"/>
                                <Use href="#loweyecontour" transform="translate(-19.181)"/>
                            </G>
                    </Svg>
                
            case 'aw':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,12H500V28.667H0V45.333H500V62H0Z" transform="translate(0 188)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M55.939,35.106,45.523,1.35,35.106,35.106,1.35,45.523,35.106,55.939,45.523,89.7,55.939,55.939,89.7,45.523Z" transform="translate(21.144 21.144)" stroke="#fff" stroke-miterlimit="10" stroke-width="0.2"/>
                        </Svg>  
            case 'bo':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H500V200H0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H500V100H0Z"/>
                            <Image width="121" height="88" transform="translate(189 106)" href={require('../assets/flag_badges/sa/bo.png')}/>
                        </Svg>
            case 'br':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M36.379,150,214,263.57,391.621,150,214,36.43Zm0,0" transform="translate(36)"/>
                            <Image width="150" height="150" transform="translate(175 75)" href={require('../assets/flag_badges/sa/br.png')}/>
                        </Svg>
            case 'co':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="225"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="150"/>
                        </Svg>
            case 'cl':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M496,296H-4V-4H496Z" transform="translate(4 4)"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M162.667,146H496V-4H-4V146Z" transform="translate(4 4)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M146,146H-4V-4H146Z" transform="translate(4 4)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M371.072,191.459l21.754,66.952-56.953-41.379h70.4l-56.953,41.379Z" transform="translate(-296.061 -153.459)"/>
                        </Svg>
            case 'cw':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,22.5H500V60H0Z" transform="translate(0 165)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M368.292,191.459l20.036,61.664-52.455-38.11h64.838l-52.455,38.11Z" transform="translate(-268.281 -125.459)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M359.724,191.459l14.741,45.367-38.592-28.038h47.7l-38.592,28.038Z" transform="translate(-309.713 -166.459)"/>
                        </Svg>
            case 'ec':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H500V225H0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H500V150H0Z"/>
                            <Image width="134" height="151" transform="translate(183 75)" href={require('../assets/flag_badges/sa/ec.png')}/>
                        </Svg>
            case 'gd':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <G transform="translate(-717 -217)">
                                <Rect width="500" height="300" transform="translate(717 216.998)" fill="#ce1126"/>
                                <Rect width="416" height="216" transform="translate(759 258.998)" fill="#007a5e"/>
                                <Path fill="#FCD116" d="M42,42H458L42,258H458Z" transform="translate(717 216.998)"/>
                                <Circle cx="36" cy="36" r="36" transform="translate(931 330.998)" fill="#ce1126"/>
                                <Path d="M67.749,150.41c4.5,8.39,13.265,17.52,20.916,20.73.123-8.52-2.9-19.44-7.034-28.14l-13.882,7.41Z" transform="translate(717 216.998)" fill="#ce1126"/>
                                <Path fill="#FCD116" d="M60.112,121.63c6.529,13.61-16.933,46.08,22.156,53.69-4.822-6.58-7.931-17.44-6.755-26.16,8.2,3.12,16.83,12.25,20.317,19.23,10.23-37.15-26.24-34.89-35.718-46.76Z" transform="translate(717 216.998)"/>
                                <Path fill="#FCD116" d="M367.235,191.459l19.382,59.653-50.744-36.868H398.6l-50.744,36.868Z" transform="translate(599.777 142.541)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(487.326 026.841)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(612.326 026.841)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(737.326 026.841)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(487.326 284.641)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(612.326 284.641)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(737.326 284.641)"/>
                            </G>
                        </Svg>
            case 'gf':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.2" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.6" height="300"/>
                        </Svg>
            case 'gy':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M 0,0 L 500,150 L 0,300 z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M 0,13.05 L 456,150 L 0,286.95 z"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M 0,0 L 250,150 L 0,300 z"/>
                            <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M 0,17.5 L 220.85,150 L 0,282.5 z"/>
                        </Svg>
                
            case 'pe':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H166.6V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M300,0H466.6V300H300Z" transform="translate(-134)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H166.6V300H0Z" transform="translate(332.2)"/>
                            <Image width="134" height="122" transform="translate(183 89)" href={require('../assets/flag_badges/sa/pe.png')}/>
                        </Svg>
            case 'py':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <Image width="78" height="78" transform="translate(211 111)" href={require('../assets/flag_badges/sa/py.png')}/>
                        </Svg>
            case 'sr':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="180" transform="translate(0 60)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="120" transform="translate(0 90)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M392.936,191.459,428.2,300l-92.331-67.082H450L357.669,300Z" transform="translate(-142.936 -95.729)"/>
                        </Svg>
              
             case 'tt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0,347.078,300H500L152.921,0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M1.529,0,348.607,300H450.556L103.477,0Z" transform="translate(23.958)"/>
                        </Svg>
            case 'uy':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <G transform="translate(0 33.333)">
                                <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="332.334" height="33.333" transform="translate(166.667)"/>
                                <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="332.334" height="33.333" transform="translate(166.667 66.667)"/>
                                <Rect onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} width="500" height="33.333" transform="translate(0 133.333)"/>
                                <Rect onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} width="500" height="33.333" transform="translate(0 200)"/>
                            </G>
                            <G transform="translate(20.589 20.589)" onPress={() => this.applySelectedColor(5)} fill={this.state.appliedColors[5]}>
                                <G id="u" transform="translate(0 42.78)">
                                    <G id="t" transform="translate(34.511 19.964)">
                                        <G transform="matrix(0.924, 0.383, -0.383, 0.924, 16.838, 13.139)">
                                            <Path d="M8.25,0,16.5,5.5C1.833,29.333,18.333,33,5.5,44,11,31.167,0,34.833,0,12.833" transform="translate(0)"/>
                                            <Path d="M.722,0c-3.667,23.833,8.25,31.167,0,40.333" transform="translate(4.778 3.667)" fill="none" stroke="#000" stroke-miterlimit="20" stroke-width="0.066"/>
                                        </G>
                                        <Path d="M10.34,0h11l-11,60.5L-.66,0h11V60.5" transform="translate(17.893)" stroke="#000" stroke-miterlimit="20" stroke-width="0.066"/>
                                    </G>
                                    <G transform="translate(42.78 0) rotate(45)">
                                        <Use href="#t" transform="translate(-34.511 -19.964)"/>
                                    </G>
                                </G>
                                <G transform="translate(82.709) rotate(90)">
                                    <Use href="#u" transform="translate(0 -42.78)"/>
                                </G>
                                <G transform="translate(125.489 125.489) rotate(180)">
                                    <G transform="translate(0 42.78)">
                                        <Use href="#u" transform="translate(0 -42.78)"/>
                                    </G>
                                    <G transform="translate(82.709) rotate(90)">
                                        <Use href="#u" transform="translate(0 -42.78)"/>
                                    </G>
                                </G>
                                <Circle cx="20.167" cy="20.167" r="20.167" transform="translate(42.578 42.578)" stroke="#000" stroke-miterlimit="20" stroke-width="0.066"/>
                            </G>
                            <G transform="translate(68.483 72.318)" fill="#000000">
                                <G id="right" transform="translate(13.933 0)">
                                    <Path d="M12.856,2.288c-1.283,1.467-2.017-1.1-6.6-1.1S.939,3.938.206,3.388,4.056-.462,5.523-.645,11.206.638,12.856,2.288M7.539,3.938c1.283,1.1.183,3.483-1.1,3.483s-3.667-2.2-2.567-3.667" transform="translate(2.911 0.661)"/>
                                    <Path d="M.209,2.127C.392-.073,2.226-.44,5.159-.44s4.217,2.2,5.317,2.75C9.192,2.31,8.092.477,5.159.477S2.226.477.209,2.31m.55.367c.733-1.1,1.65,1.1,3.667,1.1a6.69,6.69,0,0,0,4.4-1.467c1.283-.917-1.833,2.2-3.85,2.2S.209,3.41.759,2.677" transform="translate(4.191 4.122)"/>
                                    <Path d="M11.128,3.087c2.383-1.283.917-3.117,0-3.483.367.367,1.833,2.2,0,3.483m-10.267,11c1.1,0,1.467-.367,2.933-.367S8.745,15.737,10.762,15c-4.217,1.65-2.567.55-9.9.55H-.055m11.55,1.1a21.373,21.373,0,0,0-2.017-2.933c1.467,1.1,1.833,1.65,2.017,2.933M.862,18.487c4.583,0,3.85-.917,9.9-3.483-4.4.55-5.317,2.017-9.9,2.017H-.055M.862,11.7c1.283,0,1.65-.917,3.117-.917a8.3,8.3,0,0,1,4.4,1.283,2.617,2.617,0,0,0-2.017-1.65c-1.467-.183-.917-2.567-2.567-2.933,0,.733.55.55.733,1.65,0,.917-1.65.917-2.017,0C2.878,10.6,1.778,10.6.862,10.6" transform="translate(0.055 4.812)"/>
                                </G>
                                <Use href="#right" transform="translate(30 0.399) scale(-1,1)"/>
                                <Path d="M1.591.836c-.917,0-3.3.55,0,.55s.917-.55,0-.55" transform="translate(13.259 24.113)"/>
                            </G>
                        </Svg>
              
            case 've':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H500V200H0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H500V100H0Z"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="matrix(0.999, 0.035, -0.035, 0.999, 143.36, 165.8)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(166.068 135.409) rotate(22)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(198.983 113.915) rotate(42)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(238.566 104.1) rotate(62)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(278.66 107.1) rotate(82)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(296.252 114.569) rotate(30)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(329.214 134.099) rotate(50)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="matrix(0.999, -0.035, 0.035, 0.999, 331.451, 166.672)"/>
                        </Svg>
            // AF
            case 'eg':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <Image width="71" height="96" transform="translate(215 102)" href={require('../assets/flag_badges/af/eg.png')}/>
                        </Svg>
            case 'ao':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                            <G transform="translate(207.516 75.011)">
                                <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M231.115,91.82a58.5,58.5,0,1,1-43.2,103.424l-8.558,10.441A72,72,0,1,0,232.526,78.394Z" transform="translate(-179.358 -75.011)"/>
                                <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} transform="translate(84.569 67.344)">
                                    <Path d="M302.624,142.355a77.969,77.969,0,0,1,0,15.291L287.7,156.175a63.07,63.07,0,0,0,0-12.35Z" transform="translate(-263.927 -142.355)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(21.923 24.574) rotate(22.5)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(10.812 46.574) rotate(45)"/>
                                </G>
                                <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} transform="translate(53.475 36.098) rotate(-67.5)">
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(23.77)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(21.923 24.574) rotate(22.5)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(10.812 46.574) rotate(45)"/>
                                </G>
                                <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} transform="translate(67.601 108.027) rotate(67.5)">
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(23.77)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(21.923 24.574) rotate(22.5)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(10.812 46.574) rotate(45)"/>
                                </G>
                                <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M199.324,114.656h51.352L209.133,144.84,225,96l15.867,48.84Z" transform="translate(-179.358 -75.011)"/>
                                <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M287.879,216.315c3.838,3.714,9.006,7.375,12.755,10.7s6.62,6.093,8.945,9.872c3.407,5.539-.419,11.812-5.724,8.13-2.869-1.991-4.672-7.367-9.067-11.815-3.255-2.771-5.82-5.677-14-7.078-.393-.068-.508-.9-.2-1.26Z" transform="translate(-179.358 -75.011)"/>
                                <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M231.361,197.845l20.247,11.972,4.4,17.079,23.241-1.761,10.212-11.972-37.854-26.234Z" transform="translate(-179.358 -75.011)"/>
                                <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M279.663,223.689c-26.035-17.314-42.591-26.663-67.542-40.85-9.8-5.573-25.023-19.582-13.016-43.02.756,15.387,61.569,57.623,87.265,75.988Z" transform="translate(-179.358 -75.011)"/>
                                <Path onPress={() => this.applySelectedColor(0)} stroke={this.state.appliedColors[0]} d="M216.086,167.519c20.045,18.891,45.29,34.3,67.812,51.336" transform="translate(-179.358 -75.011)" fill="none" stroke-linecap="round" stroke-width="1.5"/>
                                <Circle onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} id="c" cx="1.008" cy="1.008" r="1.008" transform="translate(110.034 146.278)"/>
                                <Circle onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} cx="1.008" cy="1.008" r="1.008" transform="translate(117.454 152.743)"/>
                                <Circle onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} cx="1.008" cy="1.008" r="1.008" transform="translate(123.972 159.368)"/>
                            </G>
                        </Svg>
            case 'mg':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'ne':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="Rectangle_289" data-name="Rectangle 289" width="500" height="300" fill="#0db02b"/>
                            <Rect id="Rectangle_290" data-name="Rectangle 290" width="500" height="200" fill="#fff"/>
                            <Rect id="Rectangle_291" data-name="Rectangle 291" width="500" height="100" fill="#e05206"/>
                            <Circle id="Ellipse_120" data-name="Ellipse 120" cx="42.5" cy="42.5" r="42.5" transform="translate(207.5 107.5)" fill="#e05206"/>
                        </Svg>
        }
    }
    
    image = { uri: "https://reactjs.org/logo-og.png" };


    render() {
        return (
            <View style={{height: '100%', backgroundColor: '#0FBEBE'}}>
                <ImageBackground source={require('../es_back.png')} style={{height: '100%', width:'100%'}} imageStyle={{ width:'100%', height:'100%', opacity:0.3, resizeMode : 'repeat', overflow : 'visible', backfaceVisibility: 'visible', flex : 1}}>
                    <View style={{height: '20%', paddingTop: 20}}>
                        <View style={{height: '100%', flexDirection:'row', flex: 1, justifyContent: 'center'}}>
                                {/* <Svg key={0} onPress={() => { this.changeColor(0) }} width={this.state.colors[0] == this.state.currColor? '50' : '40' } height={this.state.colors[0] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[0]}/>
                                </Svg> */}
                                <Svg key={1} onPress={() => { this.changeColor(1) }} width={this.state.colors[1] == this.state.currColor? '50' : '40' } height={this.state.colors[1] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[1]}/>
                                </Svg>
                                <Svg key={2} onPress={() => { this.changeColor(2) }} width={this.state.colors[2] == this.state.currColor? '50' : '40' } height={this.state.colors[2] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[2]}/>
                                </Svg>
                                <Svg key={3} onPress={() => { this.changeColor(3) }} width={this.state.colors[3] == this.state.currColor? '50' : '40' } height={this.state.colors[3] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[3]}/>
                                </Svg>
                                <Svg key={4} onPress={() => { this.changeColor(4) }} width={this.state.colors[4] == this.state.currColor? '50' : '40' } height={this.state.colors[4] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[4]}/>
                                </Svg>
                                <Svg key={5} onPress={() => { this.changeColor(5) }} width={this.state.colors[5] == this.state.currColor? '50' : '40' } height={this.state.colors[5] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[5]}/>
                                </Svg>
                                <Svg key={6} onPress={() => { this.changeColor(6) }} width={this.state.colors[6] == this.state.currColor? '50' : '40' } height={this.state.colors[6] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[6]}/>
                                </Svg>
                                <Svg key={7} onPress={() => { this.changeColor(7) }} width={this.state.colors[7] == this.state.currColor? '50' : '40' } height={this.state.colors[7] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[7]}/>
                                </Svg>
                                <Svg key={8} onPress={() => { this.changeColor(8) }} width={this.state.colors[8] == this.state.currColor? '50' : '40' } height={this.state.colors[8] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[8]}/>
                                </Svg>
                                <Svg key={9} onPress={() => { this.changeColor(9) }} width={this.state.colors[9] == this.state.currColor? '50' : '40' } height={this.state.colors[9] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[9]}/>
                                </Svg>
                            </View>
                    </View>
                    <View style={{height: '80%', flexDirection: 'row', flex: 1, justifyContent: 'center'}}>
                        <View style={{height:'100%', width: '15%', flex: 1, justifyContent: 'center', alignItems: 'center'}}>
                            <Svg width="55" height="55" viewBox="0 0 55 55">
                                <Path d="M27.5,0A27.5,27.5,0,1,1,0,27.5,27.5,27.5,0,0,1,27.5,0Z" fill="#006994"/>
                                <G transform="translate(-39 -66)">
                                    <Path d="M18.549,8.576a16.493,16.493,0,0,0-10.875,4.1L2,7V21.185H16.185L10.48,15.48a12.563,12.563,0,0,1,20.048,5.706l3.735-1.229A16.571,16.571,0,0,0,18.549,8.576Z" transform="translate(49 76.815)" fill="#e3e340"/>
                                </G>
                            </Svg>

                            <View style={{height:20}}></View>

                            <Svg width="55" height="55" viewBox="0 0 55 55">
                                <Path d="M27.5,0A27.5,27.5,0,1,1,0,27.5,27.5,27.5,0,0,1,27.5,0Z" fill="#006994"/>
                                <G transform="translate(-597 -32)">
                                    <Path d="M28.1,7.326,25.769,5l-9.222,9.222L7.326,5,5,7.326l9.222,9.222L5,25.769,7.326,28.1l9.222-9.222L25.769,28.1,28.1,25.769l-9.222-9.222Z" transform="translate(608 43)" fill="#e3e340"/>
                                </G>
                            </Svg>
                        </View>
                        <View style={{height:'100%', width: '70%'}}>
                                {this.RenderFlagSvg(this.state.countryID)}
                        </View>
                        <View style={{height:'100%', width: '15%', flex: 1, justifyContent: 'center', alignItems: 'center'}}>
                            <Svg width="55" height="55" viewBox="0 0 55 55">
                            <Path d="M27.5,0A27.5,27.5,0,1,1,0,27.5,27.5,27.5,0,0,1,27.5,0Z" fill="#006994"/>
                                <G transform="translate(-524 -32)">
                                    <Path d="M13.545,24.8,5.936,17.194,3.4,19.73,13.545,29.875,35.284,8.136,32.748,5.6Z" transform="translate(534 41.4)" fill="#e3e340"/>
                                </G>
                            </Svg>
                        </View>
                    </View>
                </ImageBackground>
            </View>
        )
    }
}

export default CountryScreen;