import React from 'react';
import { View, ImageBackground } from 'react-native';
import Svg, {G, Path, Rect, Circle, Image, Use, Polygon, Defs, ClipPath, Polyline} from 'react-native-svg';

class CountryScreen extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            colors: ['#000000', '#3C3B6E', '#FF0000', '#2200FF', '#B22234', '#46FF00', '#FFA800', '#00FFFF', '#949494', '#FFFFFF'],
            currColor: '#000000',
            appliedColors: ['#3B3B3B', '#646464', '#A2A2A2', '#847A7A', '#1F1A1A', '#81878F'],
            countryID: props.route.params.countryID
        };
      }

    changeColor(index) {
        this.state.currColor = this.state.colors[index];
        
        this.setState(this.state.appliedColors);
    }

    applySelectedColor(index) {
        this.state.appliedColors[index] = this.state.currColor;

        this.setState(this.state.appliedColors);
    }

    RenderFlagSvg(countryID) {
        console.log("countryID " + countryID);
        switch(countryID) {
            // EU
            case 'ad':
                return  <Svg width='100%' height='100%' viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0 0h500v300H0z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0 0h340v300H0z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0 0h160v300H0z"/>
                            <Image width="130" height="140" transform="translate(185 80)" href={require('../assets/flag_badges/eu/ad.png')}/>
                        </Svg>
            case 'al':
                return <Svg width='100%' height='100%' viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M262.881,97.2c-2.917-.049-7.758.93-7.65,3.169-8.125-1.393-8.971,1.964-8.494,4.95a4.1,4.1,0,0,1,2.438-1.95,4.949,4.949,0,0,1,3.375.881,13.531,13.531,0,0,1,3,2.569,16.571,16.571,0,0,1-7.331-.15,10.308,10.308,0,0,1-3.581-1.462,22.693,22.693,0,0,1-2.663-2.737c-1.71-1.751-3.53-1.258-2.963,1.462,1.311,2.527,3.5,3.653,6.262,4.106a31.435,31.435,0,0,0,5.55.694c2.243,0,4.761-.324,6.131-.037a8.892,8.892,0,0,1-3.6,1.763c-1.877.361-4.73-1.116-6.469-1.519.221,1.463,2.066,2.831,5.7,3.544,5.971,1.3,10.932,2.288,14.212,4.069a23.274,23.274,0,0,1,6.825,5.756,13.535,13.535,0,0,1,3.281,6.731c.6,5.553-1.332,8.677-4.931,9.638a7.4,7.4,0,0,1-6.169-1.8,9.758,9.758,0,0,1-1.988-7.444c.316-1.453,1.977-5.237.563-6.019A170.839,170.839,0,0,0,244.225,114c-1.565-.592-2.854,1.534-3.356,2.363a31.379,31.379,0,0,1-22.444-14.775c-2.689-4.773-7.12.01-6.375,4.519,1.2,5.033,5.037,8.671,9.638,11.25,4.722,2.6,10.624,5.158,16.594,5.025,3.216.608,3.185,4.77-.675,5.55-7.549.048-13.57-.14-19.256-5.625-4.313-3.938-6.741.754-5.494,3.412,2.113,8.195,13.8,10.49,25.631,7.838,4.58-.758,1.838,4.149.544,4.2-4.942,3.543-13.79,7.01-21.581-.037-3.565-2.73-5.976-.435-4.65,3.506,3.457,10.276,16.682,8.118,25.762,3.056,2.337-1.3,4.458,1.728,1.613,4.031-11.292,7.89-16.938,7.98-22.031,4.95-6.376-2.515-6.937,4.558-3.15,6.881,4.21,2.582,14.922.646,22.781-4.294,3.369-2.5,3.522,1.412,1.387,2.962-9.327,8.06-13,10.183-22.725,8.869-4.821-.376-4.749,5.568-.956,7.894,5.178,3.175,15.29-2.1,23.137-8.606,3.3-1.765,3.846,1.13,2.212,4.556-4.8,6.05-9.3,9.617-13.631,11.269a17.066,17.066,0,0,1-11.456.375c-3.6-1.237-4.052,2.5-2.062,5.906,1.2,2.05,6.168,2.708,11.531.806s11.121-6.362,15.075-11.587c3.44-3.011,3.012,1.034,1.444,3.881-7.917,12.515-15.157,17.158-24.694,16.369-4.229-.718-5.189,2.57-2.494,5.606,4.732,3.925,10.65,3.8,15.825-.075,4.6-4.436,13.4-13.988,18.019-19.106,3.253-2.593,4.292-.037,3.338,5.231-.868,3.017-3.041,6.194-8.962,8.512-4.045,2.309-1.007,5.491,2.025,5.55,1.669.033,5.058-1.918,7.65-4.837,3.411-3.84,3.613-6.419,5.494-12.394,1.777-2.913,4.95-1.553,4.95,1.5-1.522,5.985-2.829,7.058-5.906,9.506-2.943,2.763,2.049,3.684,3.731,2.55,4.866-3.28,6.643-7.523,8.269-11.381,1.174-2.785,4.578-1.435,3,3.113-3.772,10.868-9.969,15.147-20.812,17.344-1.1.2-1.769.844-1.387,2.119,1.455,1.511,2.913,2.882,4.369,4.387-6.705,1.952-12.152,3.049-18.863,5.007-3.292-2.158-5.952-3.989-9.244-6.15-.868-2.029-1.273-5.127-6.131-2.944-3.292-1.52-4.811-.963-6.637.563,2.637.1,3.785.8,4.819,2.006,1.35,3.556,4.463,3.9,7.65,2.887,2.073,1.746,3.177,3.086,5.25,4.837-3.87-.132-6.565-.2-10.425-.319-3.684-3.956-6.625-3.739-9.262-.637-2.01.309-2.862.352-4.238,2.794,2.163-.888,3.524-1.154,4.463-.187,3.917,2.271,6.476,1.764,8.419,0,3.779.231,7.185.427,10.969.675-1.39,1.181-3.3,1.808-4.688,3-5.676-1.624-8.639.562-9.637,5.194a10.587,10.587,0,0,0-.787,5.794,7.246,7.246,0,0,1,3.056-4.388c5.059,1.285,6.962-.78,7.238-3.806,2.439-1.99,6.116-2.429,8.55-4.444,2.846.911,4.221,1.475,7.088,2.381,1.019,3.1,3.325,4.323,7.069,3.525,4.457.14,3.67,1.969,4.031,3.431,1.184-2.1,1.151-4.144-1.594-6-1-2.713-3.212-3.948-6.113-2.381-2.731-.775-3.448-1.889-6.169-2.663,6.881-2.193,11.762-2.687,18.638-4.875,1.721,1.624,3.085,2.789,4.819,4.237.914.545,1.788.683,2.325,0,4.308-6.236,6.233-11.732,10.237-15.844,1.53-1.7,3.463-4,5.606-4.556a3.257,3.257,0,0,1,3.225.806c.839.915,1.5,2.6,1.219,5.119-.4,3.612-1.274,4.753-2.288,6.919a26.044,26.044,0,0,1-3.525,5.156c-2.546,3.317-5.905,5.247-7.894,6.544-3.977,2.593-5.658,1.458-8.738,1.294-3.98.447-5.039,2.385-1.781,5.063a12.242,12.242,0,0,0,8.006,1.369c1.91-.353,4.145-2.818,5.738-4.144,1.793-2.071,4.765.385,2.737,2.794-3.684,4.377-7.364,7.263-11.906,7.2-4.773.642-3.88,3.324-.712,4.631,5.7,2.353,10.848-2.054,13.462-4.95,2.017-2.207,3.45-2.293,3.094,1.125-2,6.188-4.74,8.579-9.206,8.888-3.623-.336-3.662,2.46-1.013,4.35,6.036,4.178,10.408-2.937,12.45-7.237,1.455-3.879,3.688-2.035,3.919,1.163.03,4.272-1.9,7.759-7.069,12.131,3.955,6.3,8.565,12.71,12.525,19.031l12-133.684-12-21.121c-1.25-1.154-5.477-6.134-6.581-6.825-.4-.43-.648-.734-.056-.956a22.947,22.947,0,0,1,2.812-.619c-2.545-2.549-4.726-3.367-9.544-4.762,1.174-.5,2.316-.209,5.775-.375a18.913,18.913,0,0,0-8.4-6.375,61.6,61.6,0,0,0,5.719-4.162,53.9,53.9,0,0,1-12.187-2.344,23.55,23.55,0,0,0-7.481-2.137Zm.431,5.231c2.374,0,3.844.814,3.844,1.8,0,1-1.47,1.819-3.844,1.819s-3.863-.89-3.863-1.894c0-.986,1.5-1.725,3.863-1.725Z" transform="translate(-42.825 -38.879)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M55.819,183.356c-2.917.049-7.758-.93-7.65-3.169-8.125,1.393-8.971-1.964-8.494-4.95a4.1,4.1,0,0,0,2.438,1.95,4.949,4.949,0,0,0,3.375-.881,13.531,13.531,0,0,0,3-2.569,16.571,16.571,0,0,0-7.331.15,10.309,10.309,0,0,0-3.581,1.462,22.694,22.694,0,0,0-2.663,2.737c-1.71,1.751-3.53,1.258-2.963-1.462,1.311-2.527,3.5-3.653,6.262-4.106a31.435,31.435,0,0,1,5.55-.694c2.243,0,4.761.324,6.131.037a8.892,8.892,0,0,0-3.6-1.762c-1.877-.361-4.73,1.116-6.469,1.519.221-1.463,2.066-2.831,5.7-3.544,5.971-1.3,10.932-2.288,14.212-4.069a23.274,23.274,0,0,0,6.825-5.756,13.535,13.535,0,0,0,3.281-6.731c.6-5.553-1.332-8.677-4.931-9.637a7.4,7.4,0,0,0-6.169,1.8,9.758,9.758,0,0,0-1.988,7.444c.316,1.453,1.977,5.237.563,6.019a170.839,170.839,0,0,1-20.156,9.412c-1.565.592-2.854-1.534-3.356-2.363a31.379,31.379,0,0,0-22.444,14.775c-2.689,4.773-7.12-.01-6.375-4.519,1.2-5.033,5.037-8.671,9.638-11.25,4.722-2.6,10.624-5.158,16.594-5.025,3.216-.608,3.185-4.77-.675-5.55-7.549-.048-13.57.14-19.256,5.625-4.313,3.938-6.741-.754-5.494-3.412,2.113-8.195,13.8-10.49,25.631-7.838,4.58.758,1.838-4.149.544-4.2-4.942-3.543-13.79-7.01-21.581.038-3.565,2.73-5.976.435-4.65-3.506,3.457-10.276,16.682-8.118,25.762-3.056,2.337,1.3,4.458-1.728,1.613-4.031-11.292-7.89-16.938-7.98-22.031-4.95-6.376,2.515-6.937-4.558-3.15-6.881,4.21-2.582,14.922-.646,22.781,4.294,3.369,2.5,3.522-1.412,1.387-2.962-9.327-8.06-13-10.183-22.725-8.869-4.821.376-4.749-5.568-.956-7.894,5.178-3.175,15.29,2.1,23.137,8.606,3.3,1.765,3.846-1.13,2.212-4.556-4.8-6.05-9.3-9.617-13.631-11.269a17.066,17.066,0,0,0-11.456-.375c-3.6,1.237-4.052-2.5-2.062-5.906,1.2-2.05,6.168-2.708,11.531-.806s11.121,6.362,15.075,11.587c3.44,3.011,3.012-1.034,1.444-3.881C26.752,85.866,19.512,81.224,9.975,82.013c-4.229.718-5.189-2.57-2.494-5.606,4.732-3.925,10.65-3.8,15.825.075,4.6,4.436,13.4,13.988,18.019,19.106,3.253,2.593,4.292.037,3.338-5.231-.868-3.017-3.041-6.194-8.962-8.512-4.045-2.309-1.007-5.491,2.025-5.55,1.669-.033,5.058,1.918,7.65,4.837,3.411,3.84,3.613,6.419,5.494,12.394,1.777,2.913,4.95,1.553,4.95-1.5-1.522-5.985-2.829-7.058-5.906-9.506-2.943-2.763,2.049-3.684,3.731-2.55,4.866,3.28,6.643,7.523,8.269,11.381,1.174,2.785,4.578,1.435,3-3.113C61.141,77.37,54.943,73.091,44.1,70.894c-1.1-.2-1.769-.844-1.387-2.119,1.455-1.511,2.913-2.882,4.369-4.387-6.705-1.952-12.152-3.049-18.863-5.007-3.292,2.158-5.952,3.989-9.244,6.15-.868,2.029-1.273,5.127-6.131,2.944-3.292,1.52-4.811.963-6.637-.563,2.637-.1,3.785-.8,4.819-2.006,1.35-3.556,4.463-3.9,7.65-2.887,2.073-1.746,3.177-3.086,5.25-4.837-3.87.132-6.565.2-10.425.319-3.684,3.956-6.625,3.739-9.262.637-2.01-.309-2.862-.352-4.237-2.794,2.163.888,3.524,1.154,4.463.187,3.917-2.271,6.476-1.764,8.419,0,3.779-.231,7.185-.427,10.969-.675-1.39-1.181-3.3-1.808-4.688-3-5.676,1.624-8.639-.562-9.637-5.194a10.587,10.587,0,0,1-.787-5.794,7.246,7.246,0,0,0,3.056,4.388c5.059-1.285,6.962.78,7.238,3.806,2.439,1.99,6.116,2.429,8.55,4.444,2.846-.911,4.221-1.475,7.088-2.381,1.019-3.1,3.325-4.323,7.069-3.525,4.457-.14,3.67-1.969,4.031-3.431,1.184,2.1,1.151,4.144-1.594,6-1,2.713-3.212,3.948-6.113,2.381-2.731.775-3.448,1.889-6.169,2.663,6.881,2.193,11.762,2.687,18.638,4.875,1.721-1.624,3.085-2.789,4.819-4.237.914-.545,1.788-.683,2.325,0,4.308,6.236,6.233,11.732,10.238,15.844,1.53,1.7,3.463,4,5.606,4.556a3.257,3.257,0,0,0,3.225-.806c.839-.915,1.5-2.6,1.219-5.119-.4-3.612-1.274-4.753-2.288-6.919A26.046,26.046,0,0,0,72.15,59.25C69.6,55.933,66.245,54,64.256,52.706c-3.977-2.593-5.658-1.458-8.738-1.294-3.98-.447-5.039-2.385-1.781-5.062a12.242,12.242,0,0,1,8.006-1.369c1.91.353,4.145,2.818,5.738,4.144,1.793,2.071,4.765-.385,2.737-2.794-3.684-4.377-7.364-7.263-11.906-7.2-4.773-.642-3.88-3.324-.712-4.631,5.7-2.353,10.848,2.054,13.462,4.95,2.017,2.207,3.45,2.293,3.094-1.125-2-6.188-4.739-8.579-9.206-8.887-3.623.336-3.662-2.46-1.012-4.35,6.036-4.178,10.408,2.937,12.45,7.238,1.455,3.879,3.688,2.035,3.919-1.163.03-4.272-1.9-7.759-7.069-12.131C77.192,12.73,81.8,6.322,85.763,0l12,133.684-12,21.121c-1.25,1.154-5.477,6.134-6.581,6.825-.4.43-.648.734-.056.956a22.95,22.95,0,0,0,2.812.619c-2.545,2.549-4.726,3.367-9.544,4.762,1.174.5,2.316.209,5.775.375a18.913,18.913,0,0,1-8.4,6.375,61.6,61.6,0,0,1,5.719,4.162A53.9,53.9,0,0,0,63.3,181.223a23.55,23.55,0,0,1-7.481,2.138Zm.431-5.231c2.374,0,3.844-.814,3.844-1.8,0-1-1.47-1.819-3.844-1.819s-3.863.89-3.863,1.894C52.388,177.386,53.886,178.125,56.25,178.125Z" transform="translate(335.762 241.679) rotate(180)"/>
                        </Svg>
            case 'at':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="100" transform="translate(0 100)"/>
                        </Svg>
            case 'be':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'bg':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'by':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="600" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="600" height="100" transform="translate(0 200)"/>
                            <Image width="67" height="300" href={require('../assets/flag_badges/eu/by.png')}/>
                        </Svg>
            case 'ch':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                                <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                                <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="187.5" height="56.25" transform="translate(156.25 121.875)"/>
                                <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="56.25" height="187.5" transform="translate(221.875 56.25)"/>
                        </Svg>
            case 'cy':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M337.036,431.969a.509.509,0,0,1-.173-.122l-.062-.059a10.676,10.676,0,0,1-.791-.822c-.666-.757-1.559-1.864-2.345-2.842-1.557-1.941-2.844-3.614-3.087-3.929l-.4-.516-3.884-1.2-2.835-1.322,1.515-1.7,5.2,2.228,3.883.8,7.182,5.282-.005,0c-.014.012-1.044.869-2.068,1.8-.457.415-1.032.948-1.439,1.392a5.513,5.513,0,0,0-.465.57,1.276,1.276,0,0,0-.126.235l.446-.277.484.376-.984.092-.045.01Zm-26.67-8.01a19.817,19.817,0,0,1-9.947-2.783l0,0v0a5.121,5.121,0,0,1,1.439-1.548,9.221,9.221,0,0,1,5.55-1.575h.059c3.35,0,7.451,1.139,12.186,3.385a18.015,18.015,0,0,1-9.283,2.527l.005.005ZM295.681,420.7a2.12,2.12,0,0,1-1.585-.667,3.221,3.221,0,0,1-.711-1.439,7.333,7.333,0,0,1-.176-2.109,2.174,2.174,0,0,1,.781-.177h.056a3.149,3.149,0,0,1,2.669,2.168,2.175,2.175,0,0,1,.137,1.534,1.209,1.209,0,0,1-1.17.685Zm25.84-2.995c-8.68-1.24-12.358-4.378-13.917-6.792a7.854,7.854,0,0,1-1.317-4.98v-.007l.007,0a5.771,5.771,0,0,1,1.329-.147c2.309,0,8.215,1.161,13.9,11.921l0,.007-.01-.005Zm-17.79-1.72c-3.708,0-6.531-.64-8.391-1.9a5.151,5.151,0,0,1-1.843-2.062,3.379,3.379,0,0,1-.3-1.012,11.348,11.348,0,0,1,3.883-.825c.191-.009.384-.014.587-.015,2.866,0,7.224.935,11.823,5.39l0,0h-.005a45.01,45.01,0,0,1-5.765.42Zm-17.955-.69c-3.91,0-9.281-1.194-12.632-4.544l0,0,.01,0a39.245,39.245,0,0,1,7.762-1.031q.366-.009.738-.009c3.666,0,6.472.711,8.341,2.112a2.47,2.47,0,0,1,1.089,1.391,1.141,1.141,0,0,1-.528,1.075c-.842.635-2.346.974-4.473,1.008l-.3.01Zm-12.67-6.5a1.6,1.6,0,0,1-1.24-.583,2.941,2.941,0,0,1-.554-1.261,7.136,7.136,0,0,1-.145-1.837v-.009a1.5,1.5,0,0,1,.609-.137h0a1.892,1.892,0,0,1,1.294.579,3.482,3.482,0,0,1,.844,1.323,2.016,2.016,0,0,1,.09,1.318.957.957,0,0,1-.9.6Zm29.265-.66a2.12,2.12,0,0,1-1.585-.667,3.221,3.221,0,0,1-.711-1.439,7.333,7.333,0,0,1-.176-2.109,2.174,2.174,0,0,1,.781-.177h.056a3.149,3.149,0,0,1,2.669,2.168,2.175,2.175,0,0,1,.137,1.534,1.206,1.206,0,0,1-1.17.685Zm-14.255-.59c-7.868-.277-11.952-2.514-13.992-4.342a9.142,9.142,0,0,1-2.12-2.723,5.818,5.818,0,0,1-.454-1.219l.01,0a6.715,6.715,0,0,1,1.943-.289l.184,0c2.654,0,8.056,1.115,14.426,8.577v.005Zm8.545-.8c-6.331-.964-9.917-3.681-11.811-5.793a12.089,12.089,0,0,1-2.607-4.369,9.312,9.312,0,0,1,1.95-.234c.085,0,.173,0,.262,0s.182,0,.277,0c3.184.069,8.967,1.512,11.927,10.392h.005Zm-32.5-3.04A24.69,24.69,0,0,1,258.18,403c-3.314-.829-4.736-2.094-5.345-3.01a3.16,3.16,0,0,1-.516-1.267,2.132,2.132,0,0,1-.016-.536l.016-.005a22.61,22.61,0,0,1,5.232-.664c.12,0,.24,0,.362,0a21.891,21.891,0,0,1,4.282.415,13.573,13.573,0,0,1,8.026,5.07l0,0h-.007a24.818,24.818,0,0,1-6.06.71Zm14.7-5.34a2.12,2.12,0,0,1-1.586-.652,3.247,3.247,0,0,1-.71-1.454,7.2,7.2,0,0,1-.176-2.092,2.173,2.173,0,0,1,.781-.177h.056a3.155,3.155,0,0,1,2.669,2.169,2.125,2.125,0,0,1,.122,1.517,1.178,1.178,0,0,1-1.155.69Zm-11.05-1.515a24.1,24.1,0,0,1-5.983-2.612c-2.772-1.707-6.163-4.725-6.577-9.415v0l.007,0a3.579,3.579,0,0,1,.639-.077c.053,0,.109,0,.167,0a7.67,7.67,0,0,1,4.573,1.792c2.61,1.99,5.02,5.46,7.175,10.325Zm7.215-.265a19.512,19.512,0,0,1-4.734-3.042,30.379,30.379,0,0,1-8.358-11.665,3.851,3.851,0,0,1,1.443-.359c.051,0,.1,0,.153,0,.075,0,.152,0,.232,0,1.206.034,3.042.535,5.077,2.732,2.338,2.523,4.425,6.67,6.2,12.326l.005.016-.015-.005Zm-18.695-.545c-2.411,0-3.236-1.307-3.479-1.87a3.893,3.893,0,0,1-.277-1.854v-.01a5.311,5.311,0,0,1,1.2-.157h.082a4.959,4.959,0,0,1,4.042,1.921c.128.189.518.847.2,1.361-.26.4-.85.61-1.765.61Zm-5.34-6.735a31.966,31.966,0,0,1-5.571-.476,5.783,5.783,0,0,1-4.007-3.678,12.768,12.768,0,0,1-.9-3.127h.006c6.641.2,9.778,2.135,11.239,3.729a5.856,5.856,0,0,1,1.6,3.461h0c-.01,0-.945.09-2.37.09Zm6.915-6.91c-.009-.011-.767-.949-1.516-2.114a7.634,7.634,0,0,1-1.514-3.542c0-1.008-.237-3.133-.379-4.309-.179-1.492-.36-2.77-.375-2.879l.007,0c.169.061,4.154,1.557,4.154,5.3s-.369,7.507-.372,7.544v.005H257.9Zm-5.165-.355a.806.806,0,0,1-.125-.01,20.382,20.382,0,0,1-5.536-2.409,23.662,23.662,0,0,1-5.81-4.4c-1.1-1.256-1.752-3.229-1.94-5.863a21.791,21.791,0,0,1,.043-3.582,2.07,2.07,0,0,1,.658-.1,5.788,5.788,0,0,1,3.095,1.287,24.853,24.853,0,0,1,3.245,2.757,49.711,49.711,0,0,1,3.6,3.986l.016.02c.133.238,1.268,2.286,2.154,4.279a13.768,13.768,0,0,1,1.012,2.873,1.552,1.552,0,0,1,0,.891.45.45,0,0,1-.193.224.542.542,0,0,1-.22.045Z" transform="translate(-96.636 -180.844)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M97.764,0a.509.509,0,0,0-.173.122l-.062.059A10.683,10.683,0,0,0,96.737,1c-.666.757-1.559,1.864-2.345,2.842-1.557,1.941-2.844,3.614-3.087,3.929l-.4.516-3.883,1.2L84.19,10.81l1.515,1.7,5.2-2.228,3.883-.8,7.182-5.282-.005,0c-.014-.012-1.044-.869-2.068-1.8-.456-.415-1.032-.948-1.439-1.391A5.516,5.516,0,0,1,98,.44,1.277,1.277,0,0,1,97.871.2l.446.277L98.8.106,97.816.014,97.771,0ZM71.094,8.01a19.817,19.817,0,0,0-9.947,2.783l0,0v0a5.121,5.121,0,0,0,1.439,1.548,9.221,9.221,0,0,0,5.55,1.575h.059c3.35,0,7.451-1.139,12.186-3.385A18.015,18.015,0,0,0,71.1,8.01L71.1,8ZM56.409,11.265a2.12,2.12,0,0,0-1.585.667,3.221,3.221,0,0,0-.711,1.439,7.333,7.333,0,0,0-.176,2.109,2.174,2.174,0,0,0,.781.177h.056a3.149,3.149,0,0,0,2.669-2.169,2.175,2.175,0,0,0,.137-1.533,1.209,1.209,0,0,0-1.17-.685Zm25.84,2.995c-8.68,1.24-12.359,4.378-13.917,6.792a7.855,7.855,0,0,0-1.317,4.98v.007l.007,0a5.77,5.77,0,0,0,1.329.146c2.309,0,8.215-1.161,13.9-11.921l0-.007-.01.005Zm-17.79,1.72c-3.708,0-6.531.64-8.391,1.9a5.151,5.151,0,0,0-1.843,2.063,3.38,3.38,0,0,0-.3,1.012,11.348,11.348,0,0,0,3.883.825c.191.009.385.014.587.015,2.866,0,7.224-.935,11.823-5.39l0,0H70.22a45.015,45.015,0,0,0-5.765-.42ZM46.5,16.67c-3.91,0-9.281,1.194-12.632,4.544l0,0,.01,0a39.243,39.243,0,0,0,7.762,1.031q.366.009.738.01c3.666,0,6.472-.711,8.341-2.113a2.47,2.47,0,0,0,1.089-1.391,1.141,1.141,0,0,0-.528-1.075c-.842-.635-2.346-.975-4.473-1.008l-.3-.01Zm-12.67,6.5a1.6,1.6,0,0,0-1.24.583,2.941,2.941,0,0,0-.554,1.261,7.136,7.136,0,0,0-.145,1.837v.009A1.5,1.5,0,0,0,32.5,27h0a1.892,1.892,0,0,0,1.294-.579,3.482,3.482,0,0,0,.844-1.322,2.016,2.016,0,0,0,.09-1.318.957.957,0,0,0-.9-.6Zm29.265.66a2.12,2.12,0,0,0-1.585.667,3.221,3.221,0,0,0-.711,1.439,7.333,7.333,0,0,0-.176,2.109,2.174,2.174,0,0,0,.781.177h.056a3.149,3.149,0,0,0,2.669-2.169,2.175,2.175,0,0,0,.137-1.533,1.206,1.206,0,0,0-1.17-.685Zm-14.255.59c-7.868.277-11.952,2.514-13.992,4.342a9.142,9.142,0,0,0-2.12,2.723,5.817,5.817,0,0,0-.454,1.219l.01,0a6.715,6.715,0,0,0,1.943.29l.184,0c2.654,0,8.055-1.115,14.426-8.577v-.005Zm8.545.795c-6.331.964-9.917,3.682-11.811,5.792a12.09,12.09,0,0,0-2.607,4.369,9.312,9.312,0,0,0,1.95.234c.085,0,.173,0,.262,0s.182,0,.277,0c3.184-.07,8.967-1.512,11.928-10.393h.005Zm-32.5,3.04a24.69,24.69,0,0,0-5.981.714c-3.314.829-4.736,2.094-5.346,3.01a3.16,3.16,0,0,0-.516,1.267,2.134,2.134,0,0,0-.016.536l.016.005a22.612,22.612,0,0,0,5.232.664c.12,0,.24,0,.363,0a21.892,21.892,0,0,0,4.282-.415,13.574,13.574,0,0,0,8.027-5.07l0,0h-.007a24.819,24.819,0,0,0-6.06-.71Zm14.7,5.34A2.121,2.121,0,0,0,38,34.247a3.247,3.247,0,0,0-.71,1.454,7.2,7.2,0,0,0-.176,2.092,2.174,2.174,0,0,0,.781.177h.056A3.155,3.155,0,0,0,40.619,35.8a2.125,2.125,0,0,0,.122-1.517,1.178,1.178,0,0,0-1.155-.69ZM28.534,35.11a24.1,24.1,0,0,0-5.984,2.613c-2.772,1.706-6.163,4.725-6.577,9.415v0l.007,0a3.577,3.577,0,0,0,.639.077c.053,0,.109,0,.167,0a7.67,7.67,0,0,0,4.574-1.792c2.61-1.99,5.02-5.46,7.175-10.325Zm7.215.265a19.512,19.512,0,0,0-4.734,3.042,30.378,30.378,0,0,0-8.358,11.665,3.852,3.852,0,0,0,1.443.359c.051,0,.1,0,.153,0,.075,0,.152,0,.232,0,1.206-.034,3.042-.535,5.077-2.732,2.338-2.523,4.425-6.67,6.2-12.326l.005-.016-.015.005Zm-18.695.545c-2.411,0-3.236,1.307-3.479,1.87a3.893,3.893,0,0,0-.277,1.854v.01a5.311,5.311,0,0,0,1.2.157h.083a4.959,4.959,0,0,0,4.042-1.921c.128-.189.518-.847.2-1.361-.26-.4-.85-.61-1.765-.61Zm-5.34,6.735a31.966,31.966,0,0,0-5.571.476,5.783,5.783,0,0,0-4.007,3.678,12.768,12.768,0,0,0-.9,3.127h.006c6.641-.2,9.778-2.135,11.239-3.729a5.856,5.856,0,0,0,1.6-3.461h0c-.01,0-.945-.09-2.37-.09Zm6.915,6.91c-.009.011-.768.949-1.516,2.114A7.634,7.634,0,0,0,15.6,55.221c0,1.008-.237,3.133-.378,4.309-.179,1.492-.36,2.77-.375,2.878l.007,0c.169-.061,4.154-1.557,4.154-5.3s-.369-7.507-.372-7.544v-.005h-.005Zm-5.165.355a.806.806,0,0,0-.125.01A20.383,20.383,0,0,0,7.8,52.339a23.663,23.663,0,0,0-5.81,4.4C.894,57.991.241,59.963.053,62.6A21.791,21.791,0,0,0,.1,66.179a2.07,2.07,0,0,0,.658.1,5.788,5.788,0,0,0,3.094-1.287,24.851,24.851,0,0,0,3.245-2.757,49.714,49.714,0,0,0,3.6-3.986l.016-.02c.133-.238,1.268-2.286,2.154-4.279a13.766,13.766,0,0,0,1.012-2.873,1.552,1.552,0,0,0,0-.891.45.45,0,0,0-.193-.224.541.541,0,0,0-.22-.045Z" transform="translate(324.453 251.125) rotate(180)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M453.043,95.458l-1.177.469-.461.184-1.427-.079-1.336.642-2.37,1.619-.1.075-.884.23-.82-.354-.466.212-.16.96-.444.689-.546.383-1.892.193-1.6.822-2.075-.555-.964.378-2.049,1.846-1.047.5-.366-.021-1.389-.072-.586.192-.876.846-1.658.129-.517.357-.809,1.63-.876.9-.5.106-.543-.2-.409.072-.185,1.043-.4.437-1.109.382-.887.739-.778.4-1.042-.026h-.24l-1.038.573-1.953.171-.812.775-.179.165-.379.229-.62.37-.152.092-.747-.133-.875.346-.354-.544-.605.363-.8.035-1-.445-.761-.339-.556.08-.194.97-.02.1-.585.779-1.092.661-.148.193-1.242,1.6-2.361,2.483-2,1.014-2.069.63-1.448,1.19-3.8,1.883-6,2.984-1.227.393-1.76.281-3.139,1.156-2.77.836-.154.047-.548.166-3.9,1.182-1.818-.192-1.077.391-2.8-.311-1.948.038-1.233.257-2.319,1.112-3.914,1.881-1.293,1.183-2.013,1.05-2.358.747.005-.991-.014-.042-.818.258-.59.186-1.913.295H349.6l-.661-.192-.1.035-3.909,1.288-4.359.421-2.182.7-1.63-.026-1.019.3-2,.244-.714-.191-.161-.044-5.875.255-2.686-.3-1.282.292-2.148-.723-3.135-.364-.732-.219-1.648-.489-.745.43-.558.059-1.333-.483-.48-.012-1.1.4-.633-.162-.589-.469-1.38-.205-.841-.707-4.7.623-1.275-.375-4.277-1.246-.68.035-.848.635-1.274.464-1.106.288-1.506.052-1.749-.459-1.8-.874-.667-.159-1.487.15-.455.041-2.733-1.466-3.521-2.2-2.389-1.148-.9-.145-.12.426.445,1.4.151,1.387-.046,1.282-.025.794.223.712.862.956.359.96.263,2.642,0,2.681-.419,4.275-.142.651-.5,2.215-.457,2.035-1.773,5.417-.487.672-1.2.815-2.71,1.844-1.995,1.15-.632.261-1.62.122-1.009-.052-1.257-.68-1.233-.318-1.616-1.162-1.8-.372-1.97-1.139-.513-.617-1.073-.1-1.488-.447v0l-.547-.163-.378-.11h0l-1.9-.052-1.77-.817-.932-.225-1.273-.064-1.333.619v0l-.676.314-.853-.339-.617.038-.7,1.057-.1.164-.482.255-.6-.008-.469-.012-.508.222-.684.3v0l-.6.263-.295.128-.005,0-.182.036-.322.056-.4.076-.705-.412-.375-.221-.628-.128-.339.245-.066,1.15-.309.689-.98.867-1,.878-.695,1.023-1.838,4.195-1.152,1.693-.357.395-1.2,1.328-1.068.828-2.461,1.908-2.329.87-2.007.41-.975,0-1.848-.246-1.661-.51-1.825-1.141-2-1.608-2.9-2.862-.41-.247-.086-.057-.913-.584-.677.018-.265.437-.145.632-.122.56-.332,3.184.024.185.174,1.311,2.2,3.075.679,1.633.111.186.454.762.346.581.035.059.752,2.244-.529,1.267.267.848-.668.518-.122.732,1.976,2.477.431,1.092-.482,1.514-.768.835-.214.229.108.64.909.818,1.545,1.375.823,2.043.627.548.728-.155.4.309.614-.01.6.6.391.189.618.308.489.636.108,1.956.911,2.43.014,1.318.005.187.567.974.178.769-.3,2.035.723.653.784-.16.506.08.813.677.984,1.5.963-.141.611.294,2.951,2.667.669.338.037.021.481.242.6.6.928-.616.1-.01,1.009-.089.443.3.852.574,1.117-.014,2.422.742,1.06.271,2.13,1.324.905.56.536.436.712.581,1.422.612,1.22.292.661.157.5.192.012-.031.007,0-.012.031,2.642,1.012,1.431.334,1.324.488.964.352.707.012,1-.841.969-.056.8.2.785-.132,1.242-.766.242-.359.881-.419,2.972-.369.868.282,2.23-.97,1.494.415,1.322-.469,2.889.642.768.54.859.982.1,0,.956.018-.4.665,1.262,1.324,1.139,1.723.077.227.829,2.432.616.861.431,1.2.021.784-.67.511-.11.292-.038.108.136.327.253-.138.482-.266.583-.09,1.033.11.682.072,1.077-.535.714-.355,1.146.493,1.26-.014.529.236,1.5.679.764.072.283-.186.18-.428-.092-.5-.572-.661-1.266-1.469-.518-.755-.395-1.093-.122-1.4-.087-.943.157-1.238.34-.442.25-.984h0l.064-.258.7-.933,1.862-1.2,2-1.791,1.581-1.042,1.63-.706.044-.2.181.073,4.146-1.41.069-.008,1.846-.322,12.46.878.462-.139,0,0,.415-1.165.223-.216.148-.141,1.37-.6.641-.092,1.778.439.728.18,1.166-.654.827.014,1.708-.933,1.056.027.4-.161,2.056-1.477,1.98-.568.515-.274.181-.1,2.03-1.072,1.29-.99,1.113-.592,1.219-.314,3.19-.225.641-1.069,1.372-.183.828-.935.948-.385.68-.979.57-.82.8-.46,2.55-.16,3.023.374.4-.242.683-2.437.715-.458,1.926-2.806.007-1.023,0-.854.316-1.216-.215-2.2.255-2.223,1.2-2.825,1.055-1.139,1.7-1.15.865-.376,1.225-.206v0l.18-.031.312-.053,4.216-.058c.059-.044,1.534-.021,1.534-.021l1.406-.019,3.557.633.253.044,1.2.389,1.387,1.079,1.468,1.434.276.268.951.4.288.126.785-.126,1.118-.583.844-.714,1.151-.628.028-.04.647-.974.02-.02.014,0v-.005l-.011,0,.255-.387,2.224-.867,2.615-.152.294-.159.164-.087.691-.811.647-.005,1.568.567,1.1-.219.875.35.68-.081,1.283-.152,1.377.969.8.1L398,185.849l.147.024.076.014.162.027.336-.1.5-.145.066-.02.063.087.322.454.441.063.522-.7-.207-.316-.078-.115-1.01-.206-.908-1.551.864-.93-1.355-1.663-.225-.275-.077-.117-.469-.712-2.373-3.617-3.091-2.467v0l-1.082-.866-.007,0-.379-.3-1.651-1.679-1.179-1.565-.155-.337-.243-.531-.707-1.539-1.231-.948-1-1.1-.049-.064-2.07-2.813-.34-.471-.489-.283-1.033-.007-.1-.1-.058-.061.035-.037.5-.492.552-.139.238-.544-1.054-3.052-.007-.107-.078-.975.859-4.428.11-.539,1.464-2.979.907-.743.99-1.946.848-1.244.813-.791.142-.084,1.467-.888,1.233-.173,1.174-.165,2.049.632,1.951-.038.38-.04.885-.1,1.456-.458.687-.424.357-.546.743-2.493.239-.794.458-.862,2.653-3.054,2.005-1.855,4.509-3.307,2.207-1.32,1.127-.673,10.063-4.473,2.615-2.651,1.362-1.378,2.41-1.618,2.82-1.156,2.427-1.921.53-.667.668-2.151.556-.134.5-1.087.143-.309,1.98-1.4.224-.112,7.694-3.855,1.118.154.6-.9,2.238-.376.412-.07.552-.276.47-.8v-.158l.065-2.136.478-.577.26-1.408.246-.325.257-.338.634-.446-.11-.265Z" transform="translate(-80.628 -45.72)"/>
                        </Svg>              
            case 'cz':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M250,150,0,0V300Z"/>
                        </Svg>
              

            case 'dk':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="54.054" height="300" transform="translate(162.162)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="42.857" transform="translate(0 128.571)"/>
                        </Svg>
            case 'ee':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'es':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,125H500V275H0Z" transform="translate(0 -50)"/>
                            <Image width="114" height="114" transform="translate(103 93)" href={require('../assets/flag_badges/eu/es.png')}/>
                        </Svg>
            case 'fi':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="81.818" transform="translate(0 109.091)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="83.333" height="300" transform="translate(138.889)"/>
                        </Svg>
            case 'fo':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="75" height="300" transform="translate(141.667)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="75" transform="translate(0 112.5)"/>
                            <Rect onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} width="37.5" height="300" transform="translate(161.875)"/>
                            <Rect onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} width="500" height="37.5" transform="translate(0 131.25)"/>
                        </Svg>
            case 'fr':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.2" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.6" height="300"/>
                        </Svg>
            case 'gb':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0,499.523,300m0-300L0,300" stroke="#fff" stroke-width="50.896"/>
                            <Path d="M0,0,499.523,300m0-300L0,300" stroke="#c8102e" stroke-width="33.93"/>
                            <Path d="M249.762,0V300M0,150H499.523" stroke="#fff" stroke-width="84.826"/>
                            <Path d="M249.762,0V300M0,150H499.523" stroke="#c8102e" stroke-width="50.896"/>
                        </Svg>
            case 'gr':
                return <Svg d="surface1" width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect width="500" height="300" fill="#0d5eaf"/>
                            <Path d="M92.591,0V183.332M0,83.332H185.187m0-33.332H500M185.187,116.668H500M0,183.332H500M0,250H500" fill="none" stroke="#fff" stroke-width="33.333"/>
                        </Svg>
            case 'hr':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <Image width="140" height="186" transform="translate(180 57)" href={require('../assets/flag_badges/eu/hr.png')}/> 
                        </Svg>
            case 'hu':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'ie':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'is':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M140,0h80V300H140M0,116.667H500v66.667H0"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M160,0h40V300H160M0,133.333H500v33.333H0"/>
                        </Svg>
            case 'it':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'li':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150" transform="translate(0 150)"/>
                            <Image width="105" height="91" transform="translate(59 26)" href={require('../assets/flag_badges/eu/li.png')}/>
                        </Svg>              
            case 'lt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'lu':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'lv':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,240H500v60H0" transform="translate(0 -120)"/>
                        </Svg>
            case 'md':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="167" height="300"/>
                            <Image width="134" height="168" transform="translate(183 066)" href={require('../assets/flag_badges/eu/md.png')}/>
                        </Svg>
              
            case 'me':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M16,16H486V286H16Z" transform="translate(-1 -1)"/>
                            <Image width="168" height="194" transform="translate(165 54)" href={require('../assets/flag_badges/eu/me.png')}/>
                        </Svg>
            case 'mk':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H75L250,144.643,425,0h75L0,300H75L250,155.357,425,300h75ZM500,120v60L0,120H0v60ZM225,0l25,128.571L275,0Zm0,300,25-128.571L275,300Z"/>
                            <Circle onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} cx="48.214" cy="48.214" r="48.214" transform="translate(201.786 101.786)" stroke={this.state.appliedColors[0]} strokeWidth="10"/>
                        </Svg>
            case 'mt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="250" height="300"/>
                            <Image width="84" height="84" transform="translate(11 11)" href={require('../assets/flag_badges/eu/mt.png')}/>
                        </Svg>
            case 'nl':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'no':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                    <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                    <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="90.909" height="300" transform="translate(136.364)"/>
                    <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="75" transform="translate(0 112.5)"/>
                    <Rect onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} width="45.455" height="300" transform="translate(159.091)"/>
                    <Rect onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} width="500" height="37.5" transform="translate(0 131.25)"/>
                </Svg>
            case 'pl':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                        </Svg>
            case 'pt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="180" height="300"/>
                            <Image height="152" transform="translate(122 74)" href={require('../assets/flag_badges/eu/pt.png')}/>
                        </Svg>
            case 'ro':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'rs':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H500V200H0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H500V100H0Z"/>
                            <Image width="115" height="226" transform="translate(120 25)" href={require('../assets/flag_badges/eu/rs.png')}/>
                        </Svg>
            case 'se':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="63.553" height="300" transform="translate(155.054)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="59.927" transform="translate(0 119.855)"/>
                        </Svg>
            case 'si':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect width="500" height="300" fill="#ec2227"/>
                            <Rect width="500" height="200" fill="#035ea5"/>
                            <Rect width="500" height="100" fill="#fff"/>
                            <Image width="78" height="100" transform="translate(111 50)" href={require('../assets/flag_badges/eu/si.png')}/>
                        </Svg>
            case 'ua':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150" y="150"/>
                        </Svg>
            case 'sk':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <G transform="translate(107.301 68.25)">
                                <Path d="M67.21,164.865C40.32,151.913,1.855,126.2,1.855,75.349S4.287,1.365,4.287,1.365H130.135s2.432,23.128,2.432,73.984S94.1,151.913,67.21,164.865Z" transform="translate(-1.855 -1.365)" fill="#fff"/>
                                <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M61.922,151.5C37.252,139.617,1.963,116.031,1.963,69.374S4.194,1.5,4.194,1.5H119.651s2.231,21.218,2.231,67.874S86.594,139.617,61.922,151.5Z" transform="translate(3.433 5.25)"/>
                                <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M44.3,51.827c6.68.108,19.713.37,31.318-3.514,0,0-.307,4.153-.307,8.99s.307,8.991.307,8.991c-10.645-3.562-23.79-3.636-31.317-3.541v25.77H33.748V62.754c-7.527-.1-20.673-.021-31.318,3.541,0,0,.306-4.152.306-8.991s-.306-8.99-.306-8.99c11.6,3.883,24.638,3.622,31.318,3.514V35.643A74.058,74.058,0,0,0,8.967,39.2s.307-4.153.307-8.991-.307-8.991-.307-8.991a74.056,74.056,0,0,0,24.754,3.557c-.313-10.249-3.3-23.166-3.3-23.166s6.145.479,8.6.479,8.6-.479,8.6-.479-2.985,12.917-3.3,23.165a74.041,74.041,0,0,0,24.754-3.557s-.307,4.153-.307,8.991.307,8.991.307,8.991A74.06,74.06,0,0,0,44.3,35.642V51.826Z" transform="translate(26.332 10.565)"/>
                                <Path onPress={() => this.applySelectedColor(5)} fill={this.state.appliedColors[5]} d="M50.233,3.291c-12.424,0-19.078,17.234-19.078,17.234a15.23,15.23,0,0,0-13.828-8.172c-6.858,0-11.912,6.1-15.125,11.75,12.477,19.852,32.384,32.1,48.031,39.641C65.882,56.206,85.8,43.958,98.28,24.1c-3.213-5.649-8.267-11.75-15.125-11.75a15.266,15.266,0,0,0-13.844,8.172S62.657,3.291,50.233,3.291Z" transform="translate(15.119 93.006)"/>
                            </G>
                        </Svg>
            case 'va':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="250" height="300"/>
                            <Image width="102" height="161" transform="translate(324 70)" href={require('../assets/flag_badges/eu/va.png')}/>
                        </Svg>
            // NA
            case 'ca':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="250" height="300" transform="translate(125)" />
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M402.339,46.875,385.283,85.05c-1.935,4.149-5.4,3.764-8.871,1.447l-12.348-7.673,9.2,58.636c1.935,10.713-4.274,10.713-7.339,6.081L344.378,114.59l-3.5,14.7a4.217,4.217,0,0,1-4.839,3.476l-27.251-6.875,7.158,31.227c1.532,6.948,2.727,9.825-1.547,11.658l-9.713,5.478L351.6,219.98a8.252,8.252,0,0,1,2.134,7.657l-4.106,16.168c16.152-2.234,30.624-5.6,46.785-7.666,1.427-.183,3.815,2.642,3.805,4.626L398.076,300h7.853l-1.236-59.107c-.01-1.984,2.157-4.936,3.584-4.753,16.16,2.07,30.633,5.431,46.785,7.666l-4.106-16.168a8.252,8.252,0,0,1,2.134-7.657L500,174.255l-9.713-5.478c-4.274-1.833-3.079-4.709-1.547-11.658l7.158-31.227-27.251,6.875a4.217,4.217,0,0,1-4.839-3.476l-3.5-14.7-21.551,28.951c-3.065,4.632-9.274,4.632-7.339-6.081l9.2-58.636L428.275,86.5c-3.468,2.317-6.935,2.7-8.871-1.447" transform="translate(-152.343 -18.75)"/>
                        </Svg>
            case 'mx':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="100.002" transform="translate(0 100.002)"/>
                            <Image width="93" height="90" transform="translate(204 105)" href={require('../assets/flag_badges/na/mx.png')}/>
                        </Svg>

            // SA
            case 'ar':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} y="100" width="500" height="100"/>
                            <G transform="translate(15 0) scale(0.6)">
                                <G id="rays">
                                    <Path id="ray1" stroke-width="1.1116" stroke="#85340a" fill="#f6b40e" d="m396.84 251.31l28.454 61.992s0.4896 1.185 1.28 0.8586c0.7902-0.3267 0.2988-1.5116 0.2988-1.5116l-23.715-63.956m-0.68 24.12c-0.3465 9.4278 5.4526 14.613 4.6943 23.032-0.7569 8.42 3.8673 13.18 4.9396 16.454 1.0733 3.2744-1.16 5.2323-0.198 5.6982 0.96336 0.4662 3.07-2.1207 2.3833-6.7756-0.68675-4.6549-4.2204-6.0368-3.3898-16.32 0.83-10.283-4.206-12.678-2.98-22.058"/>
                                    <Use href="#ray1" transform="rotate(22.5 400,250)"/>
                                    <Use href="#ray1" transform="rotate(45 400,250)"/>
                                    <Use href="#ray1" transform="rotate(67.5 400,250)"/>
                                    <Path id="ray2" fill="#85340a" d="m404.31 274.41c0.45334 9.0538 5.5867 13.063 4.5787 21.314 2.2133-6.5249-3.1233-11.583-2.82-21.22m-7.6487-23.757l19.487 42.577-16.329-43.887"/>
                                    <Use href="#ray2" transform="rotate(22.5 400,250)"/>
                                    <Use href="#ray2" transform="rotate(45 400,250)"/>
                                    <Use href="#ray2" transform="rotate(67.5 400,250)"/>
                                </G>
                                <Use href="#rays" transform="rotate(90 400,250)"/>
                                <Use href="#rays" transform="rotate(180 400,250)"/>
                                <Use href="#rays" transform="rotate(270 400,250)"/>
                                <Circle r="27.778" stroke="#85340a" cy="250" cx="400" stroke-width="1.5" fill="#f6b40e"/>
                                <Path id="loweyecontour" fill="#843511" d="m409.47 244.06c-1.8967 0.00003-3.7131 0.82183-4.7812 2.5312 2.1367 1.9227 6.8565 2.1318 10.062-0.21875-1.3883-1.4954-3.3845-2.3125-5.2812-2.3125zm-0.0312 0.4375c1.8462-0.0335 3.5717 0.81446 3.8125 1.6562-2.1367 2.3504-5.5508 2.1463-7.6875 0.4375 0.9348-1.4957 2.4391-2.0677 3.875-2.0938z"/>
                                <Use href="#uppalpebra" transform="matrix(-1 0 0 1 800.25 0)"/>
                                <Use href="#eyebrow_nose" transform="matrix(-1 0 0 1 800.25 0)"/>
                                <Use href="#pupil" transform="translate(18.862)"/>
                                <Use href="#lowpalpebra" transform="matrix(-1 0 0 1 800.25 0)"/>
                                <Path d="m395.75 253.84c-0.91341 0.16668-1.5625 0.97727-1.5625 1.9062 0 1.0614 0.87748 1.9062 1.9375 1.9062 0.62667 0 1.2025-0.2968 1.5625-0.8125 0.73952 0.55614 1.7646 0.61511 2.3125 0.625 0.0843 0.002 0.19312 0 0.25 0 0.54791-0.01 1.573-0.0689 2.3125-0.625 0.36 0.5157 0.93583 0.8125 1.5625 0.8125 1.06 0 1.9375-0.84488 1.9375-1.9062 0-0.92898-0.64918-1.7396-1.5625-1.9062 0.513 0.1809 0.84375 0.6765 0.84375 1.2188 0 0.7074-0.57124 1.2812-1.2812 1.2812-0.6804 0-1.2413-0.54015-1.2812-1.2188-0.20862 0.41637-1.0341 1.6551-2.6562 1.7188-1.6222-0.0636-2.4476-1.3024-2.6562-1.7188-0.04 0.6786-0.60085 1.2188-1.2812 1.2188-0.71001 0-1.2812-0.57385-1.2812-1.2812 0-0.54225 0.33075-1.0378 0.84375-1.2188z" fill="#85340a"/>
                                <Path d="m397.84 259.53c-2.138 0-2.9829 1.9368-4.9062 3.2188 1.0687-0.42633 1.9096-1.2693 3.4062-2.125 1.496-0.85442 2.7717 0.1875 3.625 0.1875h0.0312c0.8532 0 2.129-1.0416 3.625-0.1875 1.4967 0.8559 2.3688 1.6987 3.4375 2.125-1.9233-1.282-2.7996-3.2188-4.9375-3.2188-0.4266 0-1.2716 0.23055-2.125 0.65625h-0.0312c-0.85334-0.42642-1.6983-0.65625-2.125-0.65625z" fill="#85340a"/>
                                <Path d="m397.12 262.06c-0.8439 0.0374-1.9596 0.20675-3.5625 0.6875 3.8473-0.85434 4.6962 0.4375 6.4062 0.4375h0.0312c1.71 0 2.5588-1.292 6.4062-0.4375-4.2744-1.282-5.1242-0.4375-6.4062-0.4375h-0.0312c-0.80125 0-1.4372-0.3124-2.8438-0.25z" fill="#85340a"/>
                                <Path d="m393.75 262.72c-0.24819 0.003-0.51871 0.005-0.8125 0.0312 4.488 0.42766 2.3306 3 7.0312 3h0.0312c4.7007 0 2.5745-2.5724 7.0625-3-4.7007-0.4266-3.2146 2.3438-7.0625 2.3438h-0.0312c-3.6075 0-2.4959-2.4215-6.2188-2.375z" fill="#85340a"/>
                                <Path d="m403.85 269.66c0-2.1234-1.7233-3.8465-3.8463-3.8465-2.1233 0-3.8463 1.723-3.8463 3.8465 0.423-1.781 2.0166-3.0393 3.8463-3.0393 1.8333 0 3.424 1.2586 3.8463 3.0393v0 0z" fill="#85340a"/>
                                <Path id="eyebrow_nose" fill="#85340a" d="m382.73 244.02c4.9146-4.2729 11.11-4.9147 14.53-1.7086 0.837 1.1207 1.3733 2.319 1.5934 3.5696 0.4302 2.433-0.3303 5.0617-2.2367 7.7559 0.2151-0.001 0.6435 0.2124 0.8568 0.4266 1.6967-3.244 2.2967-6.5761 1.74-9.7454-0.1458-0.828-0.3735-1.643-0.6696-2.4357-4.7007-3.8452-11.11-4.2729-15.811 2.1377z"/>
                                <Path id="uppalpebra" fill="#85340a" d="m390.42 242.74c2.7767 0 3.4186 0.6417 4.7007 1.71 1.2833 1.0683 1.9233 0.8541 2.1367 1.0683 0.2124 0.2142 0 0.8541-0.4266 0.6399s-1.2833-0.6399-2.5633-1.7086c-1.2833-1.0696-2.5633-1.0683-3.8463-1.0683-3.8463 0-5.983 3.2046-6.4094 2.9907-0.4266-0.2142 2.1367-3.6325 6.4094-3.6325z"/>
                                <Use href="#loweyecontour" transform="translate(-19.181)"/>
                            </G>
                    </Svg>
                
            case 'aw':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,12H500V28.667H0V45.333H500V62H0Z" transform="translate(0 188)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M55.939,35.106,45.523,1.35,35.106,35.106,1.35,45.523,35.106,55.939,45.523,89.7,55.939,55.939,89.7,45.523Z" transform="translate(21.144 21.144)" stroke="#fff" stroke-miterlimit="10" stroke-width="0.2"/>
                        </Svg>  
            case 'bo':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H500V200H0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H500V100H0Z"/>
                            <Image width="121" height="88" transform="translate(189 106)" href={require('../assets/flag_badges/sa/bo.png')}/>
                        </Svg>
            case 'br':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M36.379,150,214,263.57,391.621,150,214,36.43Zm0,0" transform="translate(36)"/>
                            <Image width="150" height="150" transform="translate(175 75)" href={require('../assets/flag_badges/sa/br.png')}/>
                        </Svg>
            case 'co':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="225"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="150"/>
                        </Svg>
            case 'cl':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M496,296H-4V-4H496Z" transform="translate(4 4)"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M162.667,146H496V-4H-4V146Z" transform="translate(4 4)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M146,146H-4V-4H146Z" transform="translate(4 4)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M371.072,191.459l21.754,66.952-56.953-41.379h70.4l-56.953,41.379Z" transform="translate(-296.061 -153.459)"/>
                        </Svg>
            case 'cw':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,22.5H500V60H0Z" transform="translate(0 165)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M368.292,191.459l20.036,61.664-52.455-38.11h64.838l-52.455,38.11Z" transform="translate(-268.281 -125.459)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M359.724,191.459l14.741,45.367-38.592-28.038h47.7l-38.592,28.038Z" transform="translate(-309.713 -166.459)"/>
                        </Svg>
            case 'ec':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H500V225H0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H500V150H0Z"/>
                            <Image width="134" height="151" transform="translate(183 75)" href={require('../assets/flag_badges/sa/ec.png')}/>
                        </Svg>
            case 'gd':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <G transform="translate(-717 -217)">
                                <Rect width="500" height="300" transform="translate(717 216.998)" fill="#ce1126"/>
                                <Rect width="416" height="216" transform="translate(759 258.998)" fill="#007a5e"/>
                                <Path fill="#FCD116" d="M42,42H458L42,258H458Z" transform="translate(717 216.998)"/>
                                <Circle cx="36" cy="36" r="36" transform="translate(931 330.998)" fill="#ce1126"/>
                                <Path d="M67.749,150.41c4.5,8.39,13.265,17.52,20.916,20.73.123-8.52-2.9-19.44-7.034-28.14l-13.882,7.41Z" transform="translate(717 216.998)" fill="#ce1126"/>
                                <Path fill="#FCD116" d="M60.112,121.63c6.529,13.61-16.933,46.08,22.156,53.69-4.822-6.58-7.931-17.44-6.755-26.16,8.2,3.12,16.83,12.25,20.317,19.23,10.23-37.15-26.24-34.89-35.718-46.76Z" transform="translate(717 216.998)"/>
                                <Path fill="#FCD116" d="M367.235,191.459l19.382,59.653-50.744-36.868H398.6l-50.744,36.868Z" transform="translate(599.777 142.541)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(487.326 026.841)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(612.326 026.841)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(737.326 026.841)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(487.326 284.641)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(612.326 284.641)"/>
                                <Path fill="#FCD116" d="M354.643,191.459l11.6,35.7L335.873,205.1h37.54l-30.37,22.065Z" transform="translate(737.326 284.641)"/>
                            </G>
                        </Svg>
            case 'gf':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.2" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.6" height="300"/>
                        </Svg>
            case 'gy':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M 0,0 L 500,150 L 0,300 z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M 0,13.05 L 456,150 L 0,286.95 z"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M 0,0 L 250,150 L 0,300 z"/>
                            <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M 0,17.5 L 220.85,150 L 0,282.5 z"/>
                        </Svg>
                
            case 'pe':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H166.6V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M300,0H466.6V300H300Z" transform="translate(-134)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H166.6V300H0Z" transform="translate(332.2)"/>
                            <Image width="134" height="122" transform="translate(183 89)" href={require('../assets/flag_badges/sa/pe.png')}/>
                        </Svg>
            case 'py':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <Image width="78" height="78" transform="translate(211 111)" href={require('../assets/flag_badges/sa/py.png')}/>
                        </Svg>
            case 'sr':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="180" transform="translate(0 60)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="120" transform="translate(0 90)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M392.936,191.459,428.2,300l-92.331-67.082H450L357.669,300Z" transform="translate(-142.936 -95.729)"/>
                        </Svg>
              
             case 'tt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0,347.078,300H500L152.921,0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M1.529,0,348.607,300H450.556L103.477,0Z" transform="translate(23.958)"/>
                        </Svg>
            case 'uy':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <G transform="translate(0 33.333)">
                                <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="332.334" height="33.333" transform="translate(166.667)"/>
                                <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="332.334" height="33.333" transform="translate(166.667 66.667)"/>
                                <Rect onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} width="500" height="33.333" transform="translate(0 133.333)"/>
                                <Rect onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} width="500" height="33.333" transform="translate(0 200)"/>
                            </G>
                            <G transform="translate(20.589 20.589)" onPress={() => this.applySelectedColor(5)} fill={this.state.appliedColors[5]}>
                                <G id="u" transform="translate(0 42.78)">
                                    <G id="t" transform="translate(34.511 19.964)">
                                        <G transform="matrix(0.924, 0.383, -0.383, 0.924, 16.838, 13.139)">
                                            <Path d="M8.25,0,16.5,5.5C1.833,29.333,18.333,33,5.5,44,11,31.167,0,34.833,0,12.833" transform="translate(0)"/>
                                            <Path d="M.722,0c-3.667,23.833,8.25,31.167,0,40.333" transform="translate(4.778 3.667)" fill="none" stroke="#000" stroke-miterlimit="20" stroke-width="0.066"/>
                                        </G>
                                        <Path d="M10.34,0h11l-11,60.5L-.66,0h11V60.5" transform="translate(17.893)" stroke="#000" stroke-miterlimit="20" stroke-width="0.066"/>
                                    </G>
                                    <G transform="translate(42.78 0) rotate(45)">
                                        <Use href="#t" transform="translate(-34.511 -19.964)"/>
                                    </G>
                                </G>
                                <G transform="translate(82.709) rotate(90)">
                                    <Use href="#u" transform="translate(0 -42.78)"/>
                                </G>
                                <G transform="translate(125.489 125.489) rotate(180)">
                                    <G transform="translate(0 42.78)">
                                        <Use href="#u" transform="translate(0 -42.78)"/>
                                    </G>
                                    <G transform="translate(82.709) rotate(90)">
                                        <Use href="#u" transform="translate(0 -42.78)"/>
                                    </G>
                                </G>
                                <Circle cx="20.167" cy="20.167" r="20.167" transform="translate(42.578 42.578)" stroke="#000" stroke-miterlimit="20" stroke-width="0.066"/>
                            </G>
                            <G transform="translate(68.483 72.318)" fill="#000000">
                                <G id="right" transform="translate(13.933 0)">
                                    <Path d="M12.856,2.288c-1.283,1.467-2.017-1.1-6.6-1.1S.939,3.938.206,3.388,4.056-.462,5.523-.645,11.206.638,12.856,2.288M7.539,3.938c1.283,1.1.183,3.483-1.1,3.483s-3.667-2.2-2.567-3.667" transform="translate(2.911 0.661)"/>
                                    <Path d="M.209,2.127C.392-.073,2.226-.44,5.159-.44s4.217,2.2,5.317,2.75C9.192,2.31,8.092.477,5.159.477S2.226.477.209,2.31m.55.367c.733-1.1,1.65,1.1,3.667,1.1a6.69,6.69,0,0,0,4.4-1.467c1.283-.917-1.833,2.2-3.85,2.2S.209,3.41.759,2.677" transform="translate(4.191 4.122)"/>
                                    <Path d="M11.128,3.087c2.383-1.283.917-3.117,0-3.483.367.367,1.833,2.2,0,3.483m-10.267,11c1.1,0,1.467-.367,2.933-.367S8.745,15.737,10.762,15c-4.217,1.65-2.567.55-9.9.55H-.055m11.55,1.1a21.373,21.373,0,0,0-2.017-2.933c1.467,1.1,1.833,1.65,2.017,2.933M.862,18.487c4.583,0,3.85-.917,9.9-3.483-4.4.55-5.317,2.017-9.9,2.017H-.055M.862,11.7c1.283,0,1.65-.917,3.117-.917a8.3,8.3,0,0,1,4.4,1.283,2.617,2.617,0,0,0-2.017-1.65c-1.467-.183-.917-2.567-2.567-2.933,0,.733.55.55.733,1.65,0,.917-1.65.917-2.017,0C2.878,10.6,1.778,10.6.862,10.6" transform="translate(0.055 4.812)"/>
                                </G>
                                <Use href="#right" transform="translate(30 0.399) scale(-1,1)"/>
                                <Path d="M1.591.836c-.917,0-3.3.55,0,.55s.917-.55,0-.55" transform="translate(13.259 24.113)"/>
                            </G>
                        </Svg>
              
            case 've':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M0,0H500V300H0Z"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M0,0H500V200H0Z"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M0,0H500V100H0Z"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="matrix(0.999, 0.035, -0.035, 0.999, 143.36, 165.8)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(166.068 135.409) rotate(22)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(198.983 113.915) rotate(42)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(238.566 104.1) rotate(62)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(278.66 107.1) rotate(82)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(296.252 114.569) rotate(30)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="translate(329.214 134.099) rotate(50)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M12.508,0l7.73,23.791L0,9.087H25.015L4.778,23.791Z" transform="matrix(0.999, -0.035, 0.035, 0.999, 331.451, 166.672)"/>
                        </Svg>
            // AF
            case 'eg':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <Image width="71" height="96" transform="translate(215 102)" href={require('../assets/flag_badges/af/eg.png')}/>
                        </Svg>
            case 'ao':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                            <G transform="translate(207.516 75.011)">
                                <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M231.115,91.82a58.5,58.5,0,1,1-43.2,103.424l-8.558,10.441A72,72,0,1,0,232.526,78.394Z" transform="translate(-179.358 -75.011)"/>
                                <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} transform="translate(84.569 67.344)">
                                    <Path d="M302.624,142.355a77.969,77.969,0,0,1,0,15.291L287.7,156.175a63.07,63.07,0,0,0,0-12.35Z" transform="translate(-263.927 -142.355)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(21.923 24.574) rotate(22.5)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(10.812 46.574) rotate(45)"/>
                                </G>
                                <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} transform="translate(53.475 36.098) rotate(-67.5)">
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(23.77)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(21.923 24.574) rotate(22.5)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(10.812 46.574) rotate(45)"/>
                                </G>
                                <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} transform="translate(67.601 108.027) rotate(67.5)">
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(23.77)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(21.923 24.574) rotate(22.5)"/>
                                    <Path d="M14.927,0a77.969,77.969,0,0,1,0,15.291L0,13.82A63.07,63.07,0,0,0,0,1.47Z" transform="translate(10.812 46.574) rotate(45)"/>
                                </G>
                                <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M199.324,114.656h51.352L209.133,144.84,225,96l15.867,48.84Z" transform="translate(-179.358 -75.011)"/>
                                <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M287.879,216.315c3.838,3.714,9.006,7.375,12.755,10.7s6.62,6.093,8.945,9.872c3.407,5.539-.419,11.812-5.724,8.13-2.869-1.991-4.672-7.367-9.067-11.815-3.255-2.771-5.82-5.677-14-7.078-.393-.068-.508-.9-.2-1.26Z" transform="translate(-179.358 -75.011)"/>
                                <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M231.361,197.845l20.247,11.972,4.4,17.079,23.241-1.761,10.212-11.972-37.854-26.234Z" transform="translate(-179.358 -75.011)"/>
                                <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M279.663,223.689c-26.035-17.314-42.591-26.663-67.542-40.85-9.8-5.573-25.023-19.582-13.016-43.02.756,15.387,61.569,57.623,87.265,75.988Z" transform="translate(-179.358 -75.011)"/>
                                <Path onPress={() => this.applySelectedColor(0)} stroke={this.state.appliedColors[0]} d="M216.086,167.519c20.045,18.891,45.29,34.3,67.812,51.336" transform="translate(-179.358 -75.011)" fill="none" stroke-linecap="round" stroke-width="1.5"/>
                                <Circle onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} id="c" cx="1.008" cy="1.008" r="1.008" transform="translate(110.034 146.278)"/>
                                <Circle onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} cx="1.008" cy="1.008" r="1.008" transform="translate(117.454 152.743)"/>
                                <Circle onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} cx="1.008" cy="1.008" r="1.008" transform="translate(123.972 159.368)"/>
                            </G>
                        </Svg>
            case 'mg':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                        </Svg>
            case 'ne':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect width="500" height="300" fill="#0db02b"/>
                            <Rect width="500" height="200" fill="#fff"/>
                            <Rect width="500" height="100" fill="#e05206"/>
                            <Circle cx="42.5" cy="42.5" r="42.5" transform="translate(207.5 107.5)" fill="#e05206"/>
                        </Svg>
            // AS
            case 'ae':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="green" width="500" height="100" fill="#00732f"/>
                            <Rect id="Rectangle_462" data-name="Rectangle 462" width="500" height="100" transform="translate(0 100)" fill="#fff"/>
                            <Rect id="Rectangle_463" data-name="Rectangle 463" width="500" height="100" transform="translate(0 200)"/>
                            <Rect id="red" width="125.502" height="300" fill="red"/>
                        </Svg>
            case 'af':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="Rectangle_496" data-name="Rectangle 496" width="166.6" height="300" transform="translate(332)" fill="#090"/>
                            <Rect id="Rectangle_497" data-name="Rectangle 497" width="166.6" height="300" transform="translate(167)" fill="#bf0000"/>
                            <Rect id="Rectangle_498" data-name="Rectangle 498" width="166.6" height="300"/>
                            <Image id="af-2" data-name="af" width="139" height="140" transform="translate(181 80)" href={require('../assets/flag_badges/as/af.png')}/>
                        </Svg>
            case 'am':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="Rectangle_531" data-name="Rectangle 531" width="500" height="300" fill="#f2a800"/>
                            <Rect id="Rectangle_532" data-name="Rectangle 532" width="500" height="200" fill="#0033a0"/>
                            <Rect id="Rectangle_533" data-name="Rectangle 533" width="500" height="100" fill="#d90012"/>
                        </Svg>
            case 'az':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="Rectangle_538" data-name="Rectangle 538" width="500" height="300" fill="#3f9c35"/>
                            <Rect id="Rectangle_539" data-name="Rectangle 539" width="500" height="200" fill="#ed2939"/>
                            <Rect id="Rectangle_540" data-name="Rectangle 540" width="500" height="100" fill="#00b9e4"/>
                            <G id="Group_725" data-name="Group 725" transform="translate(-43)">
                                <Circle id="Ellipse_182" data-name="Ellipse 182" cx="45" cy="45" r="45" transform="translate(233 105)" fill="#fff"/>
                                <Circle id="Ellipse_183" data-name="Ellipse 183" cx="37.5" cy="37.5" r="37.5" transform="translate(250.5 112.5)" fill="#ed2939"/>
                                <Path id="Path_13229" data-name="Path 13229" d="M655,250l4.784,13.452,12.894-6.129-6.129,12.894L680,275l-13.452,4.784,6.129,12.894-12.894-6.129L655,300l-4.784-13.452-12.894,6.129,6.129-12.894L630,275l13.452-4.784-6.129-12.894,12.894,6.129Z" transform="translate(-327 -125)" fill="#fff"/>
                            </G>
                        </Svg>
            case 'bd':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="Rectangle_543" data-name="Rectangle 543" width="500" height="300" fill="#006a4e"/>
                            <Circle id="Ellipse_184" data-name="Ellipse 184" cx="100" cy="100" r="100" transform="translate(125 50)" fill="#f42a41"/>
                        </Svg>
            case 'bn':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="Rectangle_546" data-name="Rectangle 546" width="500" height="300" fill="#f7e017"/>
                            <Path id="Path_13230" data-name="Path 13230" d="M0,50V183.333l500,62.5V175Z" transform="translate(0 -29.167)" fill="#fff"/>
                            <Path id="Path_13231" data-name="Path 13231" d="M0,220v62.5l500,125V345Z" transform="translate(0 -128.333)"/>
                            <Image id="bn-2" data-name="bn" width="201" height="176" transform="translate(150 62)" href={require('../assets/flag_badges/as/bn.png')}/>
                        </Svg>
            case 'bt':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect id="Rectangle_549" data-name="Rectangle 549" width="500" height="300" fill="#ffd520"/>
                            <Path id="Path_13285" data-name="Path 13285" d="M0,300H500V0Z" fill="#ff4e12"/>
                            <Image id="bt-2" data-name="bt" width="331" height="227" transform="translate(85 40)" />
                        </Svg>
            case 'cd':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M22.5,60ZM468.75,0,0,225v75H31.25L500,75V0H468.75"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M500,0,0,240v60H0L500,60V0"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M18,60H60L73,18,86,60h42L94,86l13,42L73,102,39,128,52,86Z"/>
                        </Svg>
            case 'cn':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Defs>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} id="s" d="M0,-1 0.587785,0.809017 -0.951057,-0.309017H0.951057L-0.587785,0.809017z"/>
                            </Defs>
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <G transform="translate(0 0) scale(15)">
                                <Use href="#s" transform="translate(5,5) scale(3)"/>
                                <Use href="#s" transform="translate(10,2) rotate(23.036243)"/>
                                <Use href="#s" transform="translate(12,4) rotate(45.869898)"/>
                                <Use href="#s" transform="translate(12,7) rotate(69.945396)"/>
                                <Use href="#s" transform="translate(10,9) rotate(20.659808)"/>
                            </G>
                        </Svg>
            case 'hk':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect width="500" height="300" fill="#de2910"/>
                            <G transform="translate(-20 -20) scale(0.6)">
                                <G id="petal">
                                    <Path d="m 449.96406,299.9134 c -105.26305,-44.48626 -58.60174,-181.58185 42.06956,-174.6907 -20.36609,10.46694 -23.31775,29.99772 -11.68704,48.09021 13.02444,20.2558 -1.19897,52.84856 -18.80577,60.7674 -28.93485,13.02443 -34.72791,47.74999 -11.57675,65.83309 z" fill="#fff"/>
                                    <Path d="m 444.27188,200.91974 -5.91976,9.29378 -2.14454,-10.8142 -10.67812,-2.75928 9.62461,-5.3895 -0.67104,-10.99955 8.08542,7.48945 10.25578,-4.04271 -4.61053,10.00942 7.00143,8.50541 z" fill="#de2910"/>
                                    <Path d="m 450.56002,298.75902 c -12.73114,-6.53451 -22.9963,-20.15491 -27.46839,-36.43134 -5.11498,-18.66969 -2.17269,-38.74247 8.08308,-55.03768 l -2.20789,-1.39371 c -10.64057,16.92871 -13.69313,37.74293 -8.38575,57.11886 4.72784,17.22201 15.21355,31.09815 28.78703,38.06438 z" fill="#de2910"/>
                                </G>
                                <Use href="#petal" transform="rotate(72 450,300)"/>
                                <Use href="#petal" transform="rotate(144 450,300)"/>
                                <Use href="#petal" transform="rotate(216 450,300)"/>
                                <Use href="#petal" transform="rotate(288 450,300)"/>
                            </G>
                        </Svg>
            case 'id':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150"/>
                        </Svg>
            case 'il':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="46.875" transform="translate(0 28.125)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="46.875" transform="translate(0 225)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M22.082-29.141-25.237,52.818H69.4Z" transform="translate(227.918 124.502)" stroke="#0038b8" strokeWidth="5.5"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M47.319,0,0,81.959H94.638Z" transform="translate(297.319 204.639) rotate(180)" stroke="#0038b8" strokeWidth="5.5"/>
                        </Svg>
            case 'in':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="100" y="100"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100" y="200"/>
                            <G transform="translate(27 0) scale(2)">
                                <G transform="translate(112.5,75)">
                                    <Circle r="20" fill="#008"/>
                                    <Circle r="17.5" fill="#fff"/>
                                    <Circle r="3.5" fill="#008"/>
                                    <G id="d">
                                        <G id="c">
                                            <G id="b">
                                                <G id="a">
                                                    <Circle r="0.875" fill="#008" transform="rotate(7.5) translate(17.5)"/>
                                                    <Path fill="#008" d="M 0,17.5 0.6,7 C 0.6,7 0,2 0,2 0,2 -0.6,7 -0.6,7 L 0,17.5 z"/>
                                                </G>
                                                <Use href="#a" transform="rotate(15)"/>
                                            </G>
                                            <Use href="#b" transform="rotate(30)"/>
                                        </G>
                                        <Use href="#c" transform="rotate(60)"/>
                                    </G>
                                    <Use href="#d" transform="rotate(120)"/>
                                    <Use href="#d" transform="rotate(-120)"/>
                                </G>
                            </G>
                        </Svg>
            case 'iq':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="100" y="100"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100" y="200"/>          
                            <G transform="translate(5 -15) scale(1.2)" onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]}>
                                <Path d="M246.026 120.178c-.558-.295-1.186-.768-1.395-1.054-.314-.438-.132-.456 1.163-.104 2.318.63 3.814.383 5.298-.873l1.308-1.103 1.54.784c.848.428 1.748.725 2.008.656.667-.176 2.05-1.95 2.005-2.564-.054-.76.587-.568.896.264.615 1.63-.28 3.502-1.865 3.918-.773.2-1.488.127-2.66-.28-1.438-.502-1.684-.494-2.405.058-1.618 1.24-3.87 1.355-5.894.3zm5.734-5.242c-.563-.717-1.24-3.424-1.02-4.088.192-.576.4-.7.914-.527.918.287 1.13.92.993 3.064-.107 1.747-.366 2.206-.886 1.55zM184.244 113c-.185 1.3 2.325 4.568 3.458 5.158-.77.345-1.728.188-2.434.576-3.948 3.948-18.367 18.006-21 21.366 7.8.154 16.448-.106 23.76-.44-.007-5.3 5.018-5.572 8.38-7.502 1.73 2.725 6.075 2.516 6.618 6.617l.01 17.646H136.4c-1.172 5.176-5.844 9.125-12.354 7.5 2.014-2.104 5.405-2.827 6.62-5.734 1.024-6.365-2.046-10.296-4.03-13.906 3.284-1.195 3.782-1.494 7.12-3.737-2.344 7.12 6.1 6.338 12.353 6.175.2-2.417.1-5.27-1.766-5.624 2.396-.87 2.794-1.168 6.62-4.412v9.593l46.14-.1c0-3.002.795-7.824-1.58-7.824-2.27 0-.107 6.173-1.87 6.173h-35.63L158 138.4c1.5-1.5 1.33-1.38 11.648-11.697 1.028-1.03 8.266-7.568 14.6-13.713zm89.06-.264c2.487 1.34 4.457 3.2 7.502 3.972-.354 1.26-1.476 1.76-1.77 3.087v26.9c3.402.75 4.118-1.178 5.737-2.205.442 4.307 3.186 8.53 3.088 11.9H273.3l.002-43.674zm-19.412 14.412l5.296-4.643v23.484l3.814-.006-.118-26.338c1.548-1.55 4.58-3.8 5.338-5.358v42.06l-33.443.012c-.493-8.73-.577-17.77 9.6-15.826v-3.563c-.3-.6-.868.147-.998-.645 1.615-1.617 2.163-2.03 6.538-5.852l.08 15.5 3.857.004c.001.002.036-18.227.036-18.83zM241.34 145.75c.716 1.075 3.154 1.056 3.04-.755-.4-1.493-3.616-.924-3.04.755z"/><Circle cx="144.527" cy="161.369" r="2.042"/><Path d="M207.55 112.78c2.488 1.34 4.457 3.19 7.502 3.97-.353 1.26-1.476 1.76-1.768 3.087v26.91c3.4.75 4.117-1.18 5.736-2.206.44 4.308 3.185 8.528 3.088 11.9h-14.56l.002-43.673z"/>
                            </G>
                        </Svg>
            case 'ir':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <G transform="translate(5 6) scale(0.78)" onPress={() => this.applySelectedColor(1)} stroke={this.state.appliedColors[1]}>
                                <G transform="translate(8.4,100.4)">
                                    <G id="tb4">
                                        <G id="tb1" fill="none" strokeWidth="2">
                                            <Path id="tbp1" d="M0,1H26M1,10V5H9V9H17V5H12M4,9H6M26,9H21V5H29M29,0V9H37V0M33,0V9" transform="scale(1.4)"/>
                                            <Path id="tbp2" d="M0,7H9M10,7H19" transform="scale(2.8)"/>
                                            <Use href="#tbp2" y="130"/>
                                            <Use href="#tbp1" y="155.2"/>
                                        </G>
                                        <G id="tb3">
                                            <Use href="#tb1" x="56"/>
                                            <Use href="#tb1" x="112"/>
                                            <Use href="#tb1" x="168"/>
                                        </G>
                                    </G>
                                    <Use href="#tb3" x="168"/>
                                    <Use href="#tb4" x="392"/>
                                </G>
                            </G>
                            <G onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} transform="translate(-30 -10) scale(0.9) matrix(45,0,0,45,315,180)">
                                <G id="emblem_half">
                                    <Path d="M-0.54815,0.83638A0.912046,0.912046 0 0,0 0.328544,-0.722384A1,1 0 0,1 -0.54815,0.83638"/>
                                    <Path d="M0.618339,0.661409A0.763932,0.763932 0 0,0 0.421644,-0.741049A1,1 0 0,1 0.618339,0.661409"/>
                                    <Path d="M0,1 -0.05,0 0,-0.787278A0.309995,0.309995 0 0,0 0.118034,-0.688191V-0.100406L0.077809,0.892905z"/>
                                    <Path d="M-0.02,-0.85 0,-0.831217A0.14431,0.14431 0 0,0 0.252075,-0.967708A0.136408,0.136408 0 0,1 0,-0.924634"/>
                                </G>
                                <Use href="#emblem_half" transform="scale(-1,1)"/>
                            </G>
                        </Svg>
            case 'jo':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M0,0V300L300,150Z"/>
                            <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M121.43,180l4.649,11.775,12.105-3.707-6.308,10.976,10.446,7.153-12.514,1.911.921,12.626-9.3-8.592-9.3,8.592.921-12.626L100.539,206.2l10.446-7.153-6.308-10.976,12.1,3.707Z" transform="translate(-28.725 -51.429)"/>
                        </Svg>
            case 'jp':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Circle onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} cx="90" cy="90" r="90" transform="translate(160 60)"/>
                        </Svg>
            case 'kg':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <ClipPath id="c">
                            <   Circle r="25"/>
                            </ClipPath>
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <G transform="translate(250,150)">
                                <G id="r20" transform="scale(0.5)">
                                    <G id="r4">
                                        <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} id="r1" d="m-8.4,108c8.4,22 -9.6,56 8.4,72c-6,-24 14-50 8.4,-72s-25.2,-22 -16.8,0z"/>
                                        <Use href="#r1" transform="rotate(90)"/>
                                        <Use href="#r1" transform="rotate(180)"/>
                                        <Use href="#r1" transform="rotate(270)"/>
                                    </G>
                                    <Use href="#r4" transform="rotate(18)"/>
                                    <Use href="#r4" transform="rotate(36)"/>
                                    <Use href="#r4" transform="rotate(54)"/>
                                    <Use href="#r4" transform="rotate(72)"/>
                                </G>
                                <Use href="#r20" transform="rotate(9)"/>
                                <Circle onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} r="54"/>
                                <G transform="scale(2)">
                                    <Circle onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} cy="-1.5" r="22.5"/>
                                </G>
                                <G onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} transform="scale(2)" id="x" clipPath="url(#c)">
                                    <Path d="M-23.055236,18a37.755236,37.755236 0 1,1 75.510472,0H52.760449a36.260449,36.260449 0 1,0 -72.520898,0z"/>
                                    <Path d="M-17.601203,18a35.301203,35.301203 0 1,1 70.602406,0H53.424578a33.924578,33.924578 0 1,0 -67.849156,0z"/>
                                    <Path d="M20.7,-15.052356a33.052356,33.052356 0 1,0 0,66.104712L22.5,49.819805a31.819805,31.819805 0 1,1 0,-63.63961z"/>
                                </G>
                                <Use href="#x" transform="scale(-1,1)"/>
                            </G>
                        </Svg>
            case 'kh':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150" y="75"/>
                            <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} stroke="#000" strokeWidth="0.96" transform="translate(105,-325) scale(0.75)">
                                <G strokeLinejoin="bevel">
                                    <Path d="m139.02,623.46,113.8,0,0,43.788-113.8,0z"/>
                                    <Rect width="3.5864" height="16.495" x="246.95" y="647.64"/>
                                    <Rect width="113.8" height="5.0903" x="139.02" y="639.49"/>
                                    <Rect width="113.8" height="4.489" x="139.02" y="632.59"/>
                                    <Rect strokeWidth="0.94545" width="113.8" height="4.354" x="139.02" y="625.7"/>
                                    <Rect width="3.5864" height="16.495" x="168.98" y="647.64"/>
                                    <Rect width="3.5864" height="16.495" x="217.97" y="647.64"/>
                                    <Rect width="3.5864" height="16.495" x="139.92" y="647.64"/>
                                    <Rect width="3.5864" height="16.495" x="146.95" y="647.64"/>
                                    <Rect width="3.5864" height="16.495" x="154.45" y="647.64"/>
                                    <Rect width="3.5864" height="16.495" x="161.95" y="647.64"/>
                                    <Rect width="3.5864" height="16.495" x="224.77" y="647.64"/>
                                    <Rect width="3.5864" height="16.495" x="232.27" y="647.64"/>
                                    <Rect width="3.5864" height="16.495" x="239.77" y="647.64"/>
                                    <Path strokeLinejoin="miter" d="m94.509,669.55c1.7604-0.89672,3.7684-2.9836,4.425-5.319h193.07c0.65665,2.3354,2.6647,4.4222,4.425,5.319z"/>
                                </G>
                                <G>
                                    <G>
                                        <Path d="m193,556.8s-0.14437-4.1125,2.2507-4.1572c2.3951,0.0447,2.2507,4.1572,2.2507,4.1572z"/>
                                        <Path d="m180.51,611.34,0-5.5357c-0.0789-2.768-2.7591-2.9681-2.838-4.9862,0,0-0.34606-3.0266,0.45159-4.4082,1.0845,4.0474,3.0561,3.3039,3.0561,1.6397,0-1.4526-1.117-2.8031-3.408-6.3302-0.73206-1.127-0.27901-4.6597,0.74692-5.9224,0.39808,3.0709,0.85311,4.5398,2.1717,4.5398,0.80428,0,1.4612-0.52417,1.4612-2.0621,0-1.9565-1.325-2.9445-1.9762-4.725-0.76004-2.0777-0.23675-4.1957,1.0259-5.3795,0.54129,3.0293,0.38028,4.2372,1.7255,4.2372,2.7133-0.8584,0.00063-4.7866-0.57911-5.7773-0.667-1.1553,0.89682-3.4598,0.89682-3.4598,0.86209,2.6898,1.1394,2.909,2.0699,2.6597,1.1738-0.31452,1.0224-2.056-0.40996-3.4633-0.90449-0.88866-0.80857-2.2116,0.16248-3.274,0.97489,1.9056,2.2229,1.7898,2.343,0.65821l-0.78373-4.3931h17.255l-0.85683,4.2488c-0.24526,1.2162,1.396,1.4801,2.4162-0.51392,0.97105,1.0624,1.067,2.3854,0.16248,3.274-1.4323,1.4073-1.5837,3.1488-0.40996,3.4633,0.93041,0.2493,1.2078,0.0302,2.0699-2.6597,0,0,1.403,1.5708,0.89682,3.4598-0.57974,0.99071-3.2924,4.9189-0.57911,5.7773,1.3453,0,1.1842-1.2079,1.7255-4.2372,1.2627,1.1838,1.786,3.3017,1.0259,5.3795-0.65127,1.7804-1.9762,2.7685-1.9762,4.725,0,1.538,0.65688,2.0621,1.4612,2.0621,1.3186,0,1.7736-1.4689,2.1717-4.5398,1.0259,1.2627,1.479,4.7953,0.74692,5.9224-2.291,3.527-3.408,4.8776-3.408,6.3302,0,1.6641,1.9716,2.4076,3.0561-1.6397,0.79765,1.3816,0.4516,4.4082,0.4516,4.4082-0.0789,2.018-2.7591,2.2182-2.838,4.9862v5.5357z"/>
                                        <Path d="m187.73,565.32-0.39721-3.125,15.838,0-0.39721,3.125z"/>
                                        <Path d="m188.79,562.13-0.34117-2.5686,13.604,0-0.34117,2.5686z"/>
                                        <Path d="m190.95,559.47-0.22717-2.5686,9.0585,0-0.22718,2.5686z"/>
                                        <Path d="m223.97,669.55c-2.0266-0.78125-4.9773-2.9188-4.9773-5.0695v-24.297l2.6385-3.3588-52.776,0.00008,2.5293,3.3588v24.297c0,2.1508-2.0264,4.2883-4.0529,5.0695z"/>
                                        <Rect strokeLinejoin="bevel" width="3.5864" height="16.495" x="178.24" y="647.64"/>
                                        <Rect strokeLinejoin="bevel" width="3.5864" height="16.495" x="208.56" y="647.64"/>
                                        <Path d="m167.91,609.17,0,14.648,0,7.0117,0,5.9961,54.023,0,0-5.957,0.0783-21.699c-2.2097,0.8681-2.5976,2.8711-2.5976,2.8711v11.777h-48.75v-11.777s-0.5442-2.003-2.7539-2.8711z"/>
                                        <Path d="m214.6,669.55c-1.7655-0.78125-5.6118-2.9188-5.6118-5.0695v-27.192c0.37751-1.518,2.436-2.414,3.761-3.3588h-35.823c1.7049,0.90271,3.6054,1.6522,4.2846,3.3588v27.192c0,2.1508-3.041,4.2883-4.8065,5.0695z"/>
                                        <Path d="m219.41,634.22-0.00027-19.587-4.9104-0.00008,0-1.9085-38.839,0,0,1.9085-4.9109-0.00018,0.00017,19.587z"/>
                                        <Path d="m206.86,669.55c-1.7299-0.78125-4.2489-2.9186-4.2489-5.0694v-23.215l1.4205-2.1088h-17.691l1.4205,2.109v23.215c0,2.1508-2.5189,4.2883-4.2488,5.0695z"/>
                                        <Path strokeWidth="0.981" d="m190.71,639.16,8.9655-0.00005,0,30.377-8.9655,0z"/>
                                        <Path strokeLinejoin="bevel" d="m204.38,632.48c0.0215-2.0012,5.8375-2.091,8.8318-3.7949h-35.952c2.9943,1.7039,8.6755,1.8441,8.6755,3.7949l1.2166,3.8818,14.883,0.59776z"/>
                                        <Path d="m211.41,611.34c0-4.8986,0.20532-6.7857,1.7103-6.7857l0.00001,15.58c-3.6912,1.3393-6.3254,6.0491-6.3254,6.0491l-23.211-0.00027s-2.6342-4.7096-6.3254-6.0488v-15.58c1.856,0,1.8682,1.9717,1.8682,6.7857z"/>
                                        <Path d="m213.12,609.33c0-5.6184,4.8512-6.2503,4.8512-6.2503v5c-1.8465-0.0789-2.7368,1.578-2.7368,4.0444,0,2.4663,1.4868,2.5056,1.4868,2.5056v14.19h-3.6012z"/>
                                        <Path d="m177.28,609.33c0-5.6184-4.8512-6.2503-4.8512-6.2503v5c1.8465-0.0789,2.7368,1.578,2.7368,4.0444,0,2.4663-1.4868,2.5056-1.4868,2.5056v14.19h3.6012z"/>
                                    </G>
                                    <G fill="none" strokeWidth="0.8">
                                        <Path d="m186.84,570.62h17.128"/>
                                        <Path d="m184.81,575.97h20.921"/>
                                        <Path d="m182.78,582.46h24.904"/>
                                        <Path d="m180.66,590.39h29.536"/>
                                        <Path d="m179.98,599.43h30.426"/>
                                        <Path strokeWidth="0.96" d="m170.75,628.92h48.661"/>
                                        <Rect strokeWidth="0.96" width="18.036" height="6.6291" x="186.19" y="628.93"/>
                                    </G>
                                    <G>
                                    <Path d="m183.93,614.24c2.9903,3.59,2.7128,9.6801,2.6786,13.27h17.343c-0.0342-3.59-0.31172-9.68,2.6786-13.27z"/>
                                    <Path d="m193.68,573.11-2.3764-1.2239,0-3.4974c0.97149,0.29214,2.062,0.41142,2.1686,1.9595,0.33824-2.2099,0.94822-2.1018,1.9064-2.963,0.95814,0.86127,1.5681,0.75315,1.9064,2.963,0.10661-1.5481,1.1971-1.6674,2.1686-1.9595v3.4974l-2.3764,1.2239z"/>
                                    <Path d="m193.52,578.85-3.9464-2.7128,0-3.2231c1.3836,0.32035,2.9366,0.45115,3.0885,2.1488,0.48172-2.4232,1.3504-3.6754,2.715-4.6198,1.3646,0.94444,2.2332,2.1966,2.715,4.6198,0.15183-1.6976,1.7049-1.8284,3.0885-2.1488v3.2231l-3.9464,2.7128z"/>
                                    <Path d="m193.24,587.8-4.5378-3.9854,0-4.7351c1.5909,0.47062,3.3767,0.66279,3.5513,3.1567,0.55391-3.56,1.5528-5.3995,3.1218-6.787,1.569,1.3875,2.5679,3.227,3.1218,6.787,0.17458-2.4939,1.9604-2.6861,3.5513-3.1567v4.7351l-4.5378,3.9854z"/>
                                    <Path d="m201.61,593.09-4.1037,5.6759-4.6463,0-4.1037-5.6759z"/>
                                    <Path d="m186.39,602.62c2.0526,1.1219,2.8106,3.3568,3.0299,7.5527h11.55c0.21927-4.1959,0.97728-6.4308,3.0298-7.5527z"/>
                                    <Path strokeLinejoin="bevel" d="m204.17,593.09,0-5.7018c-1.9498,0.53675-3.2129,1.6912-3.7755,3.2577,0-1.8927-2.4906-6.2573-5.2071-8.4294-2.7242,2.4314-5.2575,6.3801-5.2066,8.4294-0.46332-1.4918-1.8258-2.7209-3.7755-3.2577v5.702z"/>
                                    <Path strokeLinejoin="bevel" d="m205.04,602.62-0.00021-5.7022c-2.1373,0.53675-3.522,1.6912-4.1387,3.2577,0-1.8927-2.7299-6.2573-5.7077-8.4294-2.9863,2.4314-5.7635,6.3801-5.7077,8.4294-0.50788-1.4918-2.0014-2.7209-4.1387-3.2577v5.702z"/>
                                    <Path strokeLinejoin="bevel" d="m207.44,614.32,0-6.5765c-2.6591,0.68624-4.3124,2.653-5.1491,3.7996,0-3.5614-4.0212-8.9902-7.1011-10.768-3.1599,1.8244-7.1011,7.435-7.1011,10.768-0.85883-1.1395-2.49-3.1134-5.1491-3.7996v6.5765z"/>
                                    <Path strokeLinejoin="bevel" d="m206,628.92,0-6.7617c-2.3465,0.9193-3.0479,3.1802-3.7862,4.7163,0.28981-6.8584-3.8614-14.23-7.0239-16.1-3.1624,1.8699-7.3926,9.3996-7.0239,16.1-0.75787-1.5265-1.4397-3.797-3.7862-4.7163v6.7618z"/>
                                    <Path d="m204.36,639.16,0-6.7618c-2.4581,0.58449-2.61,1.491-3.3916,3.0055,0.28981-4.0963-2.6114-8.7695-5.7739-10.639-3.1624,1.8699-6.0637,6.5431-5.7739,10.639-0.78168-1.5145-0.87771-2.421-3.3916-3.0055v6.7618z"/>
                                </G>
                                </G>
                                <G id="tower">
                                    <G>
                                        <Path d="m98.935,664.23,0-20.44c-0.66964-2.6026-2.8793-4.9052-4.5407-5.3664v-17.993l3.7418,2.0232,4.2712,18.811v22.965z"/>
                                        <Path d="m98.935,664.31,0-20.519c-0.66964-2.6026-2.8793-4.9052-4.5407-5.3664v-19.243c2.5118,0,3.7418,3.2732,3.7418,3.2732l4.2712,18.811v22.886z"/>
                                        <Path d="m96.275,669.55c1.7299-0.78125,4.2487-2.9188,4.2487-5.0695v-25.547l-1.1852-2.1088h43.522l-1.6983,2.1088v25.547c0,2.1508,1.7297,4.2883,3.4596,5.0695z"/>
                                        <Path d="m135.84,669.55c-1.7299-0.78125-4.2487-2.9188-4.2487-5.0695v-24.297l3.619-3.359-29.588,0.00008,3.6191,3.3589v24.297c0,2.1508-2.5189,4.2883-4.2488,5.0695z"/>
                                        <Path d="m131.69,669.55c-1.7299-0.78125-4.2487-2.9188-4.2487-5.0695v-21.965l2.369-3.359h-18.798l2.3688,3.359v21.965c0,2.1508-2.5189,4.2883-4.2488,5.0695z"/>
                                        <Path d="m115.92,639.16,8.9819-0.00004-0.00002,30.393-8.9818,0z"/>
                                        <Rect strokeLinejoin="bevel" width="3.5864" height="16.495" x="103.7" y="647.64"/>
                                        <Rect strokeLinejoin="bevel" width="3.5864" height="16.495" x="134.45" y="647.64"/>
                                        <Path strokeLinejoin="bevel" d="m100.64,619.82h4.3202v16.909h-4.3202z"/>
                                        <Path strokeLinejoin="bevel" d="m100.64,616.64h4.2946v3.1387h-4.2946z"/>
                                        <Path strokeWidth="1.0337" strokeLinejoin="bevel" d="m136.17,623.46h6.1594v13.054h-6.1594z"/>
                                        <Path d="m104.89,636.6,0-28.941c1.2321,0,1.4222,4.2418,4.249,4.2418,1.4716,0,1.3152-1.757,0.4889-3.1882-0.73168-1.2673-1.6372-3.0176-0.40702-6.2783,0.84298,2.4949,3.1119,3.2866,2.6927,1.722-0.72042-2.6886-2.7945-3.1298-1.2383-7.3021,0.54049,3.4806,2.7732,3.3273,2.2309,1.3034-0.61083-2.2796-1.8732-3.2139-0.3157-6.4275,0.87209,3.6492,2.0519,3.4352,2.0519,1.1711,0-3.347-0.1285-6.9568,4.2027-8.296,0,0,0.25002-3.0682,1.8123-3.0682s1.8123,3.0682,1.8123,3.0682c4.3312,1.3393,4.2027,4.949,4.2027,8.296,0,2.264,1.1798,2.4781,2.0519-1.1711,1.5574,3.2136,0.29513,4.1479-0.3157,6.4275-0.54227,2.0238,1.6904,2.1772,2.2309-1.3034,1.5562,4.1722-0.5179,4.6134-1.2383,7.3021-0.41923,1.5646,1.8497,0.77297,2.6927-1.722,1.2302,3.2606,0.32466,5.011-0.40702,6.2783-0.82627,1.4311-0.98274,3.1882,0.4889,3.1882,2.8268,0,3.0168-4.2418,4.249-4.2418v28.941z"/>
                                        <Path d="m98.124,614.74,0.000081,22.079,2.5111,0-0.00019-22.135c-0.90498-0.45686-1.7546-0.5274-2.511,0.0558z"/>
                                        <Path d="m98.203,629.03c3.1124,1.5914,6.1949,3.4325,6.9754,7.7931h-6.9754z"/>
                                        <Path d="m141.37,622.42,0.00006,14.407,2.0354,0,0-14.443c-0.63587-0.2981-1.5039-0.34413-2.0354,0.0364z"/>
                                        <Path d="m143.41,628.92c-3.1124,1.5914-6.1949,3.4325-6.9754,7.7931h6.9754z"/>
                                    </G>
                                    <G>
                                        <Path d="m122.83,595.27,1.8142-1.5247,0-1.9528c-0.6637,0.0645-1.0258,0.29275-1.516,0.93531-0.41694-1.2944-1.3337-2.3051-2.5624-2.9327-1.2287,0.6276-2.1454,1.5924-2.5624,2.8867-0.49022-0.64256-0.8523-0.8249-1.516-0.88935v1.9528l1.8142,1.5247z"/>
                                        <Path d="m123.8,600.16,0.8432-1.8253,0-2.5384c-0.6637,0.0654-1.0258,0.29688-1.516,0.94855-0.41694-1.3127-1.3337-2.3377-2.5624-2.9742-1.2287,0.63649-2.1454,1.6149-2.5624,2.9276-0.49022-0.65166-0.8523-0.83658-1.516-0.90194v2.5384l0.8432,1.8253z"/>
                                        <Path d="m123.93,606.79,2.6948-3.2865,0-3.2432c-0.98588,0.11068-1.5237,0.50272-2.2519,1.6061-0.61934-2.2227-1.9811-2.7084-3.8062-3.7861-1.8251,1.0777-3.1869,1.4845-3.8062,3.7072-0.72818-1.1034-1.266-1.4165-2.2519-1.5272v3.2432l2.6949,3.2865z"/>
                                        <Path d="m124.72,613.3s3.1405-2.7397,3.3269-4.2436v-3.4672c-1.2171,0.14291-2.3682,0.45834-3.2672,1.8831-0.76458-2.8701-1.9586-3.6704-4.2117-5.0621-2.2532,1.3916-3.4471,2.192-4.2117,5.0621-0.89895-1.4248-2.0501-1.7402-3.2672-1.8831v3.4672c0.3965,1.5039,3.3269,4.2436,3.3269,4.2436z"/>
                                        <Path d="m126.06,625.32s4.3013-4.7614,4.3999-6.6164v-5.4059c-1.6097,0.22281-3.1321,1.3298-4.321,3.5513-1.0112-4.4748-2.5903-7.5949-5.5702-9.7647-2.9799,2.1698-4.559,5.2898-5.5702,9.7647-1.1889-2.2215-2.7113-3.3285-4.321-3.5513v5.4059c0.30884,1.8551,4.3999,6.6164,4.3999,6.6164z"/>
                                        <Path d="m126.06,632.43s3.6763-3.7418,4.3999-5.3664v-5.4059c-1.6097,0.22281-3.1321,1.3299-4.321,3.5513-1.0112-4.4748-2.5903-7.0369-5.5702-9.2067-2.9799,2.1698-4.559,4.7318-5.5702,9.2067-1.1889-2.2215-2.7113-3.3285-4.321-3.5513v5.4059c0.93384,1.6247,4.3999,5.3664,4.3999,5.3664z"/>
                                        <Path d="m127.54,636.56c-1.0733-4.6678-1.9959-8.1303-7.163-11.641-5.167,3.5104-6.0894,6.9728-7.1627,11.641z"/>
                                        <Path d="m130.2,639.16,0-6.7618c-2.3465,0.91931-4.467,2.2802-5.2487,3.7947-0.87376-3.754-2.5569-5.4078-4.6536-7.6786-2.0967,2.2708-3.5008,3.9245-4.3746,7.6786-0.78168-1.5145-2.9024-2.8754-5.2489-3.7946l0.00022,6.7618z"/>
                                    </G>
                                </G>
                                <Use href="#tower" transform="matrix(-1,0,0,1,390.73979,0)"/>
                                <G>
                                    <Path d="m72.694,694.25,245.33,0,0.00018,12.531-245.33,0.00001z"/>
                                    <Path d="m66.228,706.76,258.26,0,0.00018,12.512-258.26,0.00002z"/>
                                    <Path d="m85.576,675.51,219.56,0,0.00015,8.1093-219.56,0.00001z"/>
                                    <Path d="m79.157,683.56,232.4,0,0.00017,10.622-232.4,0.00001z"/>
                                    <Path d="m89.412,669.28,211.89,0,0.00015,6.174-211.89,0z"/>
                                    <Path d="m112.41,669.31h16.005v49.935h-16.005z" strokeWidth="1.0446"/>
                                    <Path d="m115.95,669.31h8.9171v49.936h-8.917z" strokeWidth="1.0429"/>
                                    <Path d="m187.08,669.31h16.006v49.935h-16.005z" strokeWidth="1.0446"/>
                                    <Path d="m190.73,669.31h8.9171v49.936h-8.917z" strokeWidth="1.0429"/>
                                    <Path d="m262.19,669.31h16.005v49.935h-16.005z" strokeWidth="1.0446"/>
                                    <Path d="m265.73,669.31h8.9171v49.936h-8.917z" strokeWidth="1.0429"/>
                                </G>
                                <G fill="none">
                                    <Path d="m98.935,664.23h193.07"/>
                                    <Path d="m115.79,712.97h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438"/>
                                    <Path d="m190.77,712.98h8.6071m-8.6071,-6.2533h8.6071m-8.6071,-6.2533h8.6071m-8.6071,-6.2533h8.6071m-8.6071,-6.2533h8.6071m-8.6071,-6.2533h8.6071m-8.6071,-6.2533h8.6071"/>
                                    <Path d="m265.57,712.97h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438m-9.2438,-6.25h9.2438"/>
                                </G>
                            </G>
                        </Svg>
            case 'kr':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300" transform="translate(0 0)"/>
                            <G transform="matrix(0.555, -0.832, 0.832, 0.555, 82.343, 123.267)">
                                <G id="b2" onPress={() => this.applySelectedColor(3)} stroke={this.state.appliedColors[3]} transform="translate(36.765)">
                                    <Path id="b" d="M0,0H73.529M0,18.382H73.529M0,36.765H73.529" strokeWidth="10"/>
                                    <Path d="M0,0H73.529M0,18.382H73.529M0,36.765H73.529" transform="translate(0 269.608)" strokeWidth="10"/>
                                </G>
                                <Path d="M0,0V61.275" transform="translate(73.529 257.353)" onPress={() => this.applySelectedColor(0)} stroke={this.state.appliedColors[0]} strokeWidth="5"/>
                                <Circle onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} id="Ellipse_186" cx="73.529" cy="73.529" r="73.529" transform="translate(0 79.657)"/>
                                <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M73.529,0a36.765,36.765,0,0,0,0,73.529,36.765,36.765,0,1,1,0,73.529A73.529,73.529,0,1,1,73.529,0Z" transform="translate(0 79.657)"/>
                            </G>
                            <G id="Group_773" data-name="Group 773" transform="matrix(-0.555, -0.832, 0.832, -0.555, 143.523, 262.622)">
                                <Use href="#b2" transform="translate(-36.765)"/>
                                <Path d="M0,0V18.382m0,229.78v21.446M0,287.99v18.382" transform="translate(36.765 9.191)" onPress={() => this.applySelectedColor(0)} stroke={this.state.appliedColors[0]} strokeWidth="5"/>
                            </G>
                        </Svg>
            case 'kw':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="100"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="100" transform="translate(0 100)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100" transform="translate(0 200)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M0,0,150,100V200L0,300Z"/>
                        </Svg>
            case 'kz':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <G transform='scale(0.3)'>
                                <G id="sun" onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} transform="translate(900, 420)">
                                    <Circle r="134.5497"/>
                                    <G id="r16">
                                        <G id="r4">
                                            <Path id="r" d="m0,-152.9c8,-0.1 11,-5.1 11,-11.1c0,-8 -11,-46.1 -11,-46.1s-11,38.1 -11,46.1c0,6 3,11.1 11,11.1z"/>
                                            <Use href="#r" transform="rotate(90)"/>
                                            <Use href="#r" transform="rotate(180)"/>
                                            <Use href="#r" transform="rotate(270)"/>
                                        </G>
                                        <Use href="#r4" transform="rotate(22.5)"/>
                                        <Use href="#r4" transform="rotate(45)"/>
                                        <Use href="#r4" transform="rotate(67.5)"/>
                                    </G>
                                    <Use href="#r16" transform="rotate(11.25)"/>
                                </G>
                                <G id="bird" onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} transform="translate(-180)">
                                    <Path d="M316.94,213.44c-1.08,0.06-2.13,0.2-3.16,0.53-1.41,0.19-2.76,0.68-4.16,0.91l-0.56,0.09-0.94,0.09c0.06,0.26,0.1,0.52,0.1,0.78,0,0.27-0.03,0.53-0.1,0.75-0.06,0.21-0.25,0.47-0.4,0.63-0.2,0.22-0.41,0.41-0.66,0.53-0.24,0.12-0.51,0.17-0.78,0.19-0.27,0.01-0.55,0-0.81-0.1-0.27-0.09-0.52-0.26-0.75-0.46-0.28,0.07-0.57,0.12-0.84,0.15-0.28,0.03-0.54,0.03-0.79,0-0.28-0.08-0.57-0.17-0.84-0.28s-0.53-0.25-0.78-0.41c-1.02,0.6-2.16,1.17-2.78,2.22-0.35,0.48-0.42,1.03-0.5,1.6-0.05,0.7,0.13,1.44,0.43,2.09,0.11,0.19,0.2-0.69,0.54-0.81,0.57-0.47,1.28-0.81,2-1,0.61-0.31,0.53,0.02,0.28,0.5-0.06,0.25-0.4,1.2,0.06,0.72,2.03-0.9,4.28-1.08,6.47-1.25,3.18-0.33,6.37-0.4,9.56-0.44,3,0.04,6,0.08,9,0.19,1.43,0.04,2.87,0.36,4.28,0.12,0.34-0.09,0.87-0.11,1.07-0.31-0.64-0.37-1.39-0.38-2.1-0.47h-5.72c-1.59-0.16-3.25-0.18-4.75-0.78-0.4-0.16-0.77-0.54-1.15-0.13-0.57,0.2-1.18,0.34-1.78,0.38-1.05,0.08-2.1-0.14-3.07-0.53,0.7-0.97,1.54-1.82,2.31-2.72-0.62-0.1-1.22-0.23-1.84-0.38,1.09-0.75,2.1-1.6,3.16-2.4z" transform="scale(3.3333333,3.3333333)"/>
                                    <Path d="m1212.2,746.01c-7.2452,4.3503-12.775-3.3623-18.831-5.6752-4.3249,2.3488-4.7288,10.208-8.7706,13.93-4.8342,5.5019-10.76-1.5363-10.318-6.9649-5.7825,4.8741-8.7067,15.922-18.057,14.446-4.4308-3.6151-7.7219-11.201-11.106-2.5636-2.7613,4.2221-10.11,10.229-13.916,3.8533-1.1784-5.6287-4.0008-12.25-7.0634-3.3078-2.1024,6.3247-8.8507,10.978-15.379,8.2088-3.5737-2.9216,2.8649-13.727-1.6841-12.958-6.7998,4.4958-10.753,15.658-20.242,14.764-3.6847-4.1359,2.236-11.144-1.8057-15.735-4.7711,6.1235-10.063,15.089-18.315,15.735-3.9884-3.2319,0.1571-12.501-2.3893-13.873-8.4677,5.0781-17.402,14.128-28.05,11.294,4.1497-15.873,21.49-21.442,36.072-22.68,25.089-3.0835,51.484,2.5863,75.624-6.469,3.9004-2.3734,13.35-5.7392,9.9847-11.244-2.9805-4.3463,7.7529-2.647,8.7855-7.7238-0.639-6.4302,4.9265-5.5452,10.364-6.108,24.376-1.0516,48.455,4.0818,72.758,4.9546,1.8358,11.842-11.301,20.157-21.876,16.5-5.0519,0.81828-12.627-11.615-11.142-2.5698-1.0183,4.7472-0.3056,11.017-4.6433,14.188m-207.4-24.248c5.6435,5.1653,9.6005-0.97254,14.875-3.2155,17.692-6.085,33.128-16.719,48.346-27.344,9.221-7.6305,17.214-17.525,29.597-20,24.155-7.303,49.832-6.4173,74.081-13.157,18.464-25.281,49.825-34.299,76.096-48.831,5.8991-1.8316,8.1781-6.6867,10.062-12.047,10.028-15.83,23.689-29.857,39.845-39.439,7.6441-4.1767,16.764-6.5825,25.418-4.6718-0.6201,10.307-6.5329,19.442-13.672,26.57,5.842-0.12861,10.863-3.8191,16.767-3.6114,2.0233,10.578-9.4007,16.114-15.478,22.7,3.3855,0.78754,16.353,1.7684,9.2865,5.1591-9.0054,6.2497-19.289,10.541-27.602,17.799,7.6694,1.3778,8.5436,3.0082,0.7445,5.782-4.2215,2.8617-12.341,3.8616-13.126,9.4374,5.7939,3.5608-2.6685,7.0964-5.933,8.2546-6.2414,1.4535-12.798,4.1652-4.5067,8.9071-3.1365,4.7384-9.8653,5.7486-15.356,5.2805,1.6661,5.3701,4.0776,11.378-2.8919,13.747-15.624,11.811-33.96,20.402-53.601,22.367,24.536,1.8866,49.807-2.668,70.773-16.011,2.768-3.2727,17.282-6.7896,9.1636-9.5419-3.822-1.5904-12.016-3.3567-12.57-6.2707,11.355-7.006,25.664-4.514,37.88-8.6758,0.3163-3.9551-9.2914-2.8547-12.874-3.7554-8.5427-0.69975-8.0417-2.8803,0.1954-3.6882,10.422-2.759,22.226-3.3028,30.993-10.098-7.1383-3.3066-16.116-0.39512-23.732-3.0955,12.911-5.6498,28.142-6.2167,39.726-14.704,5.2763-5.871-6.7598-4.0356-10.267-3.8931-7.1509,1.2447-10.456-2.1779-2.3324-5.1489,13.871-10.227,31.433-16.871,41.176-31.697,2.3078-3.3186,5.4328-13.319-1.9277-9.7216-9.681,3.2185-18.198,14.101-29.228,10.735,21.733-16.844,42.413-36.02,57.267-59.33,0.7674-6.7232-9.7852-7.4509-12.532-2.172-13.963,13.454-26.6,29.335-44.477,37.77,17.121-16.525,31.276-36.092,43.626-56.372,2.6476-6.0321,9.7642-13.286,5.9021-19.983-6.2255-5.1532-14.013-0.43606-17.248,5.7304-10.854,14.169-19.096,30.708-33.054,42.25,12.219-23.322,24.871-48.148,25.179-75.047-0.037-5.5382-1.1493-13.694-8.6693-12.659-5.9622,1.0681-4.5464,9.9912-7.0042,14.504-5.4111,18.377-7.9508,38.279-19.05,54.371,2.4971-14.934,6.8661-30.5,3.512-45.58-1.5667-6.7396-12.45-3.8412-11.048,2.8288-13.002,65.86-57.194,123.46-114.99,156.78-26.464,14.973-56.023,24.626-86.096,29.002-8.0899,1.7718-16.839,0.73198-24.572,3.4906-18.736,14.367-30.079,38.407-53.802,45.935-10.632,5.2835-24.496,6.3556-32.098,16.233-0.658,1.2632-0.7991,2.7266-0.7739,4.1273"/>
                                    <Path d="m1075.8,654.95c-3.5006,6.354-5.5592,13.658-10.06,19.347-13.541-12.321-33.171-11.914-50.347-12.734-14.177-0.75657-29.594-2.0646-40.563-12.176-11.539-9.452-20.958-21.724-33.852-29.393-11.769-3.2001-23.633-7.2042-33.095-15.271-20.22-16.482-31.8-40.937-51.558-57.933-3.7669-3.7078-8.209-6.5812-12.429-9.7268-4.0096,0.97695-2.1955,9.6311-7.1022,5.2194-2.6694-1.8995-9.348-2.0844-9.9492,0.56937,6.0404,7.96,12.087,17.049,12.924,27.23-4.1198,0.4224-11.445-0.87064-13.487,0.66378,5.4715,8.2003,12.484,15.473,20.452,21.263-3.8217,0.61454-11.353,0.27988-12.818,1.8198,7.9092,6.4462,16.391,13.034,26.747,14.69,2.12,2.7948-3.099,8.1901,1.2898,10.576,2.5458,1.0399,10.945,2.7801,5.1592,5.6751-3.9705,2.6755-2.4971,8.9111,2.5797,8.7706,3.2101,1.6391,10.418,2.0412,10.982,4.879-2.8453,2.8956-11.698,6.3288-4.1637,9.0409,7.039,3.904,15.067,6.4384,23.105,6.7168-4.0336,3.3936-9.004,5.3206-13.156,8.5127,18.55,10.877,39.113,18.03,59.433,24.919,8.0909,2.7031,16.274,5.2237,24.661,6.8102-24.369-1.4066-47.922-8.6212-70.116-18.495-11.503-5.0452-23.084-9.9197-34.873-14.265,5.1692-2.6897,11.148-3.3471,16.509-5.6751-11.128-2.2291-23.285-2.9605-33.067-9.0768,1.4997-2.6758,7.1829-2.8021,10.326-4.1642,5.9114-1.416,9.5779-3.1339,1.2438-3.6475-8.4057-2.2812-18.045-1.2576-25.452-6.3278,0.4769-3.04,8.2283-1.9813,11.386-3.2934,3.9751-0.683,8.3958-1.2548,11.573-3.9294-12.994-5.388-29.99-1.5707-40.168-13.046-2.3476-4.3712,7.2884-0.85006,10.033-1.5782,6.9723,0.00003,14.467,2.2158,21.107-0.59559-18.934-8.3124-39.215-16.095-53.655-31.471-1.6039-2.4716-6.4071-9.2249-2.5317-10.06,11.239,1.4869,19.374,13.753,31.396,11.844,1.5973-2.1526-6.9835-5.6809-9.1254-8.7582-17.528-15.041-34.541-31.364-46.825-51.066-0.84492-6.5792,9.4971-7.565,12.22-2.4832,13.405,12.911,25.514,27.977,42.209,36.791,5.9247,2.8724-3.4012-3.4-4.6433-5.6751-15.427-17.914-30.113-36.834-40.895-57.932-1.9299-3.8028-5.1284-10.686,0.64643-12.71,5.7722-2.8919,11.501,1.0476,14.428,6.0066,11.342,14.305,19.688,31.307,33.817,43.225-12.037-23.359-24.889-47.948-25.2-74.828,0.28226-5.2109,0.61728-13.092,7.6832-12.878,5.9331-0.89942,4.9962,6.696,6.941,10.318,5.845,19.747,8.3946,41.121,20.121,58.556-2.5904-14.649-6.4022-29.735-3.8694-44.627,0.58422-4.8898,6.0884-6.37,9.6818-3.4138,2.9046,7.11,3.5106,15.889,6.1574,23.491,15.06,51.519,48.875,96.832,92.941,127.24,36.292,24.891,79.362,39.749,123.32,42.341,3.9698,0.346,7.9556,0.46548,11.932,0.70954"/>
                                    <Circle cx="1020" cy="720.887" r="2.367"/>
                                    <Circle cx="1019.8" cy="720.507" r="0.965" stroke="#00afca" strokeWidth="0.38127393"/>
                                </G>
                                <G id="ornament" onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]}>
                                    <G id="oh">
                                        <G id="oq">
                                            <Path d="m120,72.922s-9.6109-8.0762-12.874-4.0253c-5.2494,6.5154,16.14,38.968,16.14,50.396,0,18.759-12.517,23.861-27.973,26.539-10.371,1.7981-27.259-0.752-27.259-0.752,3.1796-4.2726,5.2478-5.5316,10.606-5.8731-5.9648-3.0968-12.039-9.8188-12.039-20.284,0-16.138,6.6434-22.789,6.6434-40.983,0-10.093-8.2759-22.941-8.2759-22.941,14.628,1.464,21.878,15.009,17.753,25.834,2.3286,0.33542,4.4428-0.18873,6.2586-1.9094,1.0706,3.0005-0.61945,6.4832-2.8834,9.4837,1.8233,0.97432,3.1624,0.39003,6.0661-0.20942-0.27536,3.0915-2.1278,6.3758-6.6597,9.4671,13.151-3.4144,21.243,5.7517,21.243,15.347,0,7.248-5.0791,12.443-10.044,12.443-1.6044,0-3.9611-0.66078-5.2908-1.6532-0.93725,1.9948-0.45429,4.6646,0.51121,6.6596-3.6388-0.96187-5.9484-3.1229-4.3043-7.6212-2.7948-0.25675-5.0181-1.2011-6.5305-3.0005,1.5323-1.9624,3.8568-3.0927,6.5305-3.0005-2.035-4.1994,0.23284-6.5505,3.5373-8.456,0,0-2.1015,8.4558,3.2654,8.4558,2.4133,0,4.6122-0.78561,4.6122-4.3421,0-3.097-2.7075-7.387-8.9659-7.1142-6.2586,0.27277-11.332,4.3152-11.332,14.306,0,9.2162,7.4334,13.8,17.229,14.096,8.8338,0.27277,15.501-4.5126,15.501-13.625,0-12.128-17.508-39.773-17.508-50.581,0-8.109,7.2922-12.635,14.427-12.635,9.2518,0,17.058,9.1612,17.058,9.1612l-5.4352,6.8146z"/>
                                            <Path id="op" d="m122.02,292.14c0,20.27-18.198,30.688-32.498,30.688-19.266,0-29.524-11.519-29.524-26.598,0-8.5475,1.5661-13.911,5.5074-22.092,0,0,31.78-66.091,44.153-91.653,1.543-3.1882,2.0408-6.8175,2.0408-12.138,0-8.2171-7.97-14.933-16.327-15.139-7.618-0.19053-15.918,7.1022-15.918,15.412,0,10.093,5.2358,14.593,10.612,14.593,6.6157,0,9.2518-2.7198,9.2518-7.3649,0-3.2366-1.5632-4.6371-3.8095-4.6371-5.6744,0-4.0817,7.6376-4.0817,7.6376-2.8183-0.617-5.1335-3.4965-3.8095-7.0921-2.0617-0.45904-3.9929-1.5413-5.5102-3.2733,1.5211-1.4747,3.266-2.6132,5.5102-3.0005-1.3289-4.3872,0.44687-6.5308,4.2857-7.433-0.77466,1.6876-0.80131,3.2401-0.54421,4.7054,6.0436-1.7186,15.306,1.0163,15.306,11.456,0,10.365-7.1935,19.093-20.681,16.912,3.2087,1.5341,4.8407,4.6732,5.1701,8.1832-2.4491-0.9547-5.1701-1.0911-5.1701-1.0911,1.577,2.7808,3.7672,5.1776,3.6734,10.638-2.5006-1.1368-4.8227-3.2419-8.0272-1.9094,5.0294,9.8968-1.1497,23.511-16.871,26.732,5.7537-6.7443,8.5714-14.027,8.5714-21.277,0-23.496-6.5305-27.445-6.5305-43.78,0-6.8343,3.5133-14.215,10.476-19.231v0.27276c-4.6021-1.2324-7.5502-3.4985-9.2447-6.5775,10.515-2.9816,25.799-2.9269,34.006,0.30202,9.434,1.0925,16.019,8.3308,17.959,12.004,1.9406,3.6708,5.7096,16.953,0,28.912-6.2487,13.088-35.711,75.559-44.897,95.198-1.9484,4.1654-3.1293,8.5827-3.1293,13.366,0,12.03,11.02,16.23,17.279,16.23,7.4829,0,15.102-5.7008,15.102-12.82,0-4.5112-2.4491-7.2285-5.9864-7.2285-8.4587,0-7.9449,7.1957-6.2586,11.729-5.2643-2.3667-8.3243-6.5917-7.4829-11.047-2.9805-0.40822-5.8174-1.822-8.4353-4.7735,2.0598-2.601,4.5722-4.5671,8.4353-4.6371-1.6873-6.9119,2.9406-9.8352,7.4829-11.456-1.437,5.0729-2.3803,10.911,6.2586,10.911,6.2986,0,11.258,1.0911,14.15,5.1827,0.17007-5.4553,0.68027-27.005,0.68027-27.005,0.36281-8.0977-10.839-7.8662-17.959-5.4554,2.6871-9.3276,8.1979-14.371,20.952-13.093-3.0953-1.2957-6.3946-4.2084-6.3946-9.8198,0.002-7.593,6.1621-16.005,10.206-18.492l2.022,79.051z"/>
                                            <Use href="#op" transform="matrix(1,0,0,-1,0,645.08)"/>
                                        </G>
                                        <Use href="#oq" transform="matrix(-1,0,0,1,240,0)"/>
                                    </G>
                                    <Use href="#oh" transform="matrix(1,0,0,-1,0,1000)"/>
                                </G>
                            </G>
                        </Svg>
            case 'la':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150" transform="translate(0 75)"/>
                            <Circle onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} cx="60" cy="60" r="60" transform="translate(190 90)"/>
                        </Svg>
            case 'lb':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150" transform="translate(0 75)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M324.382,125c-3.22,6.78-9.283,11.519-15.079,16-.953.832-3.324,2.445-1.6,3.673,1.473-1.647,5.517.534,3.167,2.3-2.105,1.971-5,2.692-7.342,4.318a22.792,22.792,0,0,0-5.811,4.021c-.112,2.69,3.337,1.2,4.736,2.321,1.823,1.948-.773,5.233-3.164,4.481-3.058.094-5.171,2.785-6.327,5.352-2.392,3.7-6.926,4.795-10.534,6.9a69.592,69.592,0,0,0-5.991,3.94c-2.479,1.694-.322,5.05,2.315,4.226,2.846-.284,5.408-2.521,8.355-1.876,2.673.939,3.423,4.432,2.512,6.871-.674,1.952-2.309,3.328-3.62,4.853a15.938,15.938,0,0,1-7.84,4.22,15.559,15.559,0,0,0-7.24,5.031,58.2,58.2,0,0,1-6.787,6.19c-.783,2,1.427,3.7,3.271,3.649,3.883-.245,6.575-3.423,9.882-5.056,2.745-1.234,5.975,1.724,5.3,4.584-.212,2.782-2.817,4.193-5.132,5.049a67.056,67.056,0,0,0-17.966,13.861c-1.085,2.214-4.07,1.562-5.677,3.106-1.046,1.953,1.58,2.983,3.148,2.782,6.735-.81,13.019-3.656,18.973-6.788,2.214-1.059,4.293-2.452,6.6-3.3,2.162-.534,5.177.406,5.564,2.867,0,2.6-2.576,4.036-4.615,5.051-6.285,3.3-13.183,5.128-19.9,7.31-2.515-.7-4.409,3.771-1.651,4.576,2.917,1,6.019.2,9,.067,9.227-1.414,17.3-6.406,25.922-9.634a8.194,8.194,0,0,1,9.588,3.823,9.529,9.529,0,0,1-.26,9.843c-2.964,6.341-7.47,12.169-13.519,15.815-3.8,1.88-8.229,2.6-11.483,5.477-3.01.992,1.508,5.059,2.162,1.831,1.808-2.467,5-3.2,7.892-3.306,4.348-.473,8.966-1.276,12.344-4.286,3.029-2.352,6.014-5.6,10.127-5.648,2.273.27,4.521,2.1,6.83.982,2.02-.924,5.189-.383,5.716,2.1.964,2.905,3.959,4.227,6.334,5.782.86,1.207,3.716,4.32,4.375,1.576-.532-1.958.228-4.953,2.8-4.3,2.243.1,4.38.928,6.619,1.063a11.9,11.9,0,0,1,7.161,5.123c1.165,1.608,3.715,4.372,5.611,2.239,1.176-2.206-1.069-4.045-2.9-4.833a53.909,53.909,0,0,1-7.274-5.933c-3.434-3.208-6.4-7.288-6.946-12.08a51.116,51.116,0,0,1,.273-14.416,5.224,5.224,0,0,1,7.451-3.112c3.86,1.761,7.693,4.281,12.118,4.007,6.394.138,12.965-1.087,19.213.767,6.081,1.915,10.429,7.046,16.352,9.267a2.439,2.439,0,0,0,3.508-1.377,2.865,2.865,0,0,0-1.054-3.626c-6.865-6.929-16.247-10.3-24.189-15.71-2.5-.635-2.956-4.658-.644-5.819,3.039-2.209,7.339-1.181,10.036,1.1a15.124,15.124,0,0,0,7.514,2.335c2.737-.857,1.41-4.816-1.04-5.114-4.439-2.506-7.619-6.62-11.465-9.88-2.214-1.875-4.638-3.773-7.614-4.138a20.12,20.12,0,0,0-4.939-.25c-1.546-1.68.514-4.252,2.513-4.042a29.738,29.738,0,0,0,6.139,0c2.289-.167,4.576-.4,6.873-.42,1.855,1.262,5.56-.919,3.886-3.1-1.828-1.6-4.472-1.463-6.656-2.285a102.582,102.582,0,0,0-11.7-3.075c-2.767-.165-2.426-3.806.006-4.208,1.591-.593,2.975.629,4.5.819,2.609.56,5.3.553,7.91,1.121,2.211-1.091.5-4.322-1.5-4.51-4.72-1.688-8.8-4.733-12.785-7.7-4.4-3.311-8.4-7.139-12.852-10.373-1.616-1-4.267-1.291-4.692-3.511-.15-2.043,2.254-2.973,3.959-2.5,2.418.714,4.672,1.957,7.136,2.568,1.934.329,3.927.9,5.791.657,2.366-1.486-1.015-2.437-2.239-2.952a68.825,68.825,0,0,1-8.8-6.13c-2.4-2.048,2.035-2.953,3.56-2.164,2.55,1.067,2.84-2.649.935-3.584a38.139,38.139,0,0,1-6.214-3.923,27.681,27.681,0,0,0-12.371-5.269,16.847,16.847,0,0,1-12.5-7.763A48.541,48.541,0,0,1,324.382,125Zm-16.654,28.451c2.614.077,2.212,4.788-.361,4.474C304.867,157.764,305.02,152.944,307.727,153.451Zm24.654,2.537c2.543-.455,3.082,4.186.541,4.4C330.275,160.866,329.294,155.694,332.381,155.988Zm-7.221.6c2.579.507,2.12,5-.482,5.038-1.9.424-3.956,1.723-5.882.749-1.566-1.657.7-4.106,2.446-4.645C322.583,157.465,323.817,156.856,325.16,156.592Zm16.619.019c2.485.907,1.608,5.293-1.013,5.237-2.479.332-3.632-3.8-1.321-4.783A6.24,6.24,0,0,1,341.78,156.612Zm-28.035,4.976c1.827,1.739.748,5.094-1.5,5.9-1.624.9-3.838,3.04-5.606,1.282-.96-2.147,1.449-3.765,2.866-4.957A10.86,10.86,0,0,1,313.745,161.588Zm20.867,9.7c2.616,1.235,1.288,5.95-1.583,5.657-2.358-.6-2.05-4.642.325-4.964A6.343,6.343,0,0,0,334.612,171.286Zm-8.3.469c2.446,1.145.578,5.228-1.886,4.64-2.555-.3-2.508-4.792.31-4.387A4.5,4.5,0,0,0,326.311,171.754ZM344.2,174.1c2.681-.832,5.91,1.931,5.039,4.732-1.195,2.172-4.15,2.447-6.267,1.635-2.431-.12-4.066-3.774-1.9-5.321A5.953,5.953,0,0,1,344.2,174.1Zm-39.61.7c2.217-1.206,4.571,2.419,2.686,4.019-1.249,1.836-4.456,2.586-5.87.544C300.235,177.367,302.135,174.016,304.595,174.8Zm-10.23,1.717c2.515.344,4.154,2.629,5.084,4.8.227,2.651-3.685,4.105-5.391,2.176-1.919-1.2-3.6-3.679-2.593-5.977A2.709,2.709,0,0,1,294.365,176.515Zm61.2,9.581c2.73-.719,4.712,3.643,2.368,5.221-2.143,1.946-6.31-.632-5.192-3.41A3.59,3.59,0,0,1,355.567,186.1Zm-34.742,4.976c2.289.292,1.547,4.258-.569,4.125C317.984,194.777,318.5,190.849,320.824,191.073Zm-11.61,2.107c1.867-1.321,4.274,1.9,2.722,3.406C310.075,197.9,307.66,194.724,309.214,193.18Zm18.46.391a8.336,8.336,0,0,1,3.718,6.24c-1.037,2.311-5.042,1.754-5.494-.707A4.585,4.585,0,0,1,327.674,193.57Zm6.442,3.824c2.789-.7,1.788,5.128-.541,3.106A2.277,2.277,0,0,1,334.116,197.395Zm-40.459,4.059c1.847-.541,4.538.028,5.048,2.147.215,1.991-1.975,3.028-3.58,3.521-2.572.793-5.087,2.1-7.853,1.921-2.073-1.185-2.818-3.61-3.557-5.725,2-1.876,4.947-1.325,7.427-1.8C291.98,201.48,292.819,201.46,293.657,201.454Zm62.759,9.132c2.356-1.154,4.888,2.584,2.917,4.33a7.609,7.609,0,0,1-10.164.982c-.355-2.512,2.155-4.337,4.384-4.7A9.1,9.1,0,0,1,356.416,210.586Zm13.238,2.869c2.677-.46,4.784,3.358,2.873,5.333a5.947,5.947,0,0,1-8.588,1.207c-.961-2.261.989-4.617,3.065-5.342C367.9,214.272,368.741,213.786,369.655,213.454Zm-66.564,4.059a4.27,4.27,0,0,1,4.423,4.658c1.795,1.765-1.383,5.054-3.17,3.226-1.575-1.909-1.567-4.5-2.177-6.782C302.14,218.108,302.515,217.451,303.091,217.513Zm19.026,1.424c2.562-1.108,5.877,1.958,4.482,4.553-1,2.113-4.882,1.4-4.753-1.043A10.954,10.954,0,0,1,322.117,218.938ZM312.86,220.6c2.569-.589,4.927,2.741,3.5,4.964C313.8,225.788,312.467,222.748,312.86,220.6Z" transform="translate(-76.27 -50)"/>
                        </Svg>
            case 'lk':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <G transform="translate(5, 30) scale(0.4)">
                                <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]}d="M50,300 215,50H380V550H215z"/>
                                <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="165" height="500" x="50" y="50"/>
                                <Rect onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} width="725" height="500" x="430" y="50"/>
                                <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} id="leaf" d="m1086.1,466.06s6.7982,13.841,14.309,19.48c11.128,8.3556,33.945,7.752,43.629,17.5,11.604,11.495-0.9004,26.682-0.7959,28l0.6363,8.0206s-7.8245,0.0943-11.119,0.60793c-4.9538,0.7724-6.886,4.8032-16.109,4.2045-23.189-1.5052-22.254-22.397-23.566-40.25-1.1646-6.7983-3.8594-15.662-5.3908-22.458-1.313-5.8277-1.5933-15.105-1.5933-15.105z" stroke="#000" strokeWidth="2.12575722"/>
                                <Use href="#leaf" transform="matrix(-1,0,0,1,1585,0)"/>
                                <Use href="#leaf" transform="matrix(1,0,0,-1,0,600)"/>
                                <Use href="#leaf" transform="matrix(-1,0,0,-1,1585,600)"/>
                                <Use href="#lion" stroke="#000" strokeWidth="5.5598"/>
                                <G onPress={() => this.applySelectedColor(5)} fill={this.state.appliedColors[5]} id="lion">
                                    <Path d="m681.54,479.56,4.3593-2.517,1.8649,2.5215c2.4846,3.3595,9.3595,3.3215,13.921-0.0773l3.4882-2.5985,2.9208,2.5985c3.8402,3.4168,11.012,3.4213,15.591,0.0122,3.206-2.3882,3.653-2.4362,5.7728-0.61944,1.2637,1.0831,4.9702,2.3162,8.2366,2.7402,5.8828,0.76367,5.9719,0.72173,9.4138-4.442,2.8826-4.3245,3.3335-6.0748,2.6456-10.269-0.45593-2.7807-0.9471-7.2562-1.0915-9.9454-0.26119-4.8694-0.23309-4.8997,6.8598-7.3695,3.9171-1.364,8.4514-3.1933,10.076-4.0653,2.8328-1.5202,10.643-10.699,10.643-12.508,0-0.47938-3.0511-1.2137-6.7801-1.632-14.833-1.6637-17.345-9.6288-7.7022-24.423,15.725-24.128,25.215-47.625,25.278-62.593,0.0285-6.6906,0.40945-8.937,1.2692-7.482,3.5135,5.9459-2.7808,30.877-12.316,48.78l-3.8392,7.2089,3.6635-0.84337c2.0149-0.46382,13.861-5.4619,26.325-11.107,34.115-15.451,45.833-18.479,67.911-17.549,18.497,0.77911,26.374,4.3927,39.434,18.09,6.9185,7.2565,13.583,12.449,25.775,20.08,25.975,16.259,27.058,17.667,28.293,36.788,1.2515,19.373,0.62869,20.424-14.024,23.661-12.524,2.7669-20.375,8.6054-22.481,16.717-1.1245,4.3318,1.242,4.4565,7.5561,0.39845l4.6275-2.9741,2.0576,2.9741c2.7051,3.91,8.455,3.9256,13.23,0.0356l3.6067-2.9381,3.6869,2.9381c5.7286,4.565,13.347,3.458,15.497-2.252,0.41335-1.0975,1.5164-0.74587,3.75,1.1953,4.1852,3.6374,14.914,5.1976,16.072,2.3376,0.44221-1.0912-0.3978-3.7862-1.8666-5.9887-6.2419-9.3596-8.1945-13.823-8.2758-18.918-0.11266-7.0863,2.0014-10.505,10.061-16.268,9.7908-7.0008,12.816-16.033,5.3706-16.033-4.5972,0-9.2317-4.0634-12.187-10.686-6.0079-13.461-4.8304-28.552,4.1866-53.657,9.1588-25.5,10.175-30.202,10.211-47.256,0.03-13.789-0.3175-16.174-3.4548-23.734-1.9182-4.6223-5.8102-11.505-8.6489-15.294l-5.1614-6.8903,6.6267-5.49c20.234-16.763,16.095-44.198-8.263-54.769-7.4516-3.2338-9.3134-3.5194-22.372-3.4316-7.8342,0.0527-19.78,1.0836-26.546,2.2911-6.8986,1.2311-18.575,2.2205-26.585,2.2526-12.725,0.0512-14.885-0.26249-19.789-2.8727-5.1132-2.7217-5.9899-4.0139-6.991-10.305-0.20575-1.2931-1.1099-2.5831-2.0089-2.8666-1.7392-0.54841-9.771,6.4223-10.958,9.51-0.58543,1.5235-1.0633,1.4182-2.7808-0.61319-1.1407-1.349-2.7333-4.4487-3.5393-6.8883-2.0267-6.1353,0.46204-10.735,7.6738-14.181l5.5952-2.6741-3.2993-2.0474c-6.8083-4.2248-18.385-1.3347-22.572,5.635-1.1843,1.9715-2.4761,3.5881-2.8706,3.5924-0.39444,0.003-2.6455-1.8765-5.0025-4.1795-8.7904-8.5893-5.7666-21.297,5.9908-25.177,6.2696-2.0689,11.818-0.49068,12.972,3.69,1.7624,6.3826,7.2409-2.0071,6.2584-9.584-0.6533-5.0374-0.55514-5.212,2.9305-5.212,4.8473,0,15.165,6.3619,18.356,11.319,3.7064,5.7573,3.4367,14.823-0.64203,21.58l-3.2027,5.3055,4.1894-0.83896c6.1434-1.2302,12.112-5.0453,15.131-9.6721,3.192-4.8914,3.5352-14.416,0.70469-19.555-2.7429-4.981-2.4284-5.7717,1.6267-4.0885,6.8969,2.8628,10.584,6.0201,13.35,11.431,2.4908,4.8729,2.6298,6.0838,1.2814,11.156-0.83198,3.1291-2.6831,7.246-4.1137,9.1486-2.2274,2.9626-2.3034,3.4593-0.52871,3.4593,3.3052,0,10.206-3.1281,12.658-5.7373,1.2383-1.3182,3.0437-4.564,4.012-7.2129l1.7607-4.8162,2.023,3.6712c2.8609,5.1912,8.4225,9.8627,15.204,12.77,7.293,3.1265,10.33,3.3027,6.5164,0.37792-2.5718-1.9723-7.3109-15.878-5.8747-17.238,0.84508-0.80031,10.747,6.8186,22.053,16.968,10.695,9.6009,17.415,12.746,27.238,12.746,12.548,0.00008,19.854-10.923,14.214-21.251-3.288-6.0216-10.613-6.8581-14.896-1.7011-1.9696,2.3714-2.5103,4.2577-1.9334,6.745,0.7066,3.047,0.4309,3.453-2.3451,3.453-3.6473,0-10.837-4.6664-23.606-15.321-19.471-16.248-43.13-30.02-60.214-35.05-10.963-3.2285-34.383-4.4883-45.528-2.4492-12.062,2.207-26.329,9.1099-34.101,16.499-13.772,13.094-13.991,30.518-0.58141,46.385l3.8411,4.5452-2.6005,4.0394c-3.7831,5.8765-3.4591,13.785,0.80339,19.61,1.8774,2.5656,3.7712,4.6637,4.2085,4.6623,0.43728-0.001,0.91679-1.6508,1.0654-3.6654,0.37644-5.0966,2.5638-8.5113,6.3183-9.8632,3.3816-1.2176,5.5676-0.64252,21.051,5.5376,16.289,6.5015,43.077,6.9484,71.561,1.1938,13.964-2.8211,30.43-2.6552,37.674,0.37962,13.279,5.5631,16.357,20.036,6.5955,31.022-4.2256,4.7559-8.3008,6.6927-21.983,10.448-10.412,2.8575-12.878,3.0472-36.543,2.8109-20.218-0.20184-27.484,0.18642-35.737,1.9096-8.9598,1.8707-14.471,2.0594-40.79,1.3961l-30.431-0.76685,3.3746,2.7943c1.856,1.5368,4.4782,3.4277,5.8271,4.202,2.2952,1.3174,2.2187,1.4944-1.1927,2.7593-2.0049,0.7434-6.4548,1.3516-9.8886,1.3516h-6.2432l-0.84015,5.3057c-0.46215,2.9182-0.42705,6.3252,0.0776,7.5711,0.74459,1.8377,0.46708,2.1016-1.4696,1.3977-1.313-0.47719-4.97-1.4158-8.1265-2.0857-3.1565-0.66995-7.4054-2.0342-9.442-3.0316-3.4248-1.6773-3.8054-1.6322-5.0669,0.60016-1.1264,1.9935-11.702,9.8644-13.254,9.8644-0.25046,0-0.57378-1.5176-0.71843-3.3725-0.14464-1.8549-1.6703-6.6837-3.3904-10.731-1.7202-4.047-3.5162-8.4619-3.9913-9.8109-0.71672-2.035-1.0412-2.1394-1.9056-0.61319-0.573,1.0118-1.4096,3.7711-1.8591,6.1318-0.44947,2.3607-2.043,6.1958-3.5412,8.5224l-2.724,4.2301-1.7374-3.617c-1.8651-3.8828-4.9615-7.9092-6.0825-7.9092-0.37837,0-1.0228,1.2417-1.432,2.7593-0.85453,3.1692-8.197,11.957-9.9903,11.957-0.66041,0-1.2007-2.4834-1.2007-5.5186s-0.5827-5.5186-1.2949-5.5186-1.2949,0.78545-1.2949,1.7454c0,2.3335-6.2706,9.2918-8.3736,9.2918-0.91771,0-2.394,0.82779-3.2807,1.8395-2.3118,2.638-4.2029,2.2678-3.231-0.63242,0.45568-1.3596,0.15939-4.5328-0.65846-7.0516-0.81788-2.5188-1.6875-5.1996-1.9325-5.9573-0.30871-0.95429-2.5558-0.70116-7.3116,0.82362-7.6852,2.4639-10.261,2.028-6.3087-1.0676,1.4449-1.1316,3.6425-5.0514,4.8838-8.7107,1.2412-3.6592,3.0726-6.9061,4.0698-7.2151,1.3963-0.43282,1.322,0.10204-0.32373,2.3272-1.1753,1.5891-2.1404,3.7321-2.1448,4.7624,0,1.0303-0.88884,3.473-1.9656,5.4282-1.0766,1.9552-1.7534,3.7483-1.5039,3.9845,0.24941,0.23626,3.1735-0.87452,6.4978-2.4684l6.0442-2.8979,0.0246,2.5925c0.0142,1.4259,0.74212,5.1875,1.6186,8.3592l1.5937,5.7666,4.1143-1.891c4.2049-1.9326,8.1874-8.8222,8.1874-14.164,0-2.6406,1.5126-2.2353,2.132,0.57128,0.18181,0.8236,1.1312,3.9147,2.1099,6.8692l1.7795,5.3717,2.817-3.3916c1.5494-1.8654,3.4917-5.5244,4.3163-8.131,1.4315-4.5251,3.6793-6.4706,3.6793-3.1845,0,2.368,6.4622,10.861,7.7088,10.131,0.60253-0.35262,1.8023-3.5401,2.6661-7.0833,1.7967-7.3686,4.6952-12.38,6.537-11.302,0.69252,0.40535,0.96225,1.192,0.59929,1.7482-0.36297,0.55613,1.1254,5.3468,3.3075,10.646,2.1821,5.2991,4.3732,10.634,4.8693,11.856,0.797,1.9632,1.5174,1.678,6.1947-2.4527,2.911-2.5708,5.5531-5.4487,5.8713-6.3953,0.48094-1.431,1.1303-1.3786,3.8524,0.31056,3.8067,2.3622,16.605,6.1683,17.593,5.2321,0.37021-0.35059,0.74975-3.7118,0.8435-7.4694l0.17042-6.8319,3.6804,0.76323c2.0242,0.41978,6.2805,0.39398,9.4584-0.0575l5.7779-0.82057-5.1492-3.5327c-2.8322-1.943-5.6958-4.4574-6.3636-5.5875-0.71142-1.204-3.232-2.2263-6.0873-2.469-7.7147-0.65558-21.388-8.3244-21.388-11.996,0-0.68925,1.8938,0.48271,4.2085,2.6043,5.1349,4.7067,12.269,7.6609,18.499,7.6609h4.6621l-2.884-3.8358c-1.6567-2.2034-3.1425-6.3832-3.4914-9.8218-0.55604-5.481-1.1346-6.3525-6.8578-10.331-3.4376-2.3899-7.6957-5.972-9.4622-7.9603l-3.2119-3.615-1.6387,4.2921c-0.90139,2.3607-2.003,4.2921-2.4479,4.2921-0.44494,0-2.1777-1.3797-3.8503-3.0659-1.6728-1.6862-3.3768-3.0596-3.7867-3.0518-0.4101,0.007-1.8919,2.2791-3.2929,5.0474l-2.5474,5.0333-1.9684-2.9012c-1.0827-1.5957-3.64-4.4189-5.6829-6.2738s-3.1174-3.3725-2.3877-3.3725c0.72956,0,3.251,1.9323,5.6033,4.294l4.2765,4.294,1.7405-3.146c1.0328-1.8669,1.4199-4.7346,0.95201-7.0533-0.68203-3.3797-0.5862-3.5761,0.70963-1.4546,0.82408,1.349,3.3259,3.9353,5.5597,5.7473l4.0616,3.2946,2.8028-5.1341c2.7895-5.1094,2.8091-5.1194,4.0782-2.0682,1.6972,4.0805,13.98,14.149,24.437,20.032,1.6118,0.9067,0.9322-2.2112-2.0444-9.3809-0.78834-1.8988-1.4333-5.3219-1.4333-7.607,0-3.39-0.97793-4.8988-5.3136-8.1981-6.2592-4.7632-8.2835-8.1504-9.463-15.835-0.47783-3.1128-1.5732-6.5749-2.4343-7.6935-1.2773-1.6596-1.4884-0.73081-1.1466,5.0465,0.23036,3.8942-0.27608,8.7359-1.1256,10.759l-1.5443,3.6791-1.1938-3.0659c-0.65653-1.6862-3.5605-4.6187-6.4535-6.5166-2.8929-1.8979-4.9233-3.7694-4.5119-4.1589,0.41126-0.38953,3.3874,1.3402,6.6134,3.8437,4.9147,3.814,5.9973,4.227,6.678,2.5471,0.79975-1.9739-0.001-10.562-1.5461-16.563-0.77113-2.9968-0.70366-2.9807,2.9932,0.71559,2.7266,2.7261,4.2342,5.9776,5.4023,11.65,1.4838,7.2068,2.2324,8.4066,8.8962,14.258,4.0018,3.5138,7.4844,6.1913,7.7391,5.9502,0.25458-0.24116,0.75961-9.3307,1.1222-20.199,0.69536-20.841-0.0906-25.8-5.1098-32.239l-2.5788-3.3085,4.054-4.3729c5.2886-5.7045,7.7168-10.277,8.7701-16.515l0.85683-5.0748-4.5751,4.3329c-3.7462,3.5479-5.5352,4.3329-9.8743,4.3329-4.2965,0-5.9749-0.72001-8.8702-3.8052-3.4739-3.7017-9.6295-7.2634-15.549-8.9969-2.1867-0.64031-2.9136-0.3614-2.9136,1.1179,0,1.0841-1.2079,4.2133-2.6842,6.9538l-2.6841,4.9828-5.6238-5.5587c-3.4497-3.4096-7.5436-6.0635-10.589-6.8644-7.7808-2.0462-8.2022-1.843-8.2022,3.954,0,8.7932-3.7543,10.431-10.511,4.5868-5.1508-4.4554-9.4235-5.4241-19.191-4.3505l-7.5435,0.82916,1.3573,3.4054c1.1337,2.8446,0.8782,4.0425-1.5508,7.2732-3.9398,5.2399-9.0624,7.5098-16.948,7.5098-3.6319,0-8.1768,0.75156-10.1,1.6701-1.9232,0.91856-6.7016,1.9768-10.619,2.3517-3.9171,0.37491-8.0922,1.044-9.2778,1.4869-1.8554,0.69306-2.059,0.12189-1.4614-4.098,0.91472-6.4581-3.5965-11.222-10.627-11.222-9.1217,0-13.329,8.1592-9.7568,18.922,0.68749,2.0714,1.5871,5.3381,1.999,7.2593,0.42746,1.9932,4.5362,7.2825,9.5688,12.318,4.8509,4.8537,9.4354,9.9041,10.188,11.223,0.75262,1.3191,3.2407,3.4359,5.529,4.704l4.1608,2.3058-0.5488-4.4519c-0.60318-4.8928,0.46295-5.6604,3.0662-2.2077,0.93053,1.2343,3.2945,3.2293,5.2531,4.4333,3.0853,1.8967,3.561,1.9353,3.561,0.28842,0-1.0454,0.62895-3.4543,1.3976-5.3531l1.3977-3.4523,2.4251,4.6972c1.3338,2.5835,5.6714,8.455,9.639,13.048,7.6986,8.9118,12.389,18.871,9.9683,21.163-0.98194,0.92988-3.6363,0.85791-9.1376-0.24774-4.2646-0.85709-9.5394-1.3101-11.722-1.0068-4.4571,0.61953-4.8082,0.0441-2.067-3.3881,2.8931-3.6226,2.4329-4.2201-3.2508-4.2201-6.5757,0-22.901-3.1522-29.168-5.6319-6.0934-2.4112-7.4993-1.8108-9.2928,3.9686-0.80725,2.601-2.2853,7.3142-3.2844,10.474l-1.8166,5.7444,6.5927-0.6349c3.626-0.3492,8.2897-1.1431,10.364-1.7642,2.0741-0.62112,3.9591-0.95122,4.1889-0.73356,0.22985,0.21769-0.6946,2.4623-2.0543,4.988l-2.4721,4.5922,4.1103-0.8379c2.2608-0.46085,5.662-1.5885,7.5584-2.5059,3.2998-1.5963,3.5648-1.4804,6.1676,2.6973,3.2006,5.1376,5.7611,4.9265,6.3292-0.52181,0.58738-5.6325,2.4401-4.7994,5.9255,2.6645,3.3515,7.1772,6.8385,9.7112,7.5085,5.4565,0.22232-1.4126,2.0278-3.7122,4.012-5.1101,4.0136-2.8276,7.0382-1.9792,8.7723,2.4603,1.795,4.5955-2.2084,9.3323-13.853,16.391-23.327,14.14-36.886,33.479-40.757,58.128-3.4915,22.233,7.4134,45.207,29.29,61.708,10.469,7.8966,27.1,16.231,26.043,13.051-4.4882-13.505-4.3404-39.274,0.2503-43.621,0.68891-0.65244,0.45194,2.0364-0.52663,5.9752-3.645,14.672-2.0615,26.363,7.282,53.763,8.4506,24.782,7.2809,35.373-4.6794,42.374-3.8414,2.2484-6.3146,2.6189-16.643,2.4936-11.207-0.13613-12.428,0.0895-16.026,2.9564-3.4881,2.7798-8.0108,11.906-8.0108,16.165,0,2.3072,2.562,2.0018,7.5966-0.90506z"/>
                                    <Path d="m863.45,479.06,4.7011-3.0213,3.1903,3.0213c4.1796,3.9583,9.0759,3.8698,13.094-0.23669,1.7536-1.792,3.3283-3.0336,3.4993-2.7593,0.17093,0.27434,0.95293,1.6025,1.7376,2.9515,0.99334,1.7076,3.0357,2.5662,6.7222,2.8263,4.4417,0.31334,5.6344-0.1165,7.3993-2.6674l2.1038-3.041,4.6277,2.9741c12.669,8.1426,19.42-0.40017,13.758-17.411-2.879-8.6495-1.296-13.512,7.983-24.521,3.9128-4.6423,7.1176-9.5973,7.1215-11.011,0-2.2539-0.72386-2.5559-5.9314-2.4527-4.9834,0.0994-6.4413-0.43585-9.0644-3.3233-4.2665-4.6965-4.013-10.075,0.75623-16.044l3.81-4.7681-6.7596-4.5873c-3.7178-2.5231-10.422-8.4924-14.899-13.265-10.054-10.719-19.939-15.802-32.975-16.955l-8.7404-0.77298,0.0129,6.6158c0.0168,8.5168,4.0137,16.71,14.924,30.588,12.405,15.779,13.271,18.222,13.774,38.846l0.42473,17.442-3.5896,3.4057c-3.2436,3.0773-4.7062,3.47-15.173,4.0736-9.9645,0.57467-12.058,1.0888-14.982,3.6791-3.8836,3.4404-5.0449,5.3118-6.244,10.063-0.69887,2.7688-0.41568,3.3725,1.5825,3.3725,1.3386,0,4.5493-1.3597,7.1349-3.0214z"/>
                                    <Path d="m596.82,433.98c1.1086-1.4991,2.0158-3.9198,2.0158-5.3794,0-2.2052,0.98543-2.7937,5.8314-3.4819l5.8314-0.82816-3.889-3.0993c-4.6204-3.6819-5.0478-6.5584-0.97546-6.5647,4.056,0,10.925-4.2118,11.969-7.3279,0.48536-1.4483,0.18013-3.3834-0.69044-4.3769-2.2738-2.5946-6.5486-2.2034-7.3427,0.67204-0.85348,3.091-2.2824,3.0992-5.5219,0.0306-4.8732-4.6153-4.9826-14.169-0.22595-19.732,2.2418-2.6218,2.2218-2.7938-0.6362-5.5005-3.0745-2.9118-5.2702-8.6748-3.826-10.043,0.45957-0.43524,2.8886-0.0884,5.3979,0.77114,3.5656,1.2211,4.9732,1.2396,6.4421,0.0846,4.4496-3.4973-0.37114-7.9944-7.5068-7.0025-2.8718,0.3992-4.0582,0-4.4706-1.4897-0.31195-1.1298-2.8238-2.605-5.6539-3.3204-5.0569-1.2784-5.0926-1.2628-5.0926,2.2213,0,3.8179-2.1794,4.5382-6.3206,2.0889-3.365-1.9903-6.6286-0.44518-6.6286,3.1383,0,3.3434,3.3623,4.9923,9.3882,4.604,4.6219-0.29789,4.7939,3.1391,0.40427,8.0796l-3.1567,3.5529,2.5008,3.5928c3.7037,5.321,3.3919,14.158-0.65433,18.547l-3.1721,3.4409-2.081-2.7593c-2.8919-3.8346-6.8476-3.5776-7.9323,0.51543-0.71028,2.6802-0.12315,3.905,3.2331,6.745,2.2555,1.9086,5.5485,3.4702,7.3178,3.4702,4.3784,0,4.2072,3.4433-0.34417,6.9217l-3.561,2.7216,5.5034,0.85366c3.0269,0.46958,5.5034,1.3529,5.5034,1.9628,0,2.339,3.8141,9.6148,5.0401,9.6148,0.70818,0,2.1948-1.2265,3.3034-2.7256z"/>
                                    <Path d="m668.48,402.92c5.0001-1.9709,15.821-11.134,15.821-13.398,0-0.71202-2.9869-3.997-6.6374-7.3001-7.6824-6.9509-16.039-18.657-18.204-25.501-1.1289-3.5687-6.5843-9.6779-21.951-24.581l-20.448-19.832-5.8934,1.4927c-3.2414,0.82104-7.1962,1.5127-8.7885,1.537-2.7441,0.0417-2.6943,0.19928,0.95383,3.0226l3.8489,2.9786,5.3959-2.9948c5.2303-2.9029,5.4165-2.9208,6.0615-0.58461,0.37773,1.3676-0.43704,3.7378-1.8831,5.479-1.4019,1.6877-2.2004,3.6023-1.7748,4.2546,0.42564,0.65216-0.92107,2.016-2.9927,3.0306-3.8397,1.8805-6.5048,8.0707-3.4747,8.0707,2.7261,0,8.7373-7.4169,8.0447-9.9256-0.35481-1.2846-0.18323-2.6059,0.38121-2.9363,2.3412-1.3703,2.1949,4.4528-0.18374,7.3168-1.4019,1.6877-2.2004,3.6023-1.7748,4.2546,0.42564,0.65218-0.92107,2.016-2.9927,3.0306-3.8148,1.8683-6.5067,8.0707-3.5029,8.0707,2.944,0,8.8566-7.0875,8.1244-9.7388-0.38303-1.3874-0.23476-2.7927,0.32968-3.1231,1.5768-0.92296,2.4275,3.6741,1.0964,5.9264-0.71298,1.2066-0.70651,2.8536,0.0168,4.1598,1.3096,2.3663-0.0182,6.9107-2.4316,8.3233-1.0345,0.60546-0.33394,1.7936,2.1753,3.6885,3.631,2.7423,3.7014,3.0302,3.7014,15.13,0,10.112,0.40827,12.722,2.2661,14.482,2.0848,1.9754,2.2661,1.9825,2.2661,0.0884,0-2.069,3.6318-4.5981,6.6028-4.5981,0.8764,0,6.3518,4.6402,12.167,10.312,5.8509,5.7058,11.973,10.561,13.707,10.87,1.7232,0.30733,3.5888,0.63391,4.1458,0.72575,0.55695,0.092,3.1792-0.68688,5.8271-1.7306z"/>
                                    <Path d="m605.96,354c0-3.2598-6.7241-6.7394-14.767-7.6415-6.4933-0.72835-6.5996-0.68714-6.5996,2.5565,0,2.685,1.0211,3.7413,5.5034,5.6928,7.2024,3.1357,15.863,2.804,15.863-0.60778z"/>
                                    <Path d="m613.33,353.7c3.2799-2.976,4.8339-6.5156,2.8606-6.5156-2.2695,0-8.293,5.4052-8.293,7.4417,0,3.1786,1.1188,2.9878,5.4324-0.92616z"/>
                                    <Path d="m606.34,344.06c0.27788-1.8392-0.8597-3.0666-4.2697-4.6066-7.3558-3.3221-16.15-4.8607-18.268-3.196-3.901,3.0662-1.3018,7.1829,5.0028,7.9235,2.5382,0.29812,5.98,1.0722,7.6482,1.7202,4.8456,1.882,9.4537,1.0239,9.8867-1.8411z"/>
                                    <Path d="m606.34,334.21c0.39598-2.6237-1.2816-3.5626-14.978-8.3834-10.225-3.5989-14.752-1.9018-11.484,4.3058,1.1384,2.1624,3.049,3.1503,7.3339,3.7919,3.187,0.4773,7.5427,1.4104,9.6793,2.0738,5.7081,1.772,9.0058,1.148,9.4489-1.788z"/>
                                    <Path d="m613.2,324.98c2.0666-2.0947,3.7572-4.567,3.7572-5.4936,0-3.0061-8.1614,2.3121-9.2017,5.9959-1.2478,4.4187,0.77501,4.2322,5.4449-0.50233z"/>
                                    <Path d="m606.34,324.36c0.45051-2.9886-4.5198-5.6876-14.294-7.7622-7.1711-1.522-10.334-0.6588-9.7971,2.6736,0.29315,1.8191,2.6814,3.1481,9.4566,5.2626,10.843,3.3836,14.104,3.3449,14.634-0.17403z"/>
                                    <Path d="m615.9,310.45c12.525-5.5755,13.608-19.635,1.7976-23.326-4.9037-1.5327-8.0341-0.70686-9.9112,2.6147-1.4372,2.5434-0.476,7.1676,1.4899,7.1676,0.66417,0,1.2076,0.85596,1.2076,1.9021,0,4.8819-19.123,7.0939-26.965,3.119-2.7551-1.3964-3.9546-5.0211-1.6616-5.0211,1.7134,0,2.8981-3.6935,2.0226-6.3059-1.1928-3.5592-4.7799-4.7922-9.9831-3.4317-11.74,3.0699-11.41,16.865,0.54277,22.719,9.8013,4.8001,31.287,5.0919,41.46,0.56291z"/>
                                    <Path d="m608.11,299.64c0.72529-0.68694,0.41011-1.7425-0.80582-2.6982-2.6627-2.0928-2.5207-5.2056,0.4-8.7689,2.1933-2.6759,2.4673-6.6804,3.2223-47.074,1.3008-69.611,6.4773-121.97,13.3-134.53,2.7163-5.0009,2.3354-5.0208-4.6839-0.24499-9.0418,6.1522-15.926,14.163-22.026,25.631-11.516,21.651-15.518,50.78-15.518,112.96,0,35.305,0.24051,39.924,2.2515,43.243,1.9103,3.1523,2.0118,4.3165,0.66998,7.6833-0.86981,2.1824-1.2645,4.2682-0.87709,4.6351,2.5711,2.435,21.302,1.789,24.067-0.82993z"/>
                                    <Path d="m713.34,233.26c0.39236-0.6012-0.47458-3.6364-1.9264-6.745-2.2635-4.8468-3.1753-5.6519-6.4-5.6519-10.102,0-26.341-4.5144-43.083-11.976-9.6677-4.3091-13.007-5.2994-14.166-4.2013-2.958,2.8014,1.9582,9.4508,9.5715,12.946,6.754,3.1007,25.635,6.9107,34.248,6.9107,4.9966,0,5.1147,0.22548,2.2713,4.3354l-2.0914,3.0228,5.6524,0.14508c3.1087,0.0799,7.4004,0.56638,9.5371,1.0813,5.5493,1.3373,5.6012,1.3384,6.3876,0.13328z"/>
                                    <Path fill="#000" d="m772.35,264.63c0-1.7992-5.2837-6.6752-10.638-9.817-4.2046-2.4674-4.8992-2.5424-4.9086-0.52996-0.0143,3.0552-2.7311,10.731-3.798,10.731-0.60162,0-1.4912-1.4999-1.9771-3.3332-0.48587-1.8332-2.5241-5.4462-4.5295-8.0287l-3.6462-4.6956-2.8391,4.3506c-2.6467,4.0557-7.2315,8.0278-9.2662,8.0278-0.48599,0-0.58103-2.1359-0.21134-4.7465,0.40169-2.8364,0.092-5.0863-0.77073-5.591-0.79353-0.4645-1.4428-0.30245-1.4428,0.3601,0,1.5283-6.367,8.751-7.7142,8.751-0.55513,0-1.3322-2.0695-1.727-4.5989-0.39469-2.5294-1.0656-6.5304-1.4908-8.8911-0.42526-2.3608,0.48144-0.75983,2.015,3.5576l2.7884,7.8498,3.0577-4.7839c1.6817-2.6312,3.0607-5.5063,3.0643-6.3893,0-0.88294,0.57248-1.2741,1.2641-0.86936,0.69149,0.40477,1.654,3.5676,2.1387,7.0284l0.88145,6.2925,3.3646-3.689c1.8506-2.0289,4.019-4.7452,4.8188-6.0363,1.427-2.3036,1.5078-2.3017,4.3463,0.10554,1.5907,1.349,4.0363,4.5757,5.4345,7.1704,1.3984,2.5947,2.7296,4.5262,2.9584,4.2923,0.22868-0.23399,0.74108-2.9088,1.1388-5.9441,0.39754-3.0352,0.75248-5.6312,0.7886-5.7688,0.19786-0.7521,10.135,5.7072,13.812,8.9778,2.3631,2.1022,4.6074,3.5278,4.9873,3.1681,0.37993-0.35979,0.69071-3.4612,0.69071-6.8921,0-5.3167-0.56355-6.7417-3.8155-9.6485-3.7391-3.3422-3.8437-3.3606-5.2252-0.91579-1.7931,3.173-3.9084,3.2188-3.9084,0.0846,0-2.2875-7.0659-11.08-8.9041-11.08-0.47653,0-1.9646,1.9315-3.3071,4.2923-1.3424,2.3607-2.786,4.29-3.208,4.2874-1.8125-0.0111-11.774-11.117-11.769-13.122,0-1.5945,0.67129-1.1868,2.4176,1.4761,1.3269,2.0235,3.9777,5.0443,5.8904,6.7129,3.8731,3.3787,5.2811,2.5571,6.7757-3.9536,0.42577-1.8549,1.1658-3.3725,1.6444-3.3725,1.6558,0,10.327,9.2097,11.547,12.264l1.2244,3.0659,0.92741-3.3725c1.134-4.124,2.3852-4.2774,4.1958-0.51425,0.75626,1.572,4.4918,4.8404,8.3011,7.263l6.926,4.4047,1.39-4.4303c0.76451-2.4366,1.7773-3.8368,2.2506-3.1116,0.70585,1.0815-1.0945,8.4227-2.4528,10.002-0.20356,0.23674-2.4479-1.0705-4.9875-2.9049l-4.6172-3.3353-0.0182,5.9708c-0.0129,3.2839-0.36905,7.2125-0.79856,8.7301-0.83976,2.9674-3.0686,3.8021-3.0686,1.1492z"/>
                                    <Path fill="#000" d="m737.82,217.03c-8.2314-6.8725-9.481-8.4451-9.2987-11.702l0.19399-3.4668,0.537,3.3485c0.31363,1.9552,2.5058,4.8853,5.2686,7.0422l4.7318,3.6937,2.9076-3.3631c1.5993-1.8497,2.9287-4.0529,2.9544-4.896,0.0673-2.1985,0.46176-2.0139,6.0347,2.8216,4.9515,4.2963,5.0287,4.3168,5.7651,1.533,0.41049-1.5519,0.26481-4.4736-0.32372-6.4926-1.6179-5.5499-1.3009-6.3875,1.1507-3.0403,1.2214,1.6677,3.1854,4.0253,4.3644,5.239,2.0523,2.1129,2.1775,2.0868,2.9412-0.6132,0.43872-1.551,0.80557-4.3898,0.81528-6.3085l0.0182-3.4885,4.4645,5.0607c4.1702,4.7272,4.5544,4.9018,5.8272,2.6494,0.7495-1.3262,1.3716-4.5171,1.3824-7.0908,0.0142-3.3248,0.36439-4.1637,1.21-2.8977,1.4121,2.114,0.43172,7.87-2.1758,12.775l-1.8712,3.5199-2.4571-3.8264c-3.1417-4.8928-4.1876-4.8142-6.2036,0.46582-1.9052,4.9898-3.1441,5.3696-5.0005,1.533-1.2013-2.4829-1.43-2.1787-2.2827,3.0374l-0.94776,5.7967-5.6785-4.4068-5.6786-4.4068-2.5528,2.9023c-1.4041,1.5963-2.5722,3.5922-2.5959,4.4353-0.0517,1.8274-1.4176,1.8844-3.4995,0.14622z"/>
                                    <Path fill="#000" d="m811.04,191.43c-2.9962-2.6993-5.0602-5.2746-4.5867-5.723,0.47342-0.44838,1.0065-0.57681,1.1846-0.28542,0.17806,0.29139,2.6271,2.8668,5.4424,5.723,6.4822,6.5765,5.1496,6.7629-2.0403,0.28543z"/>
                                    <Path fill="#000" d="m713.51,181.35c-2.7255-3.6852-2.5373-6.1267,0.7803-10.121,2.3974-2.8864,3.4925-3.2781,7.6788-2.7463,2.6854,0.34111,8.4638,2.7138,12.841,5.2725,5.0555,2.9552,10.285,4.9349,14.335,5.427,3.5069,0.42609,6.3763,0.58673,6.3763,0.35699,0-0.22973-1.4568-2.6032-3.2373-5.2744-4.2283-6.3433-4.0835-7.0241,0.68552-3.2237,4.8954,3.9012,10.751,5.0421,23.836,4.6444l6.393-0.19431-3.7088-3.6663c-5.1869-5.1273-3.5906-5.587,2.1375-0.61554,5.3722,4.6626,5.0358,4.991-6.2715,6.1196-4.8048,0.47958-9.9719,0.1317-14.267-0.96048-6.4256-1.6342-6.675-1.6093-5.4578,0.54471,0.70158,1.2414,1.8378,2.2571,2.5248,2.2571,0.68721,0,1.2495,0.62908,1.2495,1.3979,0,2.3644-13.879,0.28524-20.511-3.0727-15.151-7.6712-17.058-8.3355-20.664-7.1991-2.0067,0.63235-4.0153,2.4833-4.7074,4.3381-2.3091,6.1873,6.4658,10.997,10.085,5.5273,1.049-1.5853,0.804-2.6696-1.0397-4.5988-2.5248-2.6423-2.288-3.0188,1.1205-1.7801,2.4199,0.87945,2.7455,6.6892,0.49439,8.8212-2.5757,2.4393-8.4536,1.7488-10.674-1.254z"/>
                                    <Path fill="#000" d="m773.19,166.07c-1.8946-1.7944-0.40932-2.2338,8.0847-2.3922,10.508-0.19593,16.89-1.947,24.42-6.7006,6.0333-3.8088,7.669-3.0593,1.9424,0.88996-5.2242,3.6027-13.372,6.3723-21.239,7.2191-3.8093,0.41006-8.1505,0.9781-9.6473,1.2623-1.4967,0.28421-3.0991,0.15887-3.561-0.27852z"/>
                                </G>
                            </G>
                        </Svg>
            case 'mm':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                                <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="150"/>
                                <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="150" transform="translate(0 150)"/>
                                <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100" transform="translate(0 100)"/>
                                <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M18,95.74H95.74L119.8,18l24.062,77.74h77.74l-62.933,48.125,24.062,77.74L119.8,173.481,56.87,221.605l24.062-77.74Z" transform="translate(130.197 30)"/>
                        </Svg>
            case 'mn':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="333.333" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="166.667" height="300"/>
                            <G transform="translate(-20 0) scale(0.13)">
                                <G onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]}>
                                    <G transform="scale(5)">
                                        <Circle cx="160" cy="164" r="44"/>
                                        <Circle onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} cx="160" cy="144" r="48"/>
                                        <Circle cx="160" cy="152" r="32"/>
                                        <Path d="M140,92a20,20 0 0,0 40,0c0-8-5-9-5-12 0-3,3-7-3-12 3,5-2,6-2,11 0,5,2,5,2,9a4,4 0 0,1-8,0c0-4,4-8,4-14 0-6-1-8-4-13-3-5-8-9-4-13-6,2-3,10-3,15 0,5-4,8-4,14 0,6,3,7,3,11a4,4 0 0,1-8,0c0-4,2-4,2-9 0-5-5-6-2-11-6,5-3,9-3,12 0,3-5,4-5,12Z"/>
                                        <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M72,216V408H112V216ZM208,216V408H248V216ZM120,248V264H200V248ZM120,360V376H200V360ZM120,216H200L160,240ZM120,384H200L160,408Z"/>
                                    </G>
                                    <G onPress={() => this.applySelectedColor(2)} stroke={this.state.appliedColors[2]} strokeWidth="24">
                                        <Circle cx="800" cy="1560" r="212"/>
                                        <Path fill="none" d="M800,1348A106,106 0 0,1 800,1560A106,106 0 0,0 800,1772"/>
                                    </G>
                                </G>
                                <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]}>
                                    <Circle cx="800" cy="1454" r="40"/>
                                    <Circle cx="800" cy="1666" r="40"/>
                                </G>
                            </G>
                        </Svg>
            case 'mv':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <G transform="translate(100 75)">
                                <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="300" height="150"/>
                                <Circle onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} cx="50" cy="50" r="50" transform="translate(118.75 25)"/>
                                <Circle onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} cx="50" cy="50" r="50" transform="translate(137.5 25)"/>
                            </G>
                        </Svg>
            case 'my':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="21.4" y="278.6" id="white"/>
                            <Use transform="translate(0,-42.8)" id="use3038" href="#white"/>
                            <Use transform="translate(0,-85.6)" id="use3035" href="#white"/>
                            <Use transform="translate(0,-128.4)" id="use3062" href="#white"/>
                            <Use transform="translate(0,-171.2)" id="use3064" href="#white"/>
                            <Use transform="translate(0,-214)" id="use3066" href="#white"/>
                            <Use transform="translate(0,-256.8)" id="use3068" href="#white"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="250" height="172"/>
                            <G transform="translate(-10 10) scale(0.2)">
                                <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M 576,100 C 409.85356,100 275,234.40553 275,400 C 275,565.59446 409.85356,699.99999 576,700 C 636.02725,700 691.95466,682.43566 738.92693,652.21675 C 711.57383,661.65623 682.2175,666.81914 651.65599,666.81914 C 504.3291,666.81915 384.75944,547.64674 384.75944,400.80929 C 384.75944,253.97184 504.32908,134.79944 651.65599,134.79944 C 684.21403,134.79944 715.40185,140.61419 744.2578,151.26671 C 696.21698,118.90999 638.30493,100 576,100 z" id="path4945" style="fill:#fc0"/>
                                <Path onPress={() => this.applySelectedColor(4)} fill={this.state.appliedColors[4]} d="M 914.28574,471.42858 L 814.74817,418.17806 L 844.17832,527.16068 L 777.60261,435.99589 L 756.83247,546.9551 L 736.40474,435.93234 L 669.5481,526.89131 L 699.31432,418.00001 L 599.61295,470.94319 L 673.67755,385.75059 L 560.87853,390.19195 L 664.57212,345.5715 L 561.01668,300.63137 L 673.80146,305.42069 L 600.00003,220.00001 L 699.53759,273.25053 L 670.10745,164.26791 L 736.68316,255.4327 L 757.4533,144.47349 L 777.88103,255.49624 L 844.73767,164.53728 L 814.97145,273.42858 L 914.67282,220.4854 L 840.60822,305.67799 L 953.40723,301.23664 L 849.71365,345.85709 L 953.26909,390.79722 L 840.48431,386.0079 z" transform="matrix(1.2737922,0,0,1.2422928,-89.4427,-29.478379)"/>
                            </G>
                        </Svg>
            case 'np':
                return <Svg width="100%" height="100%" viewBox="-17.582 -4.664 71.571 87.246">
                    <G transform="translate(0 5) scale(0.9)">
                        <Use href="#b" stroke="#003893" strokeWidth="5.1646754223"/>
                        <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} id="b" d="M -15,37.5735931288 h 60 L -15,0 v 80 h 60 L -15,20 z"/>
                        <G onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]}>
                            <Path d="M -11.9502769431,23.4834957055 A 12.8400974233,12.8400974233 0 0,0 11.9502769431,23.4834957055 A 11.9502769431 11.9502769431 0 0,1 -11.9502769431,23.4834957055"/>
                            <G transform="translate(0,29.0445562765) scale(5.5610605710)">
                                <Circle r="1"/>
                                <G id="jags6">
                                    <G id="jags3">
                                        <Path id="jag" d="M 0.195090322016,-0.980785280403 L 0,-1.388784109750 L -0.195090322016,-0.980785280403" transform="rotate(11.25)"/>
                                        <Use href="#jag" transform="rotate(22.5)"/>
                                        <Use href="#jag" transform="rotate(45)"/>
                                    </G>
                                    <Use href="#jags3" transform="rotate(67.5)"/>
                                </G>
                                <Use href="#jags6" transform="scale(-1, 1)"/>
                            </G>
                            <G onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} transform="translate(0,58.7867965644) scale(8.1433982822)">
                                <Circle r="1"/>
                                <G id="rays4">
                                    <G id="rays2">
                                        <Path id="ray" d="M 0.258819045103,0.965925826289 L 0,1.576749285537 L -0.258819045103,0.965925826289"/>
                                        <Use href="#ray" transform="rotate(180)"/>
                                    </G>
                                    <Use href="#rays2" transform="rotate(90)"/>
                                </G>
                                <Use href="#rays4" transform="rotate(30)"/>
                                <Use href="#rays4" transform="rotate(60)"/>
                            </G>
                        </G>
                    </G>
                </Svg>
            case 'om':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="600" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="350" height="100" transform="translate(150)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="350" height="100" transform="translate(150 200)"/>
                            <Image id="om-2" data-name="om" width="88" height="88" transform="translate(31 15)" href={require('../assets/flag_badges/as/om.png')}/>
                        </Svg>
            case 'ph':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} y="150" width="500" height="150"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M 250,150 0,300 0,0"/>
                            <G onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} transform="translate(100 150) scale(3)">
                                <Circle r="9"/>
                                <G id="j">
                                    <G id="i">
                                        <G id="h">
                                            <Path d="M -1,0 L -0.93848823,0.06151177 L 0,0 L -0.93848823,-0.06151177 z" transform="scale(19)"/>
                                            <Path id="g" d="M -0.88366349,0.11633651 L -0.83408932,0.16591068 L 0,0 z" transform="scale(19.238092)"/>
                                            <Use href="#g" transform="scale(1,-1)"/>
                                        </G>
                                        <Use href="#h" transform="rotate(45)"/>
                                    </G>
                                    <Use href="#i" transform="rotate(90)"/>
                                </G>
                                <Use href="#j" transform="rotate(180)"/>
                                <G transform="translate(-2.019238)">
                                    <G id="s" transform="translate(37.961524,0)">
                                        <Path id="t" d="M 5,0 L 1.618034,1.175571 1.545085,4.755283 -0.618034,1.902113 -4.045085,2.938926 -2,0 z"/>
                                        <Use href="#t" transform="scale(1,-1)"/>
                                    </G>
                                    <Use href="#s" transform="rotate(120)"/>
                                    <Use href="#s" transform="rotate(-120)"/>
                                </G>
                            </G>
                        </Svg>
            case 'pk':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="375" height="300" transform="translate(125.5)"/>
                            <Circle onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} cx="90" cy="90" r="90" transform="translate(226.25 60)"/>
                            <Circle onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} cx="82.5" cy="82.5" r="82.5" transform="translate(222.785 122.699) rotate(-41.633)"/>
                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M19-7.264,35.012,42.016-6.909,11.559H44.908L2.987,42.016Z" transform="translate(342.095 90.161)"/>
                        </Svg>
            case 'qa':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M146.66,300H0V0H146.66l40,16.667-40,16.667,40,16.667-40,16.667,40,16.667L146.66,100l40,16.667-40,16.667,40,16.667-40,16.667,40,16.667L146.66,200l40,16.667-40,16.667,40,16.667-40,16.667,40,16.667Z"/>
                        </Svg>
            case 'ru':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'sa':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M268.486,118.09a2.287,2.287,0,0,0-1.069.412c-1.1.735-3.271,3-3.337,5.606-.067,1.47-.344,1.464.619,2.4.7,1,1.39.9,2.794.169a2.967,2.967,0,0,0,1.35-1.969c.334-1.67-1.758.79-2.025-1.069-.467-1.726.868-2.436,2.138-4.106.029-.787.043-1.429-.469-1.444Zm20.437.112c-.392.053-.872.555-1.537,1.763-.477,1.265-2.535,3.178-1.05,7.125,1.215,2.5,1.714,6.569,1.163,11.1a21.351,21.351,0,0,1-2.138,3.019c-1.551,1.667-3.23,1.241-4.519.619a4.838,4.838,0,0,1-2.7-3.806c.1-4.109.339-10.835-.413-12.263a2.223,2.223,0,0,0-3.712-.75c-3.748,3.427-5.6,9.214-6.731,13.819-1.04,3.356-2.147,2.385-2.925,1.031-1.893-1.774-2.027-15.65-4.312-13.369-3.661,10.464,2.1,21.927,6.094,20.813,2.88,1.193,4.708-4.29,5.888-10.294.807-1.685,1.423-1.879,1.837-1.012-.106,7.984.572,9.764,2.625,12.187,4.579,3.532,8.366.448,8.663.15l3.563-3.562a2.143,2.143,0,0,1,2.962-.15c1.089.99.949,2.7,3.281,3.881,1.962.785,6.153.191,7.125-1.5,1.308-2.242,1.625-3.012,2.231-3.862.934-1.243,2.531-.693,2.531-.3-.149.693-1.087,1.377-.45,2.625,1.11.833,1.368.3,2.025.113,2.323-1.11,4.069-6.15,4.069-6.15.1-1.88-.967-1.737-1.65-1.35-.891.545-.946.73-1.838,1.275-1.136.169-3.336.918-4.425-.769-1.112-2.028-1.118-4.855-1.969-6.9,0-.149-1.486-3.216-.112-3.412.693.129,2.184.514,2.419-.731.727-1.214-1.569-4.657-3.131-6.394-1.356-1.489-3.229-1.67-5.044-.15-1.271,1.169-1.082,2.475-1.331,3.713a5.8,5.8,0,0,0,1.181,5.062c1.268,2.5,3.572,5.709,2.813,10.237a4.107,4.107,0,0,1-3.694,1.875c-.982-.214-2.581-.639-3.431-6.919-.643-4.753.161-11.413-1.856-14.531-.455-1.177-.847-2.319-1.5-2.231Zm-6.468.5c-.61.053-1.286.764-1.837,2.138a34.728,34.728,0,0,0-.956,6.506c-.377,1.626,1.7,2.314,2.644.225a19.926,19.926,0,0,0,1.519-7.087c-.221-1.238-.758-1.835-1.369-1.781Zm23.887.431c-.627.057-1.126.424-1.312,1.35a14.239,14.239,0,0,0,.244,5.175c.281,1.209,2.04,3.233,2.906,4.406,4.138,5.562,8.119,11.15,11.963,16.931.6,4.293,1.047,8.492,1.331,12.675a255.282,255.282,0,0,1,.244,30.244c1.718.068,4.471-2.774,5.438-6.937.628-5.759-.224-17.508-.281-20.906-.04-1.411-.127-3.094-.225-4.856,4.472,7.307,8.81,15.049,13.069,23.55,1.552-.738,1.208-9.479.3-10.706-3.408-7.336-8.117-14.578-9.619-17.363-.542-1.006-2.388-3.813-4.575-7.05-.4-4.619-.84-8.531-1.125-9.713-.7-4.883,2.007.551,1.631-2.287-.879-4.876-3.571-8.19-6.75-12.656-1.025-1.453-1-1.749-2.588.356a9.318,9.318,0,0,0-.656,5.606c-.416-.6-.931-1.322-1.669-2.213-2.746-2.356-2.915-2.484-5.194-4.406a5.627,5.627,0,0,0-3.131-1.2Zm70.8.731c-.305-.047-.638.1-1.012.656a4.264,4.264,0,0,0-1.463,3.225c.174,2.573.632,5.208.806,7.781.061.344.126.687.188,1.031a10.031,10.031,0,0,0-.656-.769c-5.016-5.269,2.3-.861-.956-4.931a39.062,39.062,0,0,0-5.925-5.812c-1.184-.765-1.9-2.227-2.288.263a49.035,49.035,0,0,0-.169,6.563c-.008,1.024,1.053,2.953,1.969,4.087,3.346,4.111,6.764,8.485,10.2,13.05.723,9.31.916,17.843,1.65,27.169-.1,3.988-1.331,9.286-2.494,9.787,0,0-1.776,1.02-2.962-.112-.863-.347-4.312-5.756-4.312-5.756-1.766-1.619-2.943-1.156-4.2,0-3.465,3.346-5.033,9.614-7.387,13.931-.607.963-2.317,1.783-4.219-.075-4.829-6.6-2.005-15.989-2.606-13.575-4.3,4.847-2.4,12.879-1.425,14.606,1.418,2.837,2.565,4.653,5.325,6.056a3.736,3.736,0,0,0,5.55-.6c2.529-2.621,2.563-9.324,3.75-10.65.833-2.436,2.92-2.017,3.938-.937a9.684,9.684,0,0,0,3.6,3.112,6.046,6.046,0,0,0,7.95.563,9.213,9.213,0,0,0,4.238-5.175c1.191-3.186.6-19.885.337-29.175,1.782,2.51,3.54,5.074,5.288,7.669a190.146,190.146,0,0,1,.862,23.887c-.181,1.531,5.344-4.572,5.306-7.463-.025-2.529,0-4.822,0-6.956,2.68,4.278,5.273,8.628,7.725,13.031,1.519-.8,1-9.407.038-10.594-2.567-4.307-5.854-8.962-8.4-12.563-.5-4.545-1.188-9.907-1.5-11.55-.486-2.562-.972-6.41-1.706-9.45-.2-1.187-.809-4.979-.619-5.344.3-.848,1.431.027,1.988-.956.834-.909-2.891-10.559-4.781-13.313-.68-1.234-1.909-.807-3.431,1.2-1.412,1.321-.9,4.334-.356,7.2,1.4,7.3,2.649,14.743,3.637,22.163-1.83-2.721-4.064-6.013-6.263-9.187-.059-.306-.281-1.428-.281-1.444,0-.131-.3-5.975-.562-7.369-.045-.565-.18-.728.413-.656a3.4,3.4,0,0,0,1.106.731c.634.116,1.189-.956.806-1.95-1.962-3.62-3.925-7.255-5.888-10.875a1.635,1.635,0,0,0-.806-.525Zm-182.718.188c-1.087-.031-2.287.643-1.819,1.95-.273.712,2.128,3.121,2.55,4.444.378.942-.375,3.976.413,4.256.724.314,1.721-2.1,2.1-4.331.21-1.222.051-5.4-2.794-6.263a2.33,2.33,0,0,0-.45-.056Zm208.146.024c-.248.025-.55.425-1.013,1.406-1.113,1.823-1.5,5.086-1.05,7.969,2.679,18.122,4.67,35.669,5.081,51.731a16.759,16.759,0,0,1-1.013,4.256c-1.581,2.027-3.326,4.569-4.969,5.794s-5.138,2.392-6.281,3.3c-3.626,2.1-3.644,4.507-.712,4.594,5.053-.587,11.032-1,15.15-7.219a24.093,24.093,0,0,0,2.456-9.356c.385-16.948-.217-33.52-2.756-45.769-.163-1.193-.69-3.936-.487-4.294.327-.839,1.98.084,2.569-.881.864-.882-4.275-7.462-6.075-10.275-.36-.707-.581-1.288-.9-1.256Zm-52.987.281c-.209.036-.517.354-1.087,1.106-1.411,4.615-1.908,8.384-1.369,11.25,3.626,18.92,7.34,36.158,6.75,54.169,1.719.011,3.707-3.933,4.556-7.837.465-5.378-.31-8.651-.45-11.813s-3.578-28.808-4.275-31.2c-.841-4.522,3.344-.595,2.887-3.225-1.447-3.316-5.057-8.144-6.187-11.025-.425-.771-.477-1.485-.825-1.425Zm-129.018.356a1.351,1.351,0,0,0-1.031,1.05c-.1.4.172,1.057-.187,1.256-.206.208-.989.068-.956-1.031a1.837,1.837,0,0,0-.413-.937.819.819,0,0,0-.544-.131c-.344.014-.336.1-.525.394a3.244,3.244,0,0,0-.192.918c-.043.391-.2.524-.487.581-.322,0-.246.035-.506-.131-.155-.169-.337-.236-.337-.525a3.083,3.083,0,0,0-.169-.975,1.04,1.04,0,0,0-.6-.337c-1.348,0-1.446,1.554-1.369,2.137-.1.11-.151,2.856,1.688,3.619,2.468,1.177,7.1.679,6.9-3.3,0-.352-.077-1.534-.112-1.856a1.062,1.062,0,0,0-1.163-.731Zm33.113.037a5.515,5.515,0,0,0-2.25.619c-1.636,1.566-2.019,4.077-.731,5.644,1.254.592,2.5,1.854,1.669,2.55-3.545,3.787-12.772,10.114-13.237,11.269,0,.009-.017.029-.019.038s0,.03,0,.037,0,.015,0,.019a.174.174,0,0,0,.019.038l.019.019s.015,0,.019,0,.015.017.019.019.014,0,.019,0l.019.019c.469.314,6.242.307,6.881.019,0,0,.015-.016.019-.019s.017,0,.019,0,0-.017,0-.019c1.984-.731,11.4-11.494,11.4-11.494-.488-.418-.938-.726-1.425-1.144-.523-.452-.47-.9,0-1.35,2.332-1.357,1.593-4.343.375-5.7a6.077,6.077,0,0,0-2.812-.562Zm86.55.037c-.248.025-.55.406-1.013,1.388a15.8,15.8,0,0,0-1.781,7.969c2.411,16.688,3.15,31.292,4.725,47.981.128,1.614-.108,3.959-1.181,4.894-3.968,4.144-9.691,9.254-15.919,11.606-.67.752,1.666,3.959,4.688,3.956,5.053-.587,9.494-3.423,13.613-10.894,1.1-1.742,3.037-5.472,3.094-8.363.385-16.948-.854-30.125-3.394-42.375a6.992,6.992,0,0,1,.15-2.962c.327-.391,1.437.009,2.025-.956.864-.882-2.306-8.193-4.106-11.006-.36-.707-.581-1.269-.9-1.237Zm-134.082.51a2.22,2.22,0,0,0-1.669,1.406,48.331,48.331,0,0,0,.169,7.819,85.466,85.466,0,0,1,2.194,12.563c.164,5.935-3.427,2.567-3.263-.375.829-3.822.605-9.838-.131-11.363-.584-1.525-1.261-1.9-2.681-1.65-1.128-.069-4.042,3.106-4.856,8.363a49.376,49.376,0,0,0-.975,5.1c-.4,2.715-2.2,4.637-3.45-.375-1.083-3.643-1.749-12.619-3.562-10.519-.519,7.009-1.136,19.341,4.819,20.606,7.2.692,3.224-12.176,5.831-14.513.493-1.155,1.406-1.175,1.481.281v10.931c-.066,3.554,2.273,4.61,4.087,5.344,1.889-.146,3.141-.094,3.881,1.744q.443,9.452.9,18.919s4.366,1.255,4.575-10.631c.209-6.979-1.39-12.836-.45-14.194.033-1.334,1.743-1.4,2.925-.75,1.883,1.328,2.718,2.962,5.644,2.306,4.452-1.226,7.134-3.388,7.2-6.806a29.65,29.65,0,0,0-2.044-9.75c.2-.591-.852-2.128-.656-2.719.8,1.253,2.011,1.149,2.287,0-.758-2.5-1.937-4.89-3.844-5.925-1.575-1.388-3.881-1.094-4.725,1.8-.391,3.335,1.209,7.288,3.637,10.519a10.312,10.312,0,0,1,.919,5.25,2.8,2.8,0,0,1-3.656-.712s-3.544-2.653-3.544-3.244c.94-6.021.2-6.71-.319-8.381-.364-2.307-1.457-3.037-2.344-4.612-.887-.94-2.089-.94-2.662,0-1.566,2.715-.831,8.545.3,11.156.818,2.4,2.072,3.9,1.481,3.9-.486,1.357-1.5,1.041-2.231-.525a38.994,38.994,0,0,1-1.256-10.237c-.313-2.7-.663-8.457-2.437-9.919a1.684,1.684,0,0,0-1.575-.806Zm25.294.037c-.357.045-.753.249-1.219.356a3.572,3.572,0,0,0-2.513,4.387c1.81,11,2.99,19.394,4.8,30.394.278,1.288-.8,2.986-2.194,2.813-2.367-1.6-2.955-4.845-6.994-4.706-2.924.035-6.259,3.217-6.675,6.281a15.246,15.246,0,0,0,0,7.2c2.055,2.471,4.517,2.208,6.675,1.65,1.775-.731,3.235-2.48,3.862-2.062,0,0,.017,0,.019,0s0,.016,0,.019c.387.677-.036,6.4-8.363,10.819-5.117,2.3-9.19,2.846-11.381-1.331-1.358-2.611.1-12.554-3.244-10.256-9.885,25.48,23.159,29.037,26.85,1.05.239-.79.967-1.582,1.481-1.388.226.1.432.4.506.975-.766,25.341-25.564,27.078-29.775,19.106-1.044-1.879-1.358-6.062-1.463-8.569a4.271,4.271,0,0,0-1.012-2.738c-1-.755-2.355,1.214-2.644,4.631a30.722,30.722,0,0,0-.3,6.15c1.323,20.015,33.233,11.416,38.419-5.119,2.567-8.548-.052-15,.806-15.787.007-.006.03-.013.038-.019l.038-.019c.009,0,.028-.016.037-.019a.536.536,0,0,1,.113-.019c3.168,3.412,7.613.434,8.587-.75a1.428,1.428,0,0,1,2.194-.206c2.471,1.776,6.8.939,7.706-2.194a69.354,69.354,0,0,0,1.069-9.487,9.616,9.616,0,0,0-3.431,1.425.9.9,0,0,0-.244.45c-.14.905-.273,1.813-.413,2.719a.671.671,0,0,1-.075.206.873.873,0,0,1-.3.281c-.569.311-1.561.133-1.612-.694-.766-3.481-3.917-3.934-5.831,1.463-1.288,1.044-3.637,1.248-3.881-.319.313-3.62-1.145-4.106-4.069-2.4-.94-7.171-1.872-14.017-2.812-21.187,1.219-.035,2.336.848,3.45-.544-1.206-3.749-3.756-11.378-5.194-12.094-.011-.005-.026-.014-.038-.019a1.911,1.911,0,0,0-.206-.206c-.027-.022-.067-.056-.094-.075s-.068-.041-.094-.056a1.04,1.04,0,0,0-.187-.075.969.969,0,0,0-.394-.037Zm98.6.056c-1.265-.038-2.664.759-2.119,2.344-.318.864,2.717,3.8,3.206,5.4.881,2.465-.672,4.816.244,5.156.843.38,2.016-2.545,2.456-5.25.509-2.187-1.052-6.668-3.263-7.594a2.62,2.62,0,0,0-.525-.056Zm-76.818,2.7a1.863,1.863,0,0,1,1.613,1.219c.363.8.181,1.561-.413,1.706s-1.361-.383-1.725-1.181-.181-1.58.413-1.725A.809.809,0,0,1,253.225,124.1Zm142.5,3.694a1.865,1.865,0,0,0-1.913,2.55c-.289.936,2.461,4.113,2.906,5.85.4,1.236-.61,5.22.225,5.588.769.412,1.849-2.752,2.25-5.681.223-1.6-.966-7.229-2.981-8.231a2.114,2.114,0,0,0-.488-.075Zm-78.786,1.95c.105.47.211.943.281,1.425.236,1.039.44,2.071.656,3.094-.91-1.253-1.663-2.266-1.987-2.625-2.059-2.447.046-1.607,1.05-1.894Zm18.15,8.925a1.377,1.377,0,0,0-1.031,1.069c-.1.4.19,1.038-.169,1.238-.206.208-1.008.087-.975-1.013A1.9,1.9,0,0,0,332.5,139a.819.819,0,0,0-.544-.131c-.344.014-.336.1-.525.394a3.42,3.42,0,0,0-.187.919c-.043.391-.181.524-.469.581-.322,0-.264.035-.525-.131-.155-.169-.338-.236-.338-.525a3.083,3.083,0,0,0-.169-.975,1.02,1.02,0,0,0-.6-.319c-1.348,0-1.427,1.535-1.35,2.119-.1.11-.17,2.874,1.669,3.638,2.468,1.177,7.115.661,6.919-3.319,0-.352-.1-1.534-.131-1.856a1.062,1.062,0,0,0-1.162-.731Zm-82.872.825a2,2,0,0,0-1.163.356,5.08,5.08,0,0,0-1.669,6.731,3.29,3.29,0,0,0,3.544,1.144c2.138.267,3.413-4.012,3.413-4.012s.064-1.2-2.475,1.069c-1.069.2-1.214-.186-1.481-.788a5.324,5.324,0,0,1,.337-3.356c.237-.668,0-1.092-.506-1.144Zm117.15.544a2.766,2.766,0,0,0-2.831,2.381c0,.977.441,1.513.356,2.4-.126.507-.649.84-1.894.244.195-.179-.806-1.594-.806-1.594-.971-.591-2.268.032-3.113.581a4.74,4.74,0,0,0-.281,3.769c1.394,2.576,6.176,6.971,8.456,7.013.042-2.322.268-5.41.394-7.331.054-.725.224-1.524.919-1.706s1.9.7,1.913-.056c-.126-1.477-.422-3.658-1.256-4.687a2.355,2.355,0,0,0-1.856-1.012ZM272.4,148.115a.7.7,0,0,0-.094.056l-.056.038a11.988,11.988,0,0,1-1.163,1.05c-1.073,1.221-1.266,2.071-1.2,4.519.061.259,2.038,5.755,3.712,9.619,1.129,4.016,2.174,8.614,1.406,12.956a31.911,31.911,0,0,1-13.087,13.687c-2.613.837-4.87.552-5.475-.019l-.019-.019a3.387,3.387,0,0,1-1.444-3.113s0-.017,0-.019l.019-.019c4.328-3.015,9.272-5.455,13.144-13.594,1.143-3.11,1.492-4.978.356-9.787a9.308,9.308,0,0,0-2.212-4.538l.019-.019c.737-.353,2.648,1.056,2.944.169a14.254,14.254,0,0,0-3.769-6.956c-1.542-1.4-3.22-1.563-4.631-.281-1.59.885-1.928,4.062-1.163,6.844.85,2.094,3.146,2.461,4.781,6.675,0,0,0,.017,0,.019.034.264.561,3.145-.263,4.313-.668,2.085-9.254,8.855-9.863,9.263-.007.007-.05.031-.056.037l-.019.019-.019.019-.019.019h-.037l-.019-.019s0-.017,0-.019l-.019-.037c-.026-.169.02-.6,0-1.294-.056-1.269.469-4.139.431-4.631,0,0,0-.017,0-.019l-.019-.019s0-.017,0-.019h-.019c-2.838,1.832-3.775,7.45-4.294,9.113-7.185,4.964-15.344,8.658-20.044,13.687-2.447,3.822,16.862-4.389,19.106-5.381a.548.548,0,0,1,.056.056c.427.469.463,2.106,1.744,3.581a10.21,10.21,0,0,0,10.425,3.356c6.962-2.516,10.973-7.261,15.056-12.525.584-.849,1.5-1.518,2.344-.863,2.806,6.282,10.9,10.752,21.356,11.213,2.42-2.943,1.263-4.391.281-5.006-.3-.2-5.2-2.111-5.962-4.012-.479-1.77.686-3.339,3.019-4.519,6.716-.812,13.318-1.714,19.706-3.769a17.344,17.344,0,0,1,2.175-6.75,3.182,3.182,0,0,1,1.106-1.2s.015-.014.019-.019l.019-.019.019-.019c0-.006,0-.031,0-.037a.618.618,0,0,0-.019-.187l-1.088-.637-21.431-.094a2.294,2.294,0,0,1-.581-.3c-.009-.008-.029-.03-.038-.037l-.019-.019-.019-.019-.019-.038-.019-.019s0-.017,0-.019l-.019-.019s0-.017,0-.019,0-.017,0-.019,0-.017,0-.019,0-.016,0-.019,0-.015,0-.019,0-.017,0-.019,0-.017,0-.019,0-.017,0-.019l.019-.019a.377.377,0,0,1,.019-.038,1.606,1.606,0,0,1,.675-.394c5.118-.7,14.209-2.188,14.813-10.931-.094-4.555-1.949-7.537-7.537-8.363-4.106.318-7.035,4.289-6.563,8.663-.2,1.177.4,3.488-.806,3.75-7.877.72-16.474,5.655-16.763,9.187h-.019l-.019.019-.038.019h-.038l-.056.019H281l-.075-.019a2.054,2.054,0,0,1-1.069-2.175,42.263,42.263,0,0,0-5.4-18.337c-1.111-1.11-1.595-1.56-1.913-1.613-.01,0-.028,0-.038,0H272.4Zm20.513,3.225a1.351,1.351,0,0,0-1.031,1.05c-.1.4.19,1.057-.169,1.256-.206.208-1.008.087-.975-1.013a1.9,1.9,0,0,0-.413-.956.763.763,0,0,0-.525-.131c-.344.014-.355.1-.544.394a3.42,3.42,0,0,0-.187.919c-.043.391-.181.524-.469.581-.322,0-.246.035-.506-.131-.155-.169-.356-.236-.356-.525a3.11,3.11,0,0,0-.15-.975,1.072,1.072,0,0,0-.619-.319c-1.348,0-1.427,1.535-1.35,2.119-.1.11-.17,2.874,1.669,3.638,2.468,1.177,8.35.484,6.919-3.319,0-.352-.1-1.534-.131-1.856a1.062,1.062,0,0,0-1.163-.731Zm82.782,3.394a.407.407,0,0,0-.206.019s-11.435,8.135-11.719,8.419c-1.134,1.008-.567,4.553,0,4.144.819.315,12.332-7.487,12.113-8.4.5.029.743-4.014-.187-4.181Zm-71.976,1.206a2.924,2.924,0,0,1,1.669.45c.854.494,1.38,1.239,1.313,1.781,0,.015,0,.042,0,.056s-.033.042-.038.056-.013.043-.019.056-.014.029-.019.037-.014.029-.019.037a.75.75,0,0,1-.113.131,2.088,2.088,0,0,1-2.25-.187,2.246,2.246,0,0,1-1.312-1.781c0-.015.016-.042.019-.056a.634.634,0,0,1,.075-.187c.012-.021.023-.056.038-.075l.019-.019a.859.859,0,0,1,.094-.094,1.073,1.073,0,0,1,.544-.206ZM203.568,158c-5.925.108-14.6,7.767-14.831,12.019,6.253-3,12.394-5.893,18.75-9-1.026-1.531-.062-2.911-3.919-3.019Zm19.2,2.663a1.6,1.6,0,0,1,1.519,1.106,1.922,1.922,0,0,1-.337,1.912s0,.016,0,.019-.013.029-.019.038c-.249.32-1.122.188-1.744.188a1.693,1.693,0,0,1-1.575-.769c-.216-.68.442-1.349.731-1.856,0,0,.016-.014.019-.019a.973.973,0,0,1,.131-.15,1.96,1.96,0,0,1,1.031-.45,1.807,1.807,0,0,1,.244-.019Zm150.7,2.358a1.987,1.987,0,0,0-1.594,2.719c-.289.936,1.429,4.207,1.875,5.944.4,1.236-.516,4.732.319,5.1.769.412,2.79-2.076,2.719-5.194.223-1.6-.572-7.51-2.587-8.513a1.9,1.9,0,0,0-.731-.056ZM245.478,168.8c-.931.065-1.762.563-1.387,1.875-.056.952,2.631,2.109,2.794,4.313.384.908-.574,3.817.225,4.088.734.3,1.753-2.011,2.137-4.163.213-1.179-.922-5.3-2.85-6.037a3.3,3.3,0,0,0-.919-.075Zm38.306,5.231c.071,0,.133,0,.206,0h.038c2.388.649,5.907.716,8.963,1.031,2.489.158,3.718,2.106,1.388,2.925-2.3.787-4.508,1.4-4.519,4.725.3,1.646.238,2.51-.019,2.906a.952.952,0,0,1-.075.094l-.019.019-.019.019-.019.019-.019.019-.038.019a.661.661,0,0,1-.112.056.792.792,0,0,1-.112.019c-.547.08-1.34-.441-1.931-.75-1.418-1.018-5.4-3.483-5.962-8.775a2.228,2.228,0,0,1,2.25-2.325ZM190.22,178.1c-.149,0-.448.45-.844.956-3.525,5.616-3.839,14-1.894,16.5a4.111,4.111,0,0,0,3.994,1.331c2.215-.96,3.188-5.446,2.662-7.087-.739-1.157-1.325-1.34-2.062-.356-1.558,3.164-2.207,1-2.344-.769a40.627,40.627,0,0,1,.45-8.887c.194-1.253.187-1.692.038-1.687Zm120.1,7.374a1.617,1.617,0,0,0-.825.169,14.971,14.971,0,0,0-3.319,2.831c-.485.369-.43.69-.281,1.331.378.869,1.044.6,1.8.188,1-.137,1.488.52,1.406,1.725a2.218,2.218,0,0,0,.206,2.156,1.665,1.665,0,0,0,2.1.262,39.728,39.728,0,0,1,7.237-2.531c.88-.018.829-2.372-.562-2.456a8.233,8.233,0,0,0-5.306,1.613c-1.117.258-1.308-.422-1.556-1.031-.284-1.512.639-2.579.45-3.713a2.625,2.625,0,0,0-1.35-.544Zm76.9,2.869c-.445.014-.914.076-1.594.131-.735.156-.991.478-1.125,1.369.053,1.351.879,1.284,1.725,1.819a1.461,1.461,0,0,1-.038,2.212c-.8.735-1.373,1.14-2.175,1.875-.379.646-.614,1.638.544,1.95,2.138.6,7.087-2.614,7.087-2.681a1.57,1.57,0,0,0,.469-1.744c-.467-.535-1.522-.214-2.231-.3-.337,0-1.445-.164-.919-1.144a6.641,6.641,0,0,0,.9-1.725c.334-.735.04-1.23-1.163-1.631a6.672,6.672,0,0,0-1.481-.131Zm-32.124,65.04s-.014.015-.019.019c-3.557.913-3.446,4.6-1.162,6.225-37.556,0-95.19-.637-107.55-.637-6.915,0-28.792-.825-29.213-.825,4.692,6.862,11.488,8.26,20.381,8.4,16.681,0,93.972-.206,115.968-.206-1.564,2.776.142,7.244,1.369,8.063.026.017.068.043.094.056a.848.848,0,0,0,.15.056c.014,0,.042,0,.056,0,1.456.344,2.1-.711,2.587-1.481,2.362.208,15.658.4,16.875-.019,0,0,.015-.017.019-.019.823,1.211,1.64,2.356,3.206,2.156,2.741-.588,4.9-.886,4.969-6.45,0,0-.28-9.481-6.506-8.887-1.473.223-5.606.638-5.606.638-4.783-.569-8.291-.627-13.669-.825.5-.63,1.373-3.182.3-4.106a1.732,1.732,0,0,0-1.275-.319h-.019c-.008,0-.03,0-.038,0s-.015-.018-.019-.019a.318.318,0,0,1-.056-.019.567.567,0,0,1-.094-.094c-.007-.008-.031-.028-.038-.037-.272-.4-.42-1.367-.6-1.613l-.019-.019-.019-.019a.3.3,0,0,0-.038-.019h-.037Zm2.55,13.556c.007,0,.012,0,.019,0,5.479.267,10.627.051,16.106.319a1.984,1.984,0,0,1-.131,2.737.623.623,0,0,1-.094.037.443.443,0,0,1-.075,0,.424.424,0,0,1-.075,0c-1.782-.045-2.812-.086-4.594-.131a1.031,1.031,0,0,0-.038-.263c-.422-1.251-3.48-1.168-4.2-.187l-.037.056c-.012.02-.028.055-.038.075s-.029.067-.038.094a.908.908,0,0,0-.019.131.844.844,0,0,0-.019.15,43.015,43.015,0,0,1-6.975-.169c-.706-.878-.623-2.468.206-2.85Z" transform="translate(-49.785 -47.236)" fill-rule="evenodd"/>
                        </Svg>
            case 'sy':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                            <G onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} transform="translate(23 0) scale(2.5)">
                                <G id="s">
                                    <G id="f">
                                        <G id="t">
                                            <Path onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} d="M54,47v13h8" transform="rotate(18,54,47)" id="o"/>
                                            <Use href="#o" x="-108" transform="scale(-1,1)"/>
                                        </G>
                                        <Use href="#t" transform="rotate(72,54,60)"/>
                                    </G>
                                    <Use href="#t" transform="rotate(-72,54,60)"/>
                                    <Use href="#f" transform="rotate(144,54,60)"/>
                                </G>
                                <Use href="#s" x="72"/>
                            </G>
                        </Svg>  
            case 'th':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200" transform="translate(0 50)"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100" transform="translate(0 100)"/>
                        </Svg>
            case 'tj':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="214.29"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="85.71"/>
                            <G fill="#f8c300" transform="translate(-27 10) scale(0.4)">
                                <Path d="M 672.0,340.7 a 12.5,12.5 0,0,1 23.3,5.9 v 50 h 9.4 v -50 a 12.5,12.5 0,0,1 23.3,-5.9 a 29.5,29.5 0,1,0 -56,0"/>
                                <Path d="M 678.7,327.65 a 20,20 0,0,1 21.3,9.55 a 20,20 0,0,1 21.3,-9.55 a 21.5,21.5 0,0,0 -42.6,0" fill="#fff"/>
                                <Path id="w" d="M 695.3,376.627 a 38,38 0 0 1 -63.845,24.316 a 39.5,39.5 0 0 1 -59.734,17.467 c 3.6496,36.426 58.252,28.989 62.32,-6.4288 17.154,30.115 54.873,21.49 65.91,-15.4 z"/>
                                <Use href="#w" transform="translate(700,0) scale(-1,1) translate(-700,0)"/>
                                <Path id="r" d="M 658.84,441.31 c -7.6181,16.446 -22.845,19.271 -36.164,5.9953 0,0 5.3539,-3.7831 11.086,-4.826 -1.0748,-4.5744 1.1291,-10.902 4.2354,-14.324 3.2575,2.2264 7.8036,6.6886 8.9598,11.874 8.0291,-1.0394 11.883,1.2815 11.883,1.2815 z"/>
                                <Use href="#r" transform="rotate(9.37, 700,804)"/>
                                <Use href="#r" transform="rotate(18.74, 700,804)"/>
                                <Path d="M 603,478 a 340,340 0 0 1 194,0" fill="none" strokeWidth="16" stroke="#f8c300"/>
                                <G transform="translate(700,380)">
                                    <G transform="translate(0,-140)">
                                        <Polygon id="s" points="0,-513674 301930,415571 -488533,-158734 488533,-158734 -301930,415571" transform="scale(0.000048669)"/>
                                    </G>
                                    <G id="h">
                                        <Use href="#s" transform="rotate(-30) translate(0,-140) rotate(30)"/>
                                        <Use href="#s" transform="rotate(-60) translate(0,-140) rotate(60)"/>
                                        <Use href="#s" transform="rotate(-90) translate(0,-140) rotate(90)"/>
                                    </G>
                                    <Use href="#h" transform="scale(-1,1)"/>
                                </G>
                            </G>
                        </Svg>
            case 'tl':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M597,294V-6H-3V294Z" transform="translate(5.652 6)"/>
                            <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M-3-6V294L297,144Z" transform="translate(5.652 6)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M-3-6V294L197,144Z" transform="translate(5.652 6)"/>
                            <G onPress={() => this.applySelectedColor(3)} fill={this.state.appliedColors[3]} transform="translate(75 150) scale(25) rotate(-26.565051)">
                                <G id="f">
                                    <G id="t">
                                        <Path d="M0,-2.1V0H1z" transform="rotate(18,0,-2.1)" id="o"/>
                                        <Use href="#o" transform="scale(-1,1)"/>
                                    </G>
                                    <Use href="#t" transform="rotate(72)"/>
                                </G>
                                <Use href="#t" transform="rotate(-72)"/>
                                <Use href="#f" transform="rotate(144)"/>
                            </G>
                        </Svg>
            
            case 'tm':
                return null
            
            case 'tr':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Circle onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} cx="75" cy="75" r="75" transform="translate(96.375 75)"/>
                            <Circle onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} cx="60" cy="60" r="60" transform="translate(130.125 90)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} data-name="Path 14993" d="M583.334,340.559,651.172,362.6l-41.927-57.707v71.329l41.927-57.707Z" transform="translate(-352.584 -190.559)"/>
                        </Svg>
            case 'tw':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300" transform="translate(0 1.828)"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="248.6" height="149.068" transform="translate(0 1.828)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M40.807,25.9,25.9,81.8,10.994,25.9,25.9-30m0,70.807L81.8,25.9,25.9,10.994-30,25.9" transform="translate(98.461 50.461)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M70.807,55.9,55.9,111.8,40.994,55.9,55.9,0m0,70.807L111.8,55.9,55.9,40.994,0,55.9" transform="translate(103.9 0) rotate(30)"/>
                            <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M70.807,55.9,55.9,111.8,40.994,55.9,55.9,0m0,70.807L111.8,55.9,55.9,40.994,0,55.9" transform="translate(144.823 0) rotate(60)"/>
                            <Circle onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} cx="31.677" cy="31.677" r="31.677" transform="translate(92.685 44.685)"/>
                            <Circle onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} cx="27.95" cy="27.95" r="27.95" transform="translate(96.411 48.412)"/>
                        </Svg>
            case 'uz':
                return null
            case 'vn':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                    <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="499.999" height="300" transform="translate(0 0.162)"/>
                    <Path onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} d="M415.947,191.459l49.488,152.31L335.873,249.636H496.021L366.459,343.769Z" transform="translate(-165.873 -117.297)"/>
              </Svg>
            case 'ym':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
                
            case 'ye':
                return  <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="300"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} width="500" height="200"/>
                            <Rect onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} width="500" height="100"/>
                        </Svg>
            case 'sg':
                return <Svg width="100%" height="100%" viewBox="0 0 500 300">
                            <Rect onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} width="500" height="150"/>
                            <Rect onPress={() => this.applySelectedColor(1)} fill={this.state.appliedColors[1]} y="150" width="500" height="150"/>
                            <G transform="translate(20 0) scale(0.1)">
                                <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} d="M 1481.678,720 A 541.5,541.5 0 1 1 398.67798,720 A 541.5,541.5 0 1 1 1481.678,720 z"/>
                                <Path onPress={() => this.applySelectedColor(0)} fill={this.state.appliedColors[0]} d="M 1651.835,720 A 511.73499,511.73499 0 1 1 628.36499,720 A 511.73499,511.73499 0 1 1 1651.835,720 z"/>
                                <Path onPress={() => this.applySelectedColor(2)} fill={this.state.appliedColors[2]} id="star" d="M 1007.1951,733.06439 L 933.63466,676.63425 L 860.09279,733.09117 L 888.40587,642.09687 L 814.61147,586.0053 L 905.6704,586.1981 L 933.6049,495.07467 L 961.56934,586.18798 L 1052.6282,585.96246 L 978.8522,642.0808 L 1007.1951,733.06439 z"/>
                                <Use href="#star" transform="translate(577.18853,0)"/>
                                <Use href="#star" transform="translate(288.88853,-214.21117)"/>
                                <Use href="#star" transform="translate(107.99953,342.74883)"/>
                                <Use href="#star" transform="translate(469.18853,342.74883)"/>
                            </G>
                        </Svg>
                
        }
    }
    
    image = { uri: "https://reactjs.org/logo-og.png" };


    render() {
        return (
            <View style={{height: '100%', backgroundColor: '#0FBEBE'}}>
                <ImageBackground source={require('../es_back.png')} style={{height: '100%', width:'100%'}} imageStyle={{ width:'100%', height:'100%', opacity:0.3, resizeMode : 'repeat', overflow : 'visible', backfaceVisibility: 'visible', flex : 1}}>
                    <View style={{height: '20%', paddingTop: 20}}>
                        <View style={{height: '100%', flexDirection:'row', flex: 1, justifyContent: 'center'}}>
                                {/* <Svg key={0} onPress={() => { this.changeColor(0) }} width={this.state.colors[0] == this.state.currColor? '50' : '40' } height={this.state.colors[0] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[0]}/>
                                </Svg> */}
                                <Svg key={1} onPress={() => { this.changeColor(1) }} width={this.state.colors[1] == this.state.currColor? '50' : '40' } height={this.state.colors[1] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[1]}/>
                                </Svg>
                                <Svg key={2} onPress={() => { this.changeColor(2) }} width={this.state.colors[2] == this.state.currColor? '50' : '40' } height={this.state.colors[2] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[2]}/>
                                </Svg>
                                <Svg key={3} onPress={() => { this.changeColor(3) }} width={this.state.colors[3] == this.state.currColor? '50' : '40' } height={this.state.colors[3] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[3]}/>
                                </Svg>
                                <Svg key={4} onPress={() => { this.changeColor(4) }} width={this.state.colors[4] == this.state.currColor? '50' : '40' } height={this.state.colors[4] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[4]}/>
                                </Svg>
                                <Svg key={5} onPress={() => { this.changeColor(5) }} width={this.state.colors[5] == this.state.currColor? '50' : '40' } height={this.state.colors[5] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[5]}/>
                                </Svg>
                                <Svg key={6} onPress={() => { this.changeColor(6) }} width={this.state.colors[6] == this.state.currColor? '50' : '40' } height={this.state.colors[6] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[6]}/>
                                </Svg>
                                <Svg key={7} onPress={() => { this.changeColor(7) }} width={this.state.colors[7] == this.state.currColor? '50' : '40' } height={this.state.colors[7] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[7]}/>
                                </Svg>
                                <Svg key={8} onPress={() => { this.changeColor(8) }} width={this.state.colors[8] == this.state.currColor? '50' : '40' } height={this.state.colors[8] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[8]}/>
                                </Svg>
                                <Svg key={9} onPress={() => { this.changeColor(9) }} width={this.state.colors[9] == this.state.currColor? '50' : '40' } height={this.state.colors[9] == this.state.currColor? '50' : '40' } viewBox='0 0 29.854 30'>
                                    <Path d='M30.624,10.453c.074.178.122.293,0,0-.285-.687-.115-.278,0,0-.8-1.92-3.541-2.707-5.013-1.031a9.712,9.712,0,0,0-1.221,2.429c-.461.969-1.925,1.9-3,1.362a7.557,7.557,0,0,0,1.933-1.563,2.425,2.425,0,0,0,.44-2.6,2.138,2.138,0,0,0-2.184-.878c-.907.2-1.233.956-1.477,1.76-.293.961-.618,1.438-1.692,1.279-.722-.107-2-.541-1.937-1.458A6.24,6.24,0,0,1,17.692,7.1a8.8,8.8,0,0,0,1.476-2.917A3.266,3.266,0,0,0,16.452.026c-2.089-.271-3.29,1.48-3.063,3.425a20.961,20.961,0,0,0,.85,2.647,7.434,7.434,0,0,1-.156,3.444,2.635,2.635,0,0,1-1.626,1.983c-.958.285-1.429-.556-1.547-1.343-.187-1.247-.765-2.442-2.234-2.1A2.423,2.423,0,0,0,6.892,9.851a2.766,2.766,0,0,0,.819,2.519c.307.376,1.127,1.125,1.041,1.679-.145.934-2-.171-2.3-.4a3.732,3.732,0,0,0-2.728-1.038,3.3,3.3,0,0,0-2.406,1.742c-.984,1.919.448,4,2.237,4.75,2,.838,3.784-.519,5.815-.519.4,0,1.647.033,1.438.732-.276.92-1.311,1.381-2.129,1.688A3.235,3.235,0,0,0,6.629,22.6a2.393,2.393,0,0,0,.532,2.581c1.24,1.322,3.435,1.759,4.757.313a5.939,5.939,0,0,0,1.1-2.285c.069-.21.223-.918.578-.769.541.229.095.9-.106,1.2-1.052,1.562-.2,3.755,1.905,3.26a1.737,1.737,0,0,0,1.372-1.472c.125-.908-.4-2.1.655-2.633.855-.435.729,1.338.7,1.745a8,8,0,0,0,.289,3.129c.623,1.913,2.787,3.2,4.488,1.621a3.251,3.251,0,0,0-.214-4.973c-.692-.543-3.727-1.8-2.081-2.908,1.68-1.131,5.05,1.535,5.819-1.2a1.689,1.689,0,0,0-.9-1.972,2.884,2.884,0,0,0-1.655-.155c-.3.045-1.057.348-1.21-.058-.652-1.742,2.46-3.321,3.771-3.415,1.217-.088,2.41.117,3.418-.751A2.984,2.984,0,0,0,30.624,10.453ZM3.717,14.675c-.655.041-1.175.252-1.205-.238s.476-.92,1.131-.96a1.071,1.071,0,0,1,1.241.813C4.914,14.78,4.372,14.634,3.717,14.675Zm5.494-5.4c-.393.024-.7.151-.723-.143s.286-.552.679-.576a.642.642,0,0,1,.744.488C9.93,9.342,9.6,9.255,9.212,9.279Zm-.14,15.8c-.529.165-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578c.528-.165.515.468.735,1.174S9.6,24.915,9.071,25.08ZM16.094,2.155c-.74,0-1.34.2-1.34-.352s.6-1,1.34-1,1.341.448,1.341,1S16.834,2.155,16.094,2.155Zm4.691,24.8c.221.707.592,1.219.064,1.384s-1.135-.274-1.356-.981a1.208,1.208,0,0,1,.557-1.578C20.577,25.611,20.564,26.244,20.785,26.951Zm6.907-16.433c-.739.046-1.326.284-1.36-.269s.537-1.037,1.276-1.083a1.208,1.208,0,0,1,1.4.917C29.042,10.635,28.431,10.472,27.692,10.517Z' transform='translate(-1.002 0.002)' fill={this.state.colors[9]}/>
                                </Svg>
                            </View>
                    </View>
                    <View style={{height: '80%', flexDirection: 'row', flex: 1, justifyContent: 'center'}}>
                        <View style={{height:'100%', width: '15%', flex: 1, justifyContent: 'center', alignItems: 'center'}}>
                            <Svg width="55" height="55" viewBox="0 0 55 55">
                                <Path d="M27.5,0A27.5,27.5,0,1,1,0,27.5,27.5,27.5,0,0,1,27.5,0Z" fill="#006994"/>
                                <G transform="translate(-39 -66)">
                                    <Path d="M18.549,8.576a16.493,16.493,0,0,0-10.875,4.1L2,7V21.185H16.185L10.48,15.48a12.563,12.563,0,0,1,20.048,5.706l3.735-1.229A16.571,16.571,0,0,0,18.549,8.576Z" transform="translate(49 76.815)" fill="#e3e340"/>
                                </G>
                            </Svg>

                            <View style={{height:20}}></View>

                            <Svg width="55" height="55" viewBox="0 0 55 55">
                                <Path d="M27.5,0A27.5,27.5,0,1,1,0,27.5,27.5,27.5,0,0,1,27.5,0Z" fill="#006994"/>
                                <G transform="translate(-597 -32)">
                                    <Path d="M28.1,7.326,25.769,5l-9.222,9.222L7.326,5,5,7.326l9.222,9.222L5,25.769,7.326,28.1l9.222-9.222L25.769,28.1,28.1,25.769l-9.222-9.222Z" transform="translate(608 43)" fill="#e3e340"/>
                                </G>
                            </Svg>
                        </View>
                        <View style={{height:'100%', width: '70%'}}>
                                {this.RenderFlagSvg(this.state.countryID)}
                        </View>
                        <View style={{height:'100%', width: '15%', flex: 1, justifyContent: 'center', alignItems: 'center'}}>
                            <Svg width="55" height="55" viewBox="0 0 55 55">
                            <Path d="M27.5,0A27.5,27.5,0,1,1,0,27.5,27.5,27.5,0,0,1,27.5,0Z" fill="#006994"/>
                                <G transform="translate(-524 -32)">
                                    <Path d="M13.545,24.8,5.936,17.194,3.4,19.73,13.545,29.875,35.284,8.136,32.748,5.6Z" transform="translate(534 41.4)" fill="#e3e340"/>
                                </G>
                            </Svg>
                        </View>
                    </View>
                </ImageBackground>
            </View>
        )
    }
}

export default CountryScreen;